// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: admin.proto

#include "admin.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetAddressesResponse_Address_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetConnectionsResponse_Connection_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetCredentialsResponse_Credential_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetCredentialsResponse_CredentialsEntry_DoNotUse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetEmailsSetupResponse_EmailSender_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetEmailsSetupResponse_EmailTemplate_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetIdSchemasResponse_JsonSchema_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetIdentitiesByAttributeResponse_Identity_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetIdentitiesByAttributeResponse_Identity_CredentialsIdsEntry_DoNotUse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetIdentitiesResponse_Identity_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetIdentityByIdentifierResponse_Identity_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetIdentityByIdentifierResponse_Identity_CredentialsIdsEntry_DoNotUse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetIdentityLoginAttemptsResponse_Attempt_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetIdentityResponse_CredentialsIdsEntry_DoNotUse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetOAuth2ClientsResponse_Client_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetUserBaseStatisticsResponse_SessionsPerDayEntry_DoNotUse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetUserBaseStatisticsResponse_UsersPerDayEntry_DoNotUse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateEmailsSetupRequest_EmailSender_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateEmailsSetupRequest_EmailTemplate_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fstruct_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
namespace depot {
namespace devtools {
namespace auth {
namespace v0 {
namespace identity {
namespace admin {
class CreateIdentityRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateIdentityRequest> _instance;
} _CreateIdentityRequest_default_instance_;
class CreateIdentityResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateIdentityResponse> _instance;
} _CreateIdentityResponse_default_instance_;
class GetIdentitiesRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetIdentitiesRequest> _instance;
} _GetIdentitiesRequest_default_instance_;
class GetIdentitiesResponse_IdentityDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetIdentitiesResponse_Identity> _instance;
} _GetIdentitiesResponse_Identity_default_instance_;
class GetIdentitiesResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetIdentitiesResponse> _instance;
} _GetIdentitiesResponse_default_instance_;
class GetIdentityRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetIdentityRequest> _instance;
} _GetIdentityRequest_default_instance_;
class GetIdentityResponse_CredentialsIdsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetIdentityResponse_CredentialsIdsEntry_DoNotUse> _instance;
} _GetIdentityResponse_CredentialsIdsEntry_DoNotUse_default_instance_;
class GetIdentityResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetIdentityResponse> _instance;
} _GetIdentityResponse_default_instance_;
class GetIdentityByIdentifierRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetIdentityByIdentifierRequest> _instance;
} _GetIdentityByIdentifierRequest_default_instance_;
class GetIdentityByIdentifierResponse_Identity_CredentialsIdsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetIdentityByIdentifierResponse_Identity_CredentialsIdsEntry_DoNotUse> _instance;
} _GetIdentityByIdentifierResponse_Identity_CredentialsIdsEntry_DoNotUse_default_instance_;
class GetIdentityByIdentifierResponse_IdentityDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetIdentityByIdentifierResponse_Identity> _instance;
} _GetIdentityByIdentifierResponse_Identity_default_instance_;
class GetIdentityByIdentifierResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetIdentityByIdentifierResponse> _instance;
} _GetIdentityByIdentifierResponse_default_instance_;
class GetIdentitiesByAttributeRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetIdentitiesByAttributeRequest> _instance;
} _GetIdentitiesByAttributeRequest_default_instance_;
class GetIdentitiesByAttributeResponse_Identity_CredentialsIdsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetIdentitiesByAttributeResponse_Identity_CredentialsIdsEntry_DoNotUse> _instance;
} _GetIdentitiesByAttributeResponse_Identity_CredentialsIdsEntry_DoNotUse_default_instance_;
class GetIdentitiesByAttributeResponse_IdentityDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetIdentitiesByAttributeResponse_Identity> _instance;
} _GetIdentitiesByAttributeResponse_Identity_default_instance_;
class GetIdentitiesByAttributeResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetIdentitiesByAttributeResponse> _instance;
} _GetIdentitiesByAttributeResponse_default_instance_;
class UpdateIdentityRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateIdentityRequest> _instance;
} _UpdateIdentityRequest_default_instance_;
class UpdateIdentityResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateIdentityResponse> _instance;
} _UpdateIdentityResponse_default_instance_;
class DeleteIdentityRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteIdentityRequest> _instance;
} _DeleteIdentityRequest_default_instance_;
class DeleteIdentityResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteIdentityResponse> _instance;
} _DeleteIdentityResponse_default_instance_;
class GetCredentialsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetCredentialsRequest> _instance;
} _GetCredentialsRequest_default_instance_;
class GetCredentialsResponse_CredentialDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetCredentialsResponse_Credential> _instance;
} _GetCredentialsResponse_Credential_default_instance_;
class GetCredentialsResponse_CredentialsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetCredentialsResponse_CredentialsEntry_DoNotUse> _instance;
} _GetCredentialsResponse_CredentialsEntry_DoNotUse_default_instance_;
class GetCredentialsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetCredentialsResponse> _instance;
} _GetCredentialsResponse_default_instance_;
class UpdateCredentialRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateCredentialRequest> _instance;
} _UpdateCredentialRequest_default_instance_;
class UpdateCredentialResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateCredentialResponse> _instance;
} _UpdateCredentialResponse_default_instance_;
class CreateConnectionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateConnectionRequest> _instance;
} _CreateConnectionRequest_default_instance_;
class CreateConnectionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateConnectionResponse> _instance;
} _CreateConnectionResponse_default_instance_;
class GetConnectionsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetConnectionsRequest> _instance;
} _GetConnectionsRequest_default_instance_;
class GetConnectionsResponse_ConnectionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetConnectionsResponse_Connection> _instance;
} _GetConnectionsResponse_Connection_default_instance_;
class GetConnectionsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetConnectionsResponse> _instance;
} _GetConnectionsResponse_default_instance_;
class UpdateConnectionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateConnectionRequest> _instance;
} _UpdateConnectionRequest_default_instance_;
class UpdateConnectionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateConnectionResponse> _instance;
} _UpdateConnectionResponse_default_instance_;
class DeleteConnectionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteConnectionRequest> _instance;
} _DeleteConnectionRequest_default_instance_;
class DeleteConnectionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteConnectionResponse> _instance;
} _DeleteConnectionResponse_default_instance_;
class GetOAuth2ClientsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetOAuth2ClientsRequest> _instance;
} _GetOAuth2ClientsRequest_default_instance_;
class GetOAuth2ClientsResponse_ClientDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetOAuth2ClientsResponse_Client> _instance;
} _GetOAuth2ClientsResponse_Client_default_instance_;
class GetOAuth2ClientsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetOAuth2ClientsResponse> _instance;
} _GetOAuth2ClientsResponse_default_instance_;
class CreateOAuth2ClientRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateOAuth2ClientRequest> _instance;
} _CreateOAuth2ClientRequest_default_instance_;
class CreateOAuth2ClientResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateOAuth2ClientResponse> _instance;
} _CreateOAuth2ClientResponse_default_instance_;
class UpdateOAuth2ClientRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateOAuth2ClientRequest> _instance;
} _UpdateOAuth2ClientRequest_default_instance_;
class UpdateOAuth2ClientResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateOAuth2ClientResponse> _instance;
} _UpdateOAuth2ClientResponse_default_instance_;
class DeleteOAuth2ClientRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteOAuth2ClientRequest> _instance;
} _DeleteOAuth2ClientRequest_default_instance_;
class DeleteOAuth2ClientResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteOAuth2ClientResponse> _instance;
} _DeleteOAuth2ClientResponse_default_instance_;
class GetAddressesRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAddressesRequest> _instance;
} _GetAddressesRequest_default_instance_;
class GetAddressesResponse_AddressDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAddressesResponse_Address> _instance;
} _GetAddressesResponse_Address_default_instance_;
class GetAddressesResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAddressesResponse> _instance;
} _GetAddressesResponse_default_instance_;
class GetAddressRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAddressRequest> _instance;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr verification_;
} _GetAddressRequest_default_instance_;
class GetAddressResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAddressResponse> _instance;
} _GetAddressResponse_default_instance_;
class UpdateAddressRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateAddressRequest> _instance;
  bool verified_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr address_;
} _UpdateAddressRequest_default_instance_;
class UpdateAddressResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateAddressResponse> _instance;
} _UpdateAddressResponse_default_instance_;
class GetProfileRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetProfileRequest> _instance;
} _GetProfileRequest_default_instance_;
class GetProfileResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetProfileResponse> _instance;
} _GetProfileResponse_default_instance_;
class UpdateProfileRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateProfileRequest> _instance;
} _UpdateProfileRequest_default_instance_;
class UpdateProfileResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateProfileResponse> _instance;
} _UpdateProfileResponse_default_instance_;
class GetIdentityLoginAttemptsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetIdentityLoginAttemptsRequest> _instance;
} _GetIdentityLoginAttemptsRequest_default_instance_;
class GetIdentityLoginAttemptsResponse_AttemptDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetIdentityLoginAttemptsResponse_Attempt> _instance;
} _GetIdentityLoginAttemptsResponse_Attempt_default_instance_;
class GetIdentityLoginAttemptsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetIdentityLoginAttemptsResponse> _instance;
} _GetIdentityLoginAttemptsResponse_default_instance_;
class CreateIdSchemaRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateIdSchemaRequest> _instance;
} _CreateIdSchemaRequest_default_instance_;
class CreateIdSchemaResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateIdSchemaResponse> _instance;
} _CreateIdSchemaResponse_default_instance_;
class GetIdSchemasRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetIdSchemasRequest> _instance;
} _GetIdSchemasRequest_default_instance_;
class GetIdSchemasResponse_JsonSchemaDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetIdSchemasResponse_JsonSchema> _instance;
} _GetIdSchemasResponse_JsonSchema_default_instance_;
class GetIdSchemasResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetIdSchemasResponse> _instance;
} _GetIdSchemasResponse_default_instance_;
class GetIdSchemaRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetIdSchemaRequest> _instance;
} _GetIdSchemaRequest_default_instance_;
class GetIdSchemaResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetIdSchemaResponse> _instance;
} _GetIdSchemaResponse_default_instance_;
class GetDefaultIdSchemaRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetDefaultIdSchemaRequest> _instance;
} _GetDefaultIdSchemaRequest_default_instance_;
class GetDefaultIdSchemaResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetDefaultIdSchemaResponse> _instance;
} _GetDefaultIdSchemaResponse_default_instance_;
class UpdateIdSchemaRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateIdSchemaRequest> _instance;
} _UpdateIdSchemaRequest_default_instance_;
class UpdateIdSchemaResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateIdSchemaResponse> _instance;
} _UpdateIdSchemaResponse_default_instance_;
class MarkDefaultIdSchemaRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MarkDefaultIdSchemaRequest> _instance;
} _MarkDefaultIdSchemaRequest_default_instance_;
class MarkDefaultIdSchemaResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MarkDefaultIdSchemaResponse> _instance;
} _MarkDefaultIdSchemaResponse_default_instance_;
class DeleteIdSchemaRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteIdSchemaRequest> _instance;
} _DeleteIdSchemaRequest_default_instance_;
class DeleteIdSchemaResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteIdSchemaResponse> _instance;
} _DeleteIdSchemaResponse_default_instance_;
class GetEmailsSetupRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetEmailsSetupRequest> _instance;
} _GetEmailsSetupRequest_default_instance_;
class GetEmailsSetupResponse_EmailTemplateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetEmailsSetupResponse_EmailTemplate> _instance;
} _GetEmailsSetupResponse_EmailTemplate_default_instance_;
class GetEmailsSetupResponse_EmailSenderDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetEmailsSetupResponse_EmailSender> _instance;
} _GetEmailsSetupResponse_EmailSender_default_instance_;
class GetEmailsSetupResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetEmailsSetupResponse> _instance;
} _GetEmailsSetupResponse_default_instance_;
class UpdateEmailsSetupRequest_EmailTemplateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateEmailsSetupRequest_EmailTemplate> _instance;
} _UpdateEmailsSetupRequest_EmailTemplate_default_instance_;
class UpdateEmailsSetupRequest_EmailSenderDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateEmailsSetupRequest_EmailSender> _instance;
} _UpdateEmailsSetupRequest_EmailSender_default_instance_;
class UpdateEmailsSetupRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateEmailsSetupRequest> _instance;
} _UpdateEmailsSetupRequest_default_instance_;
class UpdateEmailsSetupResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateEmailsSetupResponse> _instance;
} _UpdateEmailsSetupResponse_default_instance_;
class GetUserBaseStatisticsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetUserBaseStatisticsRequest> _instance;
} _GetUserBaseStatisticsRequest_default_instance_;
class GetUserBaseStatisticsResponse_UsersPerDayEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetUserBaseStatisticsResponse_UsersPerDayEntry_DoNotUse> _instance;
} _GetUserBaseStatisticsResponse_UsersPerDayEntry_DoNotUse_default_instance_;
class GetUserBaseStatisticsResponse_SessionsPerDayEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetUserBaseStatisticsResponse_SessionsPerDayEntry_DoNotUse> _instance;
} _GetUserBaseStatisticsResponse_SessionsPerDayEntry_DoNotUse_default_instance_;
class GetUserBaseStatisticsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetUserBaseStatisticsResponse> _instance;
} _GetUserBaseStatisticsResponse_default_instance_;
}  // namespace admin
}  // namespace identity
}  // namespace v0
}  // namespace auth
}  // namespace devtools
}  // namespace depot
static void InitDefaultsscc_info_CreateConnectionRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_CreateConnectionRequest_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::CreateConnectionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::CreateConnectionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateConnectionRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateConnectionRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_CreateConnectionResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_CreateConnectionResponse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::CreateConnectionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::CreateConnectionResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateConnectionResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateConnectionResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_CreateIdSchemaRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_CreateIdSchemaRequest_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::CreateIdSchemaRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::CreateIdSchemaRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateIdSchemaRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateIdSchemaRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,}};

static void InitDefaultsscc_info_CreateIdSchemaResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_CreateIdSchemaResponse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::CreateIdSchemaResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::CreateIdSchemaResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateIdSchemaResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateIdSchemaResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_CreateIdentityRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_CreateIdentityRequest_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::CreateIdentityRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::CreateIdentityRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateIdentityRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateIdentityRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,}};

static void InitDefaultsscc_info_CreateIdentityResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_CreateIdentityResponse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::CreateIdentityResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::CreateIdentityResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateIdentityResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateIdentityResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_CreateOAuth2ClientRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_CreateOAuth2ClientRequest_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateOAuth2ClientRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateOAuth2ClientRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,}};

static void InitDefaultsscc_info_CreateOAuth2ClientResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_CreateOAuth2ClientResponse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateOAuth2ClientResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateOAuth2ClientResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_DeleteConnectionRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_DeleteConnectionRequest_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::DeleteConnectionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::DeleteConnectionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteConnectionRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteConnectionRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_DeleteConnectionResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_DeleteConnectionResponse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::DeleteConnectionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::DeleteConnectionResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteConnectionResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteConnectionResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_DeleteIdSchemaRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_DeleteIdSchemaRequest_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::DeleteIdSchemaRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::DeleteIdSchemaRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteIdSchemaRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteIdSchemaRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_DeleteIdSchemaResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_DeleteIdSchemaResponse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::DeleteIdSchemaResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::DeleteIdSchemaResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteIdSchemaResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteIdSchemaResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_DeleteIdentityRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_DeleteIdentityRequest_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::DeleteIdentityRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::DeleteIdentityRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteIdentityRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteIdentityRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_DeleteIdentityResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_DeleteIdentityResponse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::DeleteIdentityResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::DeleteIdentityResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteIdentityResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteIdentityResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_DeleteOAuth2ClientRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_DeleteOAuth2ClientRequest_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::DeleteOAuth2ClientRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::DeleteOAuth2ClientRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteOAuth2ClientRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteOAuth2ClientRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_DeleteOAuth2ClientResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_DeleteOAuth2ClientResponse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::DeleteOAuth2ClientResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::DeleteOAuth2ClientResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteOAuth2ClientResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteOAuth2ClientResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_GetAddressRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetAddressRequest_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetAddressRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetAddressRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetAddressRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetAddressRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_GetAddressResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetAddressResponse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetAddressResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetAddressResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetAddressResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetAddressResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_GetAddressesRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetAddressesRequest_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetAddressesRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetAddressesRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetAddressesRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetAddressesRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_GetAddressesResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetAddressesResponse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetAddressesResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetAddressesResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetAddressesResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetAddressesResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {
      &scc_info_GetAddressesResponse_Address_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,}};

static void InitDefaultsscc_info_GetAddressesResponse_Address_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetAddressesResponse_Address_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetAddressesResponse_Address();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetAddressesResponse_Address::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetAddressesResponse_Address_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetAddressesResponse_Address_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_GetConnectionsRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetConnectionsRequest_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetConnectionsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetConnectionsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetConnectionsRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetConnectionsRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_GetConnectionsResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetConnectionsResponse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetConnectionsResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetConnectionsResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {
      &scc_info_GetConnectionsResponse_Connection_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,}};

static void InitDefaultsscc_info_GetConnectionsResponse_Connection_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetConnectionsResponse_Connection_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse_Connection();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse_Connection::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetConnectionsResponse_Connection_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetConnectionsResponse_Connection_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_GetCredentialsRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetCredentialsRequest_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetCredentialsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetCredentialsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetCredentialsRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetCredentialsRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_GetCredentialsResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetCredentialsResponse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetCredentialsResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetCredentialsResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {
      &scc_info_GetCredentialsResponse_CredentialsEntry_DoNotUse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,}};

static void InitDefaultsscc_info_GetCredentialsResponse_Credential_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetCredentialsResponse_Credential_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse_Credential();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse_Credential::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetCredentialsResponse_Credential_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetCredentialsResponse_Credential_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsscc_info_GetCredentialsResponse_CredentialsEntry_DoNotUse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetCredentialsResponse_CredentialsEntry_DoNotUse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse_CredentialsEntry_DoNotUse();
  }
  ::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse_CredentialsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetCredentialsResponse_CredentialsEntry_DoNotUse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetCredentialsResponse_CredentialsEntry_DoNotUse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {
      &scc_info_GetCredentialsResponse_Credential_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,}};

static void InitDefaultsscc_info_GetDefaultIdSchemaRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetDefaultIdSchemaRequest_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetDefaultIdSchemaRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetDefaultIdSchemaRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_GetDefaultIdSchemaResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetDefaultIdSchemaResponse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetDefaultIdSchemaResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GetDefaultIdSchemaResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsscc_info_GetEmailsSetupRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetEmailsSetupRequest_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetEmailsSetupRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetEmailsSetupRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_GetEmailsSetupResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetEmailsSetupResponse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetEmailsSetupResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GetEmailsSetupResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {
      &scc_info_GetEmailsSetupResponse_EmailTemplate_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
      &scc_info_GetEmailsSetupResponse_EmailSender_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,}};

static void InitDefaultsscc_info_GetEmailsSetupResponse_EmailSender_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetEmailsSetupResponse_EmailSender_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailSender();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailSender::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetEmailsSetupResponse_EmailSender_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetEmailsSetupResponse_EmailSender_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_GetEmailsSetupResponse_EmailTemplate_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetEmailsSetupResponse_EmailTemplate_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetEmailsSetupResponse_EmailTemplate_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetEmailsSetupResponse_EmailTemplate_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_GetIdSchemaRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetIdSchemaRequest_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetIdSchemaRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetIdSchemaRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetIdSchemaRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetIdSchemaRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_GetIdSchemaResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetIdSchemaResponse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetIdSchemaResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetIdSchemaResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetIdSchemaResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GetIdSchemaResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsscc_info_GetIdSchemasRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetIdSchemasRequest_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetIdSchemasRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetIdSchemasRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetIdSchemasRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetIdSchemasRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_GetIdSchemasResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetIdSchemasResponse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetIdSchemasResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetIdSchemasResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetIdSchemasResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetIdSchemasResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {
      &scc_info_GetIdSchemasResponse_JsonSchema_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,}};

static void InitDefaultsscc_info_GetIdSchemasResponse_JsonSchema_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetIdSchemasResponse_JsonSchema_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetIdSchemasResponse_JsonSchema();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetIdSchemasResponse_JsonSchema::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetIdSchemasResponse_JsonSchema_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GetIdSchemasResponse_JsonSchema_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsscc_info_GetIdentitiesByAttributeRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetIdentitiesByAttributeRequest_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetIdentitiesByAttributeRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetIdentitiesByAttributeRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_GetIdentitiesByAttributeResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetIdentitiesByAttributeResponse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetIdentitiesByAttributeResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetIdentitiesByAttributeResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {
      &scc_info_GetIdentitiesByAttributeResponse_Identity_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,}};

static void InitDefaultsscc_info_GetIdentitiesByAttributeResponse_Identity_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetIdentitiesByAttributeResponse_Identity_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse_Identity();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse_Identity::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetIdentitiesByAttributeResponse_Identity_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GetIdentitiesByAttributeResponse_Identity_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_GetIdentitiesByAttributeResponse_Identity_CredentialsIdsEntry_DoNotUse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,}};

static void InitDefaultsscc_info_GetIdentitiesByAttributeResponse_Identity_CredentialsIdsEntry_DoNotUse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetIdentitiesByAttributeResponse_Identity_CredentialsIdsEntry_DoNotUse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse_Identity_CredentialsIdsEntry_DoNotUse();
  }
  ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse_Identity_CredentialsIdsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetIdentitiesByAttributeResponse_Identity_CredentialsIdsEntry_DoNotUse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetIdentitiesByAttributeResponse_Identity_CredentialsIdsEntry_DoNotUse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_GetIdentitiesRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetIdentitiesRequest_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetIdentitiesRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetIdentitiesRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetIdentitiesRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetIdentitiesRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_GetIdentitiesResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetIdentitiesResponse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetIdentitiesResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetIdentitiesResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetIdentitiesResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetIdentitiesResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {
      &scc_info_GetIdentitiesResponse_Identity_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,}};

static void InitDefaultsscc_info_GetIdentitiesResponse_Identity_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetIdentitiesResponse_Identity_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetIdentitiesResponse_Identity();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetIdentitiesResponse_Identity::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetIdentitiesResponse_Identity_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetIdentitiesResponse_Identity_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsscc_info_GetIdentityByIdentifierRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetIdentityByIdentifierRequest_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetIdentityByIdentifierRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetIdentityByIdentifierRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_GetIdentityByIdentifierResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetIdentityByIdentifierResponse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetIdentityByIdentifierResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetIdentityByIdentifierResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {
      &scc_info_GetIdentityByIdentifierResponse_Identity_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,}};

static void InitDefaultsscc_info_GetIdentityByIdentifierResponse_Identity_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetIdentityByIdentifierResponse_Identity_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse_Identity();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse_Identity::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetIdentityByIdentifierResponse_Identity_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GetIdentityByIdentifierResponse_Identity_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_GetIdentityByIdentifierResponse_Identity_CredentialsIdsEntry_DoNotUse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,}};

static void InitDefaultsscc_info_GetIdentityByIdentifierResponse_Identity_CredentialsIdsEntry_DoNotUse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetIdentityByIdentifierResponse_Identity_CredentialsIdsEntry_DoNotUse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse_Identity_CredentialsIdsEntry_DoNotUse();
  }
  ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse_Identity_CredentialsIdsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetIdentityByIdentifierResponse_Identity_CredentialsIdsEntry_DoNotUse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetIdentityByIdentifierResponse_Identity_CredentialsIdsEntry_DoNotUse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_GetIdentityLoginAttemptsRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetIdentityLoginAttemptsRequest_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetIdentityLoginAttemptsRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetIdentityLoginAttemptsRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_GetIdentityLoginAttemptsResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetIdentityLoginAttemptsResponse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetIdentityLoginAttemptsResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetIdentityLoginAttemptsResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {
      &scc_info_GetIdentityLoginAttemptsResponse_Attempt_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,}};

static void InitDefaultsscc_info_GetIdentityLoginAttemptsResponse_Attempt_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetIdentityLoginAttemptsResponse_Attempt_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsResponse_Attempt();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsResponse_Attempt::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetIdentityLoginAttemptsResponse_Attempt_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetIdentityLoginAttemptsResponse_Attempt_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsscc_info_GetIdentityRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetIdentityRequest_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetIdentityRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetIdentityRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetIdentityRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetIdentityRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_GetIdentityResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetIdentityResponse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetIdentityResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetIdentityResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetIdentityResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GetIdentityResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_GetIdentityResponse_CredentialsIdsEntry_DoNotUse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,}};

static void InitDefaultsscc_info_GetIdentityResponse_CredentialsIdsEntry_DoNotUse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetIdentityResponse_CredentialsIdsEntry_DoNotUse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetIdentityResponse_CredentialsIdsEntry_DoNotUse();
  }
  ::depot::devtools::auth::v0::identity::admin::GetIdentityResponse_CredentialsIdsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetIdentityResponse_CredentialsIdsEntry_DoNotUse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetIdentityResponse_CredentialsIdsEntry_DoNotUse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_GetOAuth2ClientsRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetOAuth2ClientsRequest_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetOAuth2ClientsRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetOAuth2ClientsRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_GetOAuth2ClientsResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetOAuth2ClientsResponse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetOAuth2ClientsResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetOAuth2ClientsResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {
      &scc_info_GetOAuth2ClientsResponse_Client_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,}};

static void InitDefaultsscc_info_GetOAuth2ClientsResponse_Client_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetOAuth2ClientsResponse_Client_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetOAuth2ClientsResponse_Client_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GetOAuth2ClientsResponse_Client_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,}};

static void InitDefaultsscc_info_GetProfileRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetProfileRequest_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetProfileRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetProfileRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetProfileRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetProfileRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_GetProfileResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetProfileResponse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetProfileResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetProfileResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetProfileResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetProfileResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_GetUserBaseStatisticsRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetUserBaseStatisticsRequest_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetUserBaseStatisticsRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetUserBaseStatisticsRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsscc_info_GetUserBaseStatisticsResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetUserBaseStatisticsResponse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetUserBaseStatisticsResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GetUserBaseStatisticsResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {
      &scc_info_GetUserBaseStatisticsResponse_UsersPerDayEntry_DoNotUse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
      &scc_info_GetUserBaseStatisticsResponse_SessionsPerDayEntry_DoNotUse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,}};

static void InitDefaultsscc_info_GetUserBaseStatisticsResponse_SessionsPerDayEntry_DoNotUse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetUserBaseStatisticsResponse_SessionsPerDayEntry_DoNotUse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse_SessionsPerDayEntry_DoNotUse();
  }
  ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse_SessionsPerDayEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetUserBaseStatisticsResponse_SessionsPerDayEntry_DoNotUse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetUserBaseStatisticsResponse_SessionsPerDayEntry_DoNotUse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_GetUserBaseStatisticsResponse_UsersPerDayEntry_DoNotUse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_GetUserBaseStatisticsResponse_UsersPerDayEntry_DoNotUse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse_UsersPerDayEntry_DoNotUse();
  }
  ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse_UsersPerDayEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetUserBaseStatisticsResponse_UsersPerDayEntry_DoNotUse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetUserBaseStatisticsResponse_UsersPerDayEntry_DoNotUse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_MarkDefaultIdSchemaRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_MarkDefaultIdSchemaRequest_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::MarkDefaultIdSchemaRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::MarkDefaultIdSchemaRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MarkDefaultIdSchemaRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MarkDefaultIdSchemaRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_MarkDefaultIdSchemaResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_MarkDefaultIdSchemaResponse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::MarkDefaultIdSchemaResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::MarkDefaultIdSchemaResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MarkDefaultIdSchemaResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MarkDefaultIdSchemaResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_UpdateAddressRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_UpdateAddressRequest_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::UpdateAddressRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::UpdateAddressRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateAddressRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateAddressRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_UpdateAddressResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_UpdateAddressResponse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::UpdateAddressResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::UpdateAddressResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateAddressResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateAddressResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_UpdateConnectionRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_UpdateConnectionRequest_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::UpdateConnectionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::UpdateConnectionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateConnectionRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateConnectionRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_UpdateConnectionResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_UpdateConnectionResponse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::UpdateConnectionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::UpdateConnectionResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateConnectionResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateConnectionResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_UpdateCredentialRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_UpdateCredentialRequest_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::UpdateCredentialRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::UpdateCredentialRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateCredentialRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateCredentialRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,}};

static void InitDefaultsscc_info_UpdateCredentialResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_UpdateCredentialResponse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::UpdateCredentialResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::UpdateCredentialResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateCredentialResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateCredentialResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_UpdateEmailsSetupRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_UpdateEmailsSetupRequest_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_UpdateEmailsSetupRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_UpdateEmailsSetupRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {
      &scc_info_UpdateEmailsSetupRequest_EmailTemplate_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
      &scc_info_UpdateEmailsSetupRequest_EmailSender_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,}};

static void InitDefaultsscc_info_UpdateEmailsSetupRequest_EmailSender_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_UpdateEmailsSetupRequest_EmailSender_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailSender();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailSender::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateEmailsSetupRequest_EmailSender_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateEmailsSetupRequest_EmailSender_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_UpdateEmailsSetupRequest_EmailTemplate_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_UpdateEmailsSetupRequest_EmailTemplate_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateEmailsSetupRequest_EmailTemplate_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateEmailsSetupRequest_EmailTemplate_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_UpdateEmailsSetupResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_UpdateEmailsSetupResponse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateEmailsSetupResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateEmailsSetupResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_UpdateIdSchemaRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_UpdateIdSchemaRequest_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateIdSchemaRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateIdSchemaRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,}};

static void InitDefaultsscc_info_UpdateIdSchemaResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_UpdateIdSchemaResponse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateIdSchemaResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateIdSchemaResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_UpdateIdentityRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_UpdateIdentityRequest_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::UpdateIdentityRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::UpdateIdentityRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateIdentityRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateIdentityRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_UpdateIdentityResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_UpdateIdentityResponse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::UpdateIdentityResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::UpdateIdentityResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateIdentityResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateIdentityResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_UpdateOAuth2ClientRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_UpdateOAuth2ClientRequest_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateOAuth2ClientRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateOAuth2ClientRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,}};

static void InitDefaultsscc_info_UpdateOAuth2ClientResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_UpdateOAuth2ClientResponse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateOAuth2ClientResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateOAuth2ClientResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_UpdateProfileRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_UpdateProfileRequest_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::UpdateProfileRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::UpdateProfileRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateProfileRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateProfileRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static void InitDefaultsscc_info_UpdateProfileResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::depot::devtools::auth::v0::identity::admin::_UpdateProfileResponse_default_instance_;
    new (ptr) ::depot::devtools::auth::v0::identity::admin::UpdateProfileResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::depot::devtools::auth::v0::identity::admin::UpdateProfileResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateProfileResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateProfileResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto[85];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto[20];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateIdentityRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateIdentityRequest, data_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateIdentityRequest, connection_id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateIdentityRequest, schema_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateIdentityResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateIdentityResponse, identity_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentitiesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentitiesRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentitiesRequest, page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentitiesResponse_Identity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentitiesResponse_Identity, identity_id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentitiesResponse_Identity, created_at_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentitiesResponse_Identity, updated_at_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentitiesResponse_Identity, main_identifier_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentitiesResponse_Identity, schema_id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentitiesResponse_Identity, lock_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentitiesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentitiesResponse, identities_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentitiesResponse, next_page_token_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentitiesResponse, total_size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityRequest, identity_id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityResponse_CredentialsIdsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityResponse_CredentialsIdsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityResponse_CredentialsIdsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityResponse_CredentialsIdsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityResponse, identity_id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityResponse, created_at_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityResponse, updated_at_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityResponse, main_identifier_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityResponse, profile_id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityResponse, addresses_ids_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityResponse, credentials_ids_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityResponse, schema_id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityResponse, lock_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierRequest, attribute_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierRequest, value_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierRequest, connection_id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse_Identity_CredentialsIdsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse_Identity_CredentialsIdsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse_Identity_CredentialsIdsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse_Identity_CredentialsIdsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse_Identity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse_Identity, identity_id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse_Identity, created_at_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse_Identity, updated_at_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse_Identity, main_identifier_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse_Identity, profile_id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse_Identity, addresses_ids_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse_Identity, credentials_ids_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse_Identity, schema_id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse_Identity, lock_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse, identity_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeRequest, attribute_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeRequest, value_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse_Identity_CredentialsIdsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse_Identity_CredentialsIdsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse_Identity_CredentialsIdsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse_Identity_CredentialsIdsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse_Identity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse_Identity, identity_id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse_Identity, created_at_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse_Identity, updated_at_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse_Identity, main_identifier_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse_Identity, profile_id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse_Identity, addresses_ids_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse_Identity, credentials_ids_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse_Identity, schema_id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse_Identity, lock_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse, identities_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateIdentityRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateIdentityRequest, identity_id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateIdentityRequest, lock_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateIdentityResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::DeleteIdentityRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::DeleteIdentityRequest, identity_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::DeleteIdentityResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetCredentialsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetCredentialsRequest, identity_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse_Credential, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse_Credential, credential_id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse_Credential, created_at_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse_Credential, updated_at_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse_Credential, identity_id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse_Credential, type_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse_Credential, connection_id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse_Credential, configured_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse_CredentialsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse_CredentialsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse_CredentialsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse_CredentialsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse, credentials_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateCredentialRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateCredentialRequest, data_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateCredentialRequest, connection_id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateCredentialRequest, identity_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateCredentialResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateConnectionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateConnectionRequest, id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateConnectionRequest, client_id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateConnectionRequest, client_secret_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateConnectionRequest, button_image_url_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateConnectionRequest, provider_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateConnectionRequest, oidc_discovery_url_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateConnectionRequest, mfa_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateConnectionRequest, type_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateConnectionRequest, scopes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateConnectionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateConnectionResponse, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetConnectionsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse_Connection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse_Connection, id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse_Connection, client_id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse_Connection, client_secret_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse_Connection, button_image_url_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse_Connection, provider_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse_Connection, oidc_discovery_url_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse_Connection, mfa_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse_Connection, type_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse_Connection, scopes_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse_Connection, purpose_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse, connections_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateConnectionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateConnectionRequest, client_id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateConnectionRequest, client_secret_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateConnectionRequest, button_image_url_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateConnectionRequest, provider_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateConnectionRequest, oidc_discovery_url_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateConnectionRequest, mfa_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateConnectionRequest, type_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateConnectionRequest, id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateConnectionRequest, scopes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateConnectionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::DeleteConnectionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::DeleteConnectionRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::DeleteConnectionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client, allowed_cors_origins_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client, audience_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client, backchannel_logout_session_required_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client, backchannel_logout_uri_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client, client_id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client, client_name_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client, client_secret_expires_at_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client, client_uri_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client, contacts_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client, created_at_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client, frontchannel_logout_session_required_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client, frontchannel_logout_uri_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client, grant_types_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client, jwks_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client, jwks_uri_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client, logo_uri_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client, metadata_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client, owner_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client, policy_uri_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client, post_logout_redirect_uris_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client, redirect_uris_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client, request_object_signing_alg_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client, request_uris_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client, response_types_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client, scope_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client, sector_identifier_uri_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client, subject_type_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client, token_endpoint_auth_method_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client, token_endpoint_auth_signing_alg_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client, tos_uri_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client, updated_at_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client, userinfo_signed_response_alg_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client, client_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse, clients_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest, allowed_cors_origins_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest, audience_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest, backchannel_logout_session_required_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest, backchannel_logout_uri_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest, client_name_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest, client_uri_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest, contacts_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest, frontchannel_logout_session_required_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest, frontchannel_logout_uri_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest, grant_types_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest, jwks_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest, jwks_uri_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest, logo_uri_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest, metadata_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest, owner_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest, policy_uri_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest, post_logout_redirect_uris_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest, redirect_uris_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest, request_object_signing_alg_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest, request_uris_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest, response_types_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest, scope_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest, sector_identifier_uri_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest, subject_type_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest, token_endpoint_auth_method_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest, token_endpoint_auth_signing_alg_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest, tos_uri_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest, userinfo_signed_response_alg_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest, client_secret_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest, client_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientResponse, client_id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientResponse, client_secret_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest, allowed_cors_origins_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest, audience_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest, backchannel_logout_session_required_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest, backchannel_logout_uri_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest, client_name_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest, client_uri_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest, contacts_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest, frontchannel_logout_session_required_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest, frontchannel_logout_uri_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest, grant_types_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest, jwks_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest, jwks_uri_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest, logo_uri_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest, metadata_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest, owner_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest, policy_uri_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest, post_logout_redirect_uris_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest, redirect_uris_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest, request_object_signing_alg_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest, request_uris_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest, response_types_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest, scope_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest, sector_identifier_uri_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest, subject_type_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest, token_endpoint_auth_method_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest, token_endpoint_auth_signing_alg_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest, tos_uri_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest, userinfo_signed_response_alg_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest, client_secret_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest, client_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientResponse, client_id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientResponse, client_secret_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::DeleteOAuth2ClientRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::DeleteOAuth2ClientRequest, client_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::DeleteOAuth2ClientResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetAddressesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetAddressesRequest, identity_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetAddressesResponse_Address, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetAddressesResponse_Address, id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetAddressesResponse_Address, identity_id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetAddressesResponse_Address, name_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetAddressesResponse_Address, address_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetAddressesResponse_Address, verified_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetAddressesResponse_Address, id_schema_key_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetAddressesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetAddressesResponse, addresses_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetAddressRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetAddressRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::depot::devtools::auth::v0::identity::admin::GetAddressRequestDefaultTypeInternal, id_),
  offsetof(::depot::devtools::auth::v0::identity::admin::GetAddressRequestDefaultTypeInternal, verification_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetAddressRequest, match_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetAddressResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetAddressResponse, id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetAddressResponse, identity_id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetAddressResponse, name_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetAddressResponse, address_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetAddressResponse, verified_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetAddressResponse, id_schema_key_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateAddressRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateAddressRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateAddressRequest, id_),
  offsetof(::depot::devtools::auth::v0::identity::admin::UpdateAddressRequestDefaultTypeInternal, verified_),
  offsetof(::depot::devtools::auth::v0::identity::admin::UpdateAddressRequestDefaultTypeInternal, address_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateAddressRequest, attribute_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateAddressResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetProfileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetProfileRequest, identity_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetProfileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetProfileResponse, profile_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateProfileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateProfileRequest, identity_id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateProfileRequest, profile_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateProfileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsRequest, identity_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsResponse_Attempt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsResponse_Attempt, id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsResponse_Attempt, identity_id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsResponse_Attempt, status_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsResponse_Attempt, authentication_methods_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsResponse_Attempt, created_at_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsResponse_Attempt, expires_at_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsResponse, attempts_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateIdSchemaRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateIdSchemaRequest, name_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateIdSchemaRequest, content_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateIdSchemaResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::CreateIdSchemaResponse, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdSchemasRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdSchemasResponse_JsonSchema, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdSchemasResponse_JsonSchema, id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdSchemasResponse_JsonSchema, name_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdSchemasResponse_JsonSchema, content_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdSchemasResponse_JsonSchema, created_at_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdSchemasResponse_JsonSchema, updated_at_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdSchemasResponse_JsonSchema, is_default_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdSchemasResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdSchemasResponse, jsonschemas_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdSchemaRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdSchemaRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdSchemaResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdSchemaResponse, id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdSchemaResponse, name_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdSchemaResponse, content_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdSchemaResponse, created_at_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdSchemaResponse, updated_at_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetIdSchemaResponse, is_default_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaResponse, id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaResponse, name_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaResponse, content_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaResponse, created_at_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaResponse, updated_at_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaResponse, is_default_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaRequest, id_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaRequest, name_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaRequest, content_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::MarkDefaultIdSchemaRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::MarkDefaultIdSchemaRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::MarkDefaultIdSchemaResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::DeleteIdSchemaRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::DeleteIdSchemaRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::DeleteIdSchemaResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetEmailsSetupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate, content_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate, subject_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailSender, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailSender, email_address_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailSender, smtp_host_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailSender, smtp_port_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailSender, smtp_username_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailSender, smtp_password_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse, welcome_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse, account_verification_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse, account_recovery_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse, account_recovered_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse, otp_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse, smtp_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse, project_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate, content_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate, subject_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailSender, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailSender, email_address_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailSender, smtp_host_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailSender, smtp_port_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailSender, smtp_username_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailSender, smtp_password_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest, welcome_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest, account_verification_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest, account_recovery_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest, account_recovered_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest, otp_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest, smtp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsRequest, days_before_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsRequest, lifetime_start_at_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsRequest, lifetime_end_at_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse_UsersPerDayEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse_UsersPerDayEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse_UsersPerDayEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse_UsersPerDayEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse_SessionsPerDayEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse_SessionsPerDayEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse_SessionsPerDayEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse_SessionsPerDayEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse, total_users_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse, users_per_day_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse, sessions_per_day_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse, total_active_users_),
  PROTOBUF_FIELD_OFFSET(::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse, total_lifetime_used_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::depot::devtools::auth::v0::identity::admin::CreateIdentityRequest)},
  { 8, -1, sizeof(::depot::devtools::auth::v0::identity::admin::CreateIdentityResponse)},
  { 14, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetIdentitiesRequest)},
  { 21, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetIdentitiesResponse_Identity)},
  { 32, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetIdentitiesResponse)},
  { 40, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetIdentityRequest)},
  { 46, 53, sizeof(::depot::devtools::auth::v0::identity::admin::GetIdentityResponse_CredentialsIdsEntry_DoNotUse)},
  { 55, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetIdentityResponse)},
  { 69, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierRequest)},
  { 77, 84, sizeof(::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse_Identity_CredentialsIdsEntry_DoNotUse)},
  { 86, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse_Identity)},
  { 100, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse)},
  { 106, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeRequest)},
  { 113, 120, sizeof(::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse_Identity_CredentialsIdsEntry_DoNotUse)},
  { 122, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse_Identity)},
  { 136, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse)},
  { 142, -1, sizeof(::depot::devtools::auth::v0::identity::admin::UpdateIdentityRequest)},
  { 149, -1, sizeof(::depot::devtools::auth::v0::identity::admin::UpdateIdentityResponse)},
  { 154, -1, sizeof(::depot::devtools::auth::v0::identity::admin::DeleteIdentityRequest)},
  { 160, -1, sizeof(::depot::devtools::auth::v0::identity::admin::DeleteIdentityResponse)},
  { 165, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetCredentialsRequest)},
  { 171, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse_Credential)},
  { 183, 190, sizeof(::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse_CredentialsEntry_DoNotUse)},
  { 192, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse)},
  { 198, -1, sizeof(::depot::devtools::auth::v0::identity::admin::UpdateCredentialRequest)},
  { 206, -1, sizeof(::depot::devtools::auth::v0::identity::admin::UpdateCredentialResponse)},
  { 211, -1, sizeof(::depot::devtools::auth::v0::identity::admin::CreateConnectionRequest)},
  { 225, -1, sizeof(::depot::devtools::auth::v0::identity::admin::CreateConnectionResponse)},
  { 231, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetConnectionsRequest)},
  { 236, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse_Connection)},
  { 251, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse)},
  { 257, -1, sizeof(::depot::devtools::auth::v0::identity::admin::UpdateConnectionRequest)},
  { 271, -1, sizeof(::depot::devtools::auth::v0::identity::admin::UpdateConnectionResponse)},
  { 276, -1, sizeof(::depot::devtools::auth::v0::identity::admin::DeleteConnectionRequest)},
  { 282, -1, sizeof(::depot::devtools::auth::v0::identity::admin::DeleteConnectionResponse)},
  { 287, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsRequest)},
  { 292, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client)},
  { 330, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse)},
  { 336, -1, sizeof(::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest)},
  { 371, -1, sizeof(::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientResponse)},
  { 378, -1, sizeof(::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest)},
  { 413, -1, sizeof(::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientResponse)},
  { 420, -1, sizeof(::depot::devtools::auth::v0::identity::admin::DeleteOAuth2ClientRequest)},
  { 426, -1, sizeof(::depot::devtools::auth::v0::identity::admin::DeleteOAuth2ClientResponse)},
  { 431, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetAddressesRequest)},
  { 437, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetAddressesResponse_Address)},
  { 448, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetAddressesResponse)},
  { 454, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetAddressRequest)},
  { 462, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetAddressResponse)},
  { 473, -1, sizeof(::depot::devtools::auth::v0::identity::admin::UpdateAddressRequest)},
  { 482, -1, sizeof(::depot::devtools::auth::v0::identity::admin::UpdateAddressResponse)},
  { 487, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetProfileRequest)},
  { 493, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetProfileResponse)},
  { 499, -1, sizeof(::depot::devtools::auth::v0::identity::admin::UpdateProfileRequest)},
  { 506, -1, sizeof(::depot::devtools::auth::v0::identity::admin::UpdateProfileResponse)},
  { 511, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsRequest)},
  { 517, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsResponse_Attempt)},
  { 528, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsResponse)},
  { 534, -1, sizeof(::depot::devtools::auth::v0::identity::admin::CreateIdSchemaRequest)},
  { 541, -1, sizeof(::depot::devtools::auth::v0::identity::admin::CreateIdSchemaResponse)},
  { 547, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetIdSchemasRequest)},
  { 552, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetIdSchemasResponse_JsonSchema)},
  { 563, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetIdSchemasResponse)},
  { 569, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetIdSchemaRequest)},
  { 575, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetIdSchemaResponse)},
  { 586, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaRequest)},
  { 591, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaResponse)},
  { 602, -1, sizeof(::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaRequest)},
  { 610, -1, sizeof(::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaResponse)},
  { 615, -1, sizeof(::depot::devtools::auth::v0::identity::admin::MarkDefaultIdSchemaRequest)},
  { 621, -1, sizeof(::depot::devtools::auth::v0::identity::admin::MarkDefaultIdSchemaResponse)},
  { 626, -1, sizeof(::depot::devtools::auth::v0::identity::admin::DeleteIdSchemaRequest)},
  { 632, -1, sizeof(::depot::devtools::auth::v0::identity::admin::DeleteIdSchemaResponse)},
  { 637, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetEmailsSetupRequest)},
  { 642, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate)},
  { 649, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailSender)},
  { 659, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse)},
  { 671, -1, sizeof(::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate)},
  { 678, -1, sizeof(::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailSender)},
  { 688, -1, sizeof(::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest)},
  { 699, -1, sizeof(::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupResponse)},
  { 704, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsRequest)},
  { 712, 719, sizeof(::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse_UsersPerDayEntry_DoNotUse)},
  { 721, 728, sizeof(::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse_SessionsPerDayEntry_DoNotUse)},
  { 730, -1, sizeof(::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_CreateIdentityRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_CreateIdentityResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetIdentitiesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetIdentitiesResponse_Identity_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetIdentitiesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetIdentityRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetIdentityResponse_CredentialsIdsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetIdentityResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetIdentityByIdentifierRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetIdentityByIdentifierResponse_Identity_CredentialsIdsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetIdentityByIdentifierResponse_Identity_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetIdentityByIdentifierResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetIdentitiesByAttributeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetIdentitiesByAttributeResponse_Identity_CredentialsIdsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetIdentitiesByAttributeResponse_Identity_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetIdentitiesByAttributeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_UpdateIdentityRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_UpdateIdentityResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_DeleteIdentityRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_DeleteIdentityResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetCredentialsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetCredentialsResponse_Credential_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetCredentialsResponse_CredentialsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetCredentialsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_UpdateCredentialRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_UpdateCredentialResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_CreateConnectionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_CreateConnectionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetConnectionsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetConnectionsResponse_Connection_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetConnectionsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_UpdateConnectionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_UpdateConnectionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_DeleteConnectionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_DeleteConnectionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetOAuth2ClientsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetOAuth2ClientsResponse_Client_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetOAuth2ClientsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_CreateOAuth2ClientRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_CreateOAuth2ClientResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_UpdateOAuth2ClientRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_UpdateOAuth2ClientResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_DeleteOAuth2ClientRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_DeleteOAuth2ClientResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetAddressesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetAddressesResponse_Address_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetAddressesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetAddressRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetAddressResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_UpdateAddressRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_UpdateAddressResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetProfileRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetProfileResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_UpdateProfileRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_UpdateProfileResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetIdentityLoginAttemptsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetIdentityLoginAttemptsResponse_Attempt_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetIdentityLoginAttemptsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_CreateIdSchemaRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_CreateIdSchemaResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetIdSchemasRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetIdSchemasResponse_JsonSchema_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetIdSchemasResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetIdSchemaRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetIdSchemaResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetDefaultIdSchemaRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetDefaultIdSchemaResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_UpdateIdSchemaRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_UpdateIdSchemaResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_MarkDefaultIdSchemaRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_MarkDefaultIdSchemaResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_DeleteIdSchemaRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_DeleteIdSchemaResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetEmailsSetupRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetEmailsSetupResponse_EmailTemplate_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetEmailsSetupResponse_EmailSender_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetEmailsSetupResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_UpdateEmailsSetupRequest_EmailTemplate_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_UpdateEmailsSetupRequest_EmailSender_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_UpdateEmailsSetupRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_UpdateEmailsSetupResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetUserBaseStatisticsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetUserBaseStatisticsResponse_UsersPerDayEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetUserBaseStatisticsResponse_SessionsPerDayEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::depot::devtools::auth::v0::identity::admin::_GetUserBaseStatisticsResponse_default_instance_),
};

const char descriptor_table_protodef_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n1"
  "admin.proto\022%depot.devtools.auth.v0.iden"
  "tity.admin\032\037google/protobuf/timestamp.pr"
  "oto\032\034google/protobuf/struct.proto\"\206\001\n\025Cr"
  "eateIdentityRequest\022+\n\004data\030\001 \001(\0132\027.goog"
  "le.protobuf.StructR\004data\022#\n\rconnection_i"
  "d\030\002 \001(\tR\014connectionId\022\033\n\tschema_id\030\003 \001(\t"
  "R\010schemaId\"9\n\026CreateIdentityResponse\022\037\n\013"
  "identity_id\030\001 \001(\tR\nidentityId\"R\n\024GetIden"
  "titiesRequest\022\033\n\tpage_size\030\001 \001(\005R\010pageSi"
  "ze\022\035\n\npage_token\030\002 \001(\tR\tpageToken\"\256\004\n\025Ge"
  "tIdentitiesResponse\022e\n\nidentities\030\001 \003(\0132"
  "E.depot.devtools.auth.v0.identity.admin."
  "GetIdentitiesResponse.IdentityR\nidentiti"
  "es\022&\n\017next_page_token\030\002 \001(\tR\rnextPageTok"
  "en\022\035\n\ntotal_size\030\003 \001(\005R\ttotalSize\032\276\002\n\010Id"
  "entity\022\037\n\013identity_id\030\001 \001(\tR\nidentityId\022"
  "9\n\ncreated_at\030\002 \001(\0132\032.google.protobuf.Ti"
  "mestampR\tcreatedAt\0229\n\nupdated_at\030\003 \001(\0132\032"
  ".google.protobuf.TimestampR\tupdatedAt\022\'\n"
  "\017main_identifier\030\004 \001(\tR\016mainIdentifier\022\033"
  "\n\tschema_id\030\005 \001(\tR\010schemaId\022U\n\004lock\030\006 \001("
  "\0162A.depot.devtools.auth.v0.identity.admi"
  "n.GetIdentitiesResponse.LockR\004lock\"&\n\004Lo"
  "ck\022\014\n\010UNLOCKED\020\000\022\020\n\014ADMIN_LOCKED\020\001\"5\n\022Ge"
  "tIdentityRequest\022\037\n\013identity_id\030\002 \001(\tR\ni"
  "dentityId\"\357\004\n\023GetIdentityResponse\022\037\n\013ide"
  "ntity_id\030\001 \001(\tR\nidentityId\0229\n\ncreated_at"
  "\030\002 \001(\0132\032.google.protobuf.TimestampR\tcrea"
  "tedAt\0229\n\nupdated_at\030\003 \001(\0132\032.google.proto"
  "buf.TimestampR\tupdatedAt\022\'\n\017main_identif"
  "ier\030\004 \001(\tR\016mainIdentifier\022\035\n\nprofile_id\030"
  "\005 \001(\tR\tprofileId\022#\n\raddresses_ids\030\006 \003(\tR"
  "\014addressesIds\022w\n\017credentials_ids\030\007 \003(\0132N"
  ".depot.devtools.auth.v0.identity.admin.G"
  "etIdentityResponse.CredentialsIdsEntryR\016"
  "credentialsIds\022\033\n\tschema_id\030\010 \001(\tR\010schem"
  "aId\022S\n\004lock\030\t \001(\0162\?.depot.devtools.auth."
  "v0.identity.admin.GetIdentityResponse.Lo"
  "ckR\004lock\032A\n\023CredentialsIdsEntry\022\020\n\003key\030\001"
  " \001(\tR\003key\022\024\n\005value\030\002 \001(\tR\005value:\0028\001\"&\n\004L"
  "ock\022\014\n\010UNLOCKED\020\000\022\020\n\014ADMIN_LOCKED\020\001\"y\n\036G"
  "etIdentityByIdentifierRequest\022\034\n\tattribu"
  "te\030\001 \001(\tR\tattribute\022\024\n\005value\030\002 \001(\tR\005valu"
  "e\022#\n\rconnection_id\030\003 \001(\tR\014connectionId\"\240"
  "\006\n\037GetIdentityByIdentifierResponse\022k\n\010id"
  "entity\030\001 \001(\0132O.depot.devtools.auth.v0.id"
  "entity.admin.GetIdentityByIdentifierResp"
  "onse.IdentityR\010identity\032\217\005\n\010Identity\022\037\n\013"
  "identity_id\030\001 \001(\tR\nidentityId\0229\n\ncreated"
  "_at\030\002 \001(\0132\032.google.protobuf.TimestampR\tc"
  "reatedAt\0229\n\nupdated_at\030\003 \001(\0132\032.google.pr"
  "otobuf.TimestampR\tupdatedAt\022\'\n\017main_iden"
  "tifier\030\004 \001(\tR\016mainIdentifier\022\035\n\nprofile_"
  "id\030\005 \001(\tR\tprofileId\022#\n\raddresses_ids\030\006 \003"
  "(\tR\014addressesIds\022\214\001\n\017credentials_ids\030\007 \003"
  "(\0132c.depot.devtools.auth.v0.identity.adm"
  "in.GetIdentityByIdentifierResponse.Ident"
  "ity.CredentialsIdsEntryR\016credentialsIds\022"
  "\033\n\tschema_id\030\010 \001(\tR\010schemaId\022h\n\004lock\030\t \001"
  "(\0162T.depot.devtools.auth.v0.identity.adm"
  "in.GetIdentityByIdentifierResponse.Ident"
  "ity.LockR\004lock\032A\n\023CredentialsIdsEntry\022\020\n"
  "\003key\030\001 \001(\tR\003key\022\024\n\005value\030\002 \001(\tR\005value:\0028"
  "\001\"&\n\004Lock\022\014\n\010UNLOCKED\020\000\022\020\n\014ADMIN_LOCKED\020"
  "\001\"U\n\037GetIdentitiesByAttributeRequest\022\034\n\t"
  "attribute\030\001 \001(\tR\tattribute\022\024\n\005value\030\002 \001("
  "\tR\005value\"\250\006\n GetIdentitiesByAttributeRes"
  "ponse\022p\n\nidentities\030\001 \003(\0132P.depot.devtoo"
  "ls.auth.v0.identity.admin.GetIdentitiesB"
  "yAttributeResponse.IdentityR\nidentities\032"
  "\221\005\n\010Identity\022\037\n\013identity_id\030\001 \001(\tR\nident"
  "ityId\0229\n\ncreated_at\030\002 \001(\0132\032.google.proto"
  "buf.TimestampR\tcreatedAt\0229\n\nupdated_at\030\003"
  " \001(\0132\032.google.protobuf.TimestampR\tupdate"
  "dAt\022\'\n\017main_identifier\030\004 \001(\tR\016mainIdenti"
  "fier\022\035\n\nprofile_id\030\005 \001(\tR\tprofileId\022#\n\ra"
  "ddresses_ids\030\006 \003(\tR\014addressesIds\022\215\001\n\017cre"
  "dentials_ids\030\007 \003(\0132d.depot.devtools.auth"
  ".v0.identity.admin.GetIdentitiesByAttrib"
  "uteResponse.Identity.CredentialsIdsEntry"
  "R\016credentialsIds\022\033\n\tschema_id\030\010 \001(\tR\010sch"
  "emaId\022i\n\004lock\030\t \001(\0162U.depot.devtools.aut"
  "h.v0.identity.admin.GetIdentitiesByAttri"
  "buteResponse.Identity.LockR\004lock\032A\n\023Cred"
  "entialsIdsEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005val"
  "ue\030\002 \001(\tR\005value:\0028\001\"&\n\004Lock\022\014\n\010UNLOCKED\020"
  "\000\022\020\n\014ADMIN_LOCKED\020\001\"\267\001\n\025UpdateIdentityRe"
  "quest\022\037\n\013identity_id\030\001 \001(\tR\nidentityId\022U"
  "\n\004lock\030\002 \001(\0162A.depot.devtools.auth.v0.id"
  "entity.admin.UpdateIdentityRequest.LockR"
  "\004lock\"&\n\004Lock\022\014\n\010UNLOCKED\020\000\022\020\n\014ADMIN_LOC"
  "KED\020\001\"\030\n\026UpdateIdentityResponse\"8\n\025Delet"
  "eIdentityRequest\022\037\n\013identity_id\030\001 \001(\tR\ni"
  "dentityId\"\030\n\026DeleteIdentityResponse\"8\n\025G"
  "etCredentialsRequest\022\037\n\013identity_id\030\001 \001("
  "\tR\nidentityId\"\271\004\n\026GetCredentialsResponse"
  "\022p\n\013credentials\030\001 \003(\0132N.depot.devtools.a"
  "uth.v0.identity.admin.GetCredentialsResp"
  "onse.CredentialsEntryR\013credentials\032\241\002\n\nC"
  "redential\022#\n\rcredential_id\030\001 \001(\tR\014creden"
  "tialId\0229\n\ncreated_at\030\002 \001(\0132\032.google.prot"
  "obuf.TimestampR\tcreatedAt\0229\n\nupdated_at\030"
  "\003 \001(\0132\032.google.protobuf.TimestampR\tupdat"
  "edAt\022\037\n\013identity_id\030\004 \001(\tR\nidentityId\022\022\n"
  "\004type\030\005 \001(\005R\004type\022#\n\rconnection_id\030\006 \001(\t"
  "R\014connectionId\022\036\n\nconfigured\030\007 \001(\010R\nconf"
  "igured\032\210\001\n\020CredentialsEntry\022\020\n\003key\030\001 \001(\t"
  "R\003key\022^\n\005value\030\002 \001(\0132H.depot.devtools.au"
  "th.v0.identity.admin.GetCredentialsRespo"
  "nse.CredentialR\005value:\0028\001\"\214\001\n\027UpdateCred"
  "entialRequest\022+\n\004data\030\001 \001(\0132\027.google.pro"
  "tobuf.StructR\004data\022#\n\rconnection_id\030\002 \001("
  "\tR\014connectionId\022\037\n\013identity_id\030\003 \001(\tR\nid"
  "entityId\"\032\n\030UpdateCredentialResponse\"\202\t\n"
  "\027CreateConnectionRequest\022\016\n\002id\030\001 \001(\tR\002id"
  "\022\033\n\tclient_id\030\002 \001(\tR\010clientId\022#\n\rclient_"
  "secret\030\003 \001(\tR\014clientSecret\022(\n\020button_ima"
  "ge_url\030\004 \001(\tR\016buttonImageUrl\022d\n\010provider"
  "\030\006 \001(\0162H.depot.devtools.auth.v0.identity"
  ".admin.CreateConnectionRequest.Providers"
  "R\010provider\022,\n\022oidc_discovery_url\030\007 \001(\tR\020"
  "oidcDiscoveryUrl\022\020\n\003mfa\030\010 \003(\tR\003mfa\022X\n\004ty"
  "pe\030\t \001(\0162D.depot.devtools.auth.v0.identi"
  "ty.admin.CreateConnectionRequest.TypesR\004"
  "type\022\026\n\006scopes\030\n \001(\tR\006scopes\"\223\005\n\tProvide"
  "rs\022\010\n\004NONE\020\000\022\n\n\006OPENID\020\001\022\n\n\006AMAZON\020\002\022\r\n\t"
  "BITBUCKET\020\003\022\007\n\003BOX\020\004\022\017\n\013DAILYMOTION\020\005\022\n\n"
  "\006DEEZER\020\006\022\020\n\014DIGITALOCEAN\020\007\022\013\n\007DISCORD\020\010"
  "\022\013\n\007DROPBOX\020\t\022\r\n\tEVEONLINE\020\n\022\014\n\010FACEBOOK"
  "\020\013\022\n\n\006FITBIT\020\014\022\t\n\005GITEA\020\r\022\n\n\006GITHUB\020\016\022\n\n"
  "\006GITLAB\020\017\022\n\n\006GOOGLE\020\020\022\013\n\007SHOPIFY\020\022\022\016\n\nSO"
  "UNDCLOUD\020\023\022\013\n\007SPOTIFY\020\024\022\t\n\005STEAM\020\025\022\n\n\006ST"
  "RIPE\020\026\022\n\n\006TWITCH\020\027\022\010\n\004UBER\020\030\022\t\n\005WEPAY\020\031\022"
  "\t\n\005YAHOO\020\032\022\n\n\006YAMMER\020\033\022\n\n\006HEROKU\020\034\022\r\n\tIN"
  "STAGRAM\020\035\022\014\n\010INTERCOM\020\036\022\t\n\005KAKAO\020\037\022\n\n\006LA"
  "STFM\020 \022\014\n\010LINKEDIN\020!\022\010\n\004LINE\020\"\022\014\n\010ONEDRI"
  "VE\020#\022\013\n\007AZUREAD\020$\022\023\n\017MICROSOFTONLINE\020%\022\r"
  "\n\tBATTLENET\020&\022\n\n\006PAYPAL\020\'\022\013\n\007TWITTER\020(\022\016"
  "\n\nSALESFORCE\020)\022\014\n\010TYPETALK\020*\022\t\n\005SLACK\020+\022"
  "\n\n\006MEETUP\020,\022\010\n\004XERO\020.\022\006\n\002VK\020/\022\t\n\005NAVER\0200"
  "\022\n\n\006YANDEX\0201\022\r\n\tNEXTCLOUD\0202\022\t\n\005APPLE\0204\022\n"
  "\n\006STRAVA\0205\"=\n\005Types\022\t\n\005UNSET\020\000\022\014\n\010PASSWO"
  "RD\020\001\022\007\n\003OTP\020\002\022\010\n\004TOTP\020\003\022\010\n\004OIDC\020\004\"*\n\030Cre"
  "ateConnectionResponse\022\016\n\002id\030\001 \001(\tR\002id\"\027\n"
  "\025GetConnectionsRequest\"\261\013\n\026GetConnection"
  "sResponse\022j\n\013connections\030\001 \003(\0132H.depot.d"
  "evtools.auth.v0.identity.admin.GetConnec"
  "tionsResponse.ConnectionR\013connections\032\200\004"
  "\n\nConnection\022\016\n\002id\030\001 \001(\tR\002id\022\033\n\tclient_i"
  "d\030\002 \001(\tR\010clientId\022#\n\rclient_secret\030\003 \001(\t"
  "R\014clientSecret\022(\n\020button_image_url\030\004 \001(\t"
  "R\016buttonImageUrl\022c\n\010provider\030\006 \001(\0162G.dep"
  "ot.devtools.auth.v0.identity.admin.GetCo"
  "nnectionsResponse.ProvidersR\010provider\022,\n"
  "\022oidc_discovery_url\030\007 \001(\tR\020oidcDiscovery"
  "Url\022\020\n\003mfa\030\010 \003(\tR\003mfa\022W\n\004type\030\t \001(\0162C.de"
  "pot.devtools.auth.v0.identity.admin.GetC"
  "onnectionsResponse.TypesR\004type\022\026\n\006scopes"
  "\030\n \001(\tR\006scopes\022`\n\007purpose\030\013 \001(\0162F.depot."
  "devtools.auth.v0.identity.admin.GetConne"
  "ctionsResponse.PurposesR\007purpose\"\223\005\n\tPro"
  "viders\022\010\n\004NONE\020\000\022\n\n\006OPENID\020\001\022\n\n\006AMAZON\020\002"
  "\022\r\n\tBITBUCKET\020\003\022\007\n\003BOX\020\004\022\017\n\013DAILYMOTION\020"
  "\005\022\n\n\006DEEZER\020\006\022\020\n\014DIGITALOCEAN\020\007\022\013\n\007DISCO"
  "RD\020\010\022\013\n\007DROPBOX\020\t\022\r\n\tEVEONLINE\020\n\022\014\n\010FACE"
  "BOOK\020\013\022\n\n\006FITBIT\020\014\022\t\n\005GITEA\020\r\022\n\n\006GITHUB\020"
  "\016\022\n\n\006GITLAB\020\017\022\n\n\006GOOGLE\020\020\022\013\n\007SHOPIFY\020\022\022\016"
  "\n\nSOUNDCLOUD\020\023\022\013\n\007SPOTIFY\020\024\022\t\n\005STEAM\020\025\022\n"
  "\n\006STRIPE\020\026\022\n\n\006TWITCH\020\027\022\010\n\004UBER\020\030\022\t\n\005WEPA"
  "Y\020\031\022\t\n\005YAHOO\020\032\022\n\n\006YAMMER\020\033\022\n\n\006HEROKU\020\034\022\r"
  "\n\tINSTAGRAM\020\035\022\014\n\010INTERCOM\020\036\022\t\n\005KAKAO\020\037\022\n"
  "\n\006LASTFM\020 \022\014\n\010LINKEDIN\020!\022\010\n\004LINE\020\"\022\014\n\010ON"
  "EDRIVE\020#\022\013\n\007AZUREAD\020$\022\023\n\017MICROSOFTONLINE"
  "\020%\022\r\n\tBATTLENET\020&\022\n\n\006PAYPAL\020\'\022\013\n\007TWITTER"
  "\020(\022\016\n\nSALESFORCE\020)\022\014\n\010TYPETALK\020*\022\t\n\005SLAC"
  "K\020+\022\n\n\006MEETUP\020,\022\010\n\004XERO\020.\022\006\n\002VK\020/\022\t\n\005NAV"
  "ER\0200\022\n\n\006YANDEX\0201\022\r\n\tNEXTCLOUD\0202\022\t\n\005APPLE"
  "\0204\022\n\n\006STRAVA\0205\"=\n\005Types\022\t\n\005UNSET\020\000\022\014\n\010PA"
  "SSWORD\020\001\022\007\n\003OTP\020\002\022\010\n\004TOTP\020\003\022\010\n\004OIDC\020\004\"S\n"
  "\010Purposes\022\023\n\017PURPOSE_UNKNOWN\020\000\022\027\n\023PURPOS"
  "E_MAIN_FACTOR\020\001\022\031\n\025PURPOSE_SECOND_FACTOR"
  "\020\002\"\210\t\n\027UpdateConnectionRequest\022\033\n\tclient"
  "_id\030\002 \001(\tR\010clientId\022#\n\rclient_secret\030\003 \001"
  "(\tR\014clientSecret\022(\n\020button_image_url\030\004 \001"
  "(\tR\016buttonImageUrl\022d\n\010provider\030\006 \001(\0162H.d"
  "epot.devtools.auth.v0.identity.admin.Upd"
  "ateConnectionRequest.ProvidersR\010provider"
  "\022,\n\022oidc_discovery_url\030\007 \001(\tR\020oidcDiscov"
  "eryUrl\022\020\n\003mfa\030\010 \003(\tR\003mfa\022X\n\004type\030\t \001(\0162D"
  ".depot.devtools.auth.v0.identity.admin.U"
  "pdateConnectionRequest.TypesR\004type\022\016\n\002id"
  "\030\n \001(\tR\002id\022\026\n\006scopes\030\013 \001(\tR\006scopes\"\223\005\n\tP"
  "roviders\022\010\n\004NONE\020\000\022\n\n\006OPENID\020\001\022\n\n\006AMAZON"
  "\020\002\022\r\n\tBITBUCKET\020\003\022\007\n\003BOX\020\004\022\017\n\013DAILYMOTIO"
  "N\020\005\022\n\n\006DEEZER\020\006\022\020\n\014DIGITALOCEAN\020\007\022\013\n\007DIS"
  "CORD\020\010\022\013\n\007DROPBOX\020\t\022\r\n\tEVEONLINE\020\n\022\014\n\010FA"
  "CEBOOK\020\013\022\n\n\006FITBIT\020\014\022\t\n\005GITEA\020\r\022\n\n\006GITHU"
  "B\020\016\022\n\n\006GITLAB\020\017\022\n\n\006GOOGLE\020\020\022\013\n\007SHOPIFY\020\022"
  "\022\016\n\nSOUNDCLOUD\020\023\022\013\n\007SPOTIFY\020\024\022\t\n\005STEAM\020\025"
  "\022\n\n\006STRIPE\020\026\022\n\n\006TWITCH\020\027\022\010\n\004UBER\020\030\022\t\n\005WE"
  "PAY\020\031\022\t\n\005YAHOO\020\032\022\n\n\006YAMMER\020\033\022\n\n\006HEROKU\020\034"
  "\022\r\n\tINSTAGRAM\020\035\022\014\n\010INTERCOM\020\036\022\t\n\005KAKAO\020\037"
  "\022\n\n\006LASTFM\020 \022\014\n\010LINKEDIN\020!\022\010\n\004LINE\020\"\022\014\n\010"
  "ONEDRIVE\020#\022\013\n\007AZUREAD\020$\022\023\n\017MICROSOFTONLI"
  "NE\020%\022\r\n\tBATTLENET\020&\022\n\n\006PAYPAL\020\'\022\013\n\007TWITT"
  "ER\020(\022\016\n\nSALESFORCE\020)\022\014\n\010TYPETALK\020*\022\t\n\005SL"
  "ACK\020+\022\n\n\006MEETUP\020,\022\010\n\004XERO\020.\022\006\n\002VK\020/\022\t\n\005N"
  "AVER\0200\022\n\n\006YANDEX\0201\022\r\n\tNEXTCLOUD\0202\022\t\n\005APP"
  "LE\0204\022\n\n\006STRAVA\0205\"=\n\005Types\022\t\n\005UNSET\020\000\022\014\n\010"
  "PASSWORD\020\001\022\007\n\003OTP\020\002\022\010\n\004TOTP\020\003\022\010\n\004OIDC\020\004J"
  "\004\010\001\020\002\"\032\n\030UpdateConnectionResponse\")\n\027Del"
  "eteConnectionRequest\022\016\n\002id\030\001 \001(\tR\002id\"\032\n\030"
  "DeleteConnectionResponse\"\031\n\027GetOAuth2Cli"
  "entsRequest\"\241\020\n\030GetOAuth2ClientsResponse"
  "\022`\n\007clients\030\001 \003(\0132F.depot.devtools.auth."
  "v0.identity.admin.GetOAuth2ClientsRespon"
  "se.ClientR\007clients\032\242\017\n\006Client\0220\n\024allowed"
  "_cors_origins\030\001 \003(\tR\022allowedCorsOrigins\022"
  "\032\n\010audience\030\002 \003(\tR\010audience\022M\n#backchann"
  "el_logout_session_required\030\003 \001(\010R backch"
  "annelLogoutSessionRequired\0224\n\026backchanne"
  "l_logout_uri\030\004 \001(\tR\024backchannelLogoutUri"
  "\022\033\n\tclient_id\030\005 \001(\tR\010clientId\022\037\n\013client_"
  "name\030\006 \001(\tR\nclientName\0227\n\030client_secret_"
  "expires_at\030\007 \001(\003R\025clientSecretExpiresAt\022"
  "\035\n\nclient_uri\030\010 \001(\tR\tclientUri\022\032\n\010contac"
  "ts\030\t \003(\tR\010contacts\0229\n\ncreated_at\030\n \001(\0132\032"
  ".google.protobuf.TimestampR\tcreatedAt\022O\n"
  "$frontchannel_logout_session_required\030\013 "
  "\001(\010R!frontchannelLogoutSessionRequired\0226"
  "\n\027frontchannel_logout_uri\030\014 \001(\tR\025frontch"
  "annelLogoutUri\022Q\n\013grant_types\030\r \003(\01620.de"
  "pot.devtools.auth.v0.identity.admin.Gran"
  "tTypeR\ngrantTypes\022+\n\004jwks\030\016 \001(\0132\027.google"
  ".protobuf.StructR\004jwks\022\031\n\010jwks_uri\030\017 \001(\t"
  "R\007jwksUri\022\031\n\010logo_uri\030\020 \001(\tR\007logoUri\0223\n\010"
  "metadata\030\021 \001(\0132\027.google.protobuf.StructR"
  "\010metadata\022\024\n\005owner\030\022 \001(\tR\005owner\022\035\n\npolic"
  "y_uri\030\023 \001(\tR\tpolicyUri\0229\n\031post_logout_re"
  "direct_uris\030\024 \003(\tR\026postLogoutRedirectUri"
  "s\022#\n\rredirect_uris\030\025 \003(\tR\014redirectUris\022{"
  "\n\032request_object_signing_alg\030\026 \001(\0162>.dep"
  "ot.devtools.auth.v0.identity.admin.Reque"
  "stObjectSigningAlgR\027requestObjectSigning"
  "Alg\022!\n\014request_uris\030\027 \003(\tR\013requestUris\022Z"
  "\n\016response_types\030\030 \003(\01623.depot.devtools."
  "auth.v0.identity.admin.ResponseTypeR\rres"
  "ponseTypes\022\024\n\005scope\030\031 \001(\tR\005scope\0222\n\025sect"
  "or_identifier_uri\030\032 \001(\tR\023sectorIdentifie"
  "rUri\022U\n\014subject_type\030\033 \001(\01622.depot.devto"
  "ols.auth.v0.identity.admin.SubjectTypeR\013"
  "subjectType\022{\n\032token_endpoint_auth_metho"
  "d\030\034 \001(\0162>.depot.devtools.auth.v0.identit"
  "y.admin.TokenEndpointAuthMethodR\027tokenEn"
  "dpointAuthMethod\022\210\001\n\037token_endpoint_auth"
  "_signing_alg\030\035 \001(\0162B.depot.devtools.auth"
  ".v0.identity.admin.TokenEndpointAuthSign"
  "ingAlgR\033tokenEndpointAuthSigningAlg\022\027\n\007t"
  "os_uri\030\036 \001(\tR\006tosUri\0229\n\nupdated_at\030\037 \001(\013"
  "2\032.google.protobuf.TimestampR\tupdatedAt\022"
  "\201\001\n\034userinfo_signed_response_alg\030  \001(\0162@"
  ".depot.devtools.auth.v0.identity.admin.U"
  "serinfoSignedResponseAlgR\031userinfoSigned"
  "ResponseAlg\022R\n\013client_type\030! \001(\01621.depot"
  ".devtools.auth.v0.identity.admin.ClientT"
  "ypeR\nclientType\"\216\016\n\031CreateOAuth2ClientRe"
  "quest\0220\n\024allowed_cors_origins\030\001 \003(\tR\022all"
  "owedCorsOrigins\022\032\n\010audience\030\002 \003(\tR\010audie"
  "nce\022M\n#backchannel_logout_session_requir"
  "ed\030\003 \001(\010R backchannelLogoutSessionRequir"
  "ed\0224\n\026backchannel_logout_uri\030\004 \001(\tR\024back"
  "channelLogoutUri\022\037\n\013client_name\030\006 \001(\tR\nc"
  "lientName\022\035\n\nclient_uri\030\010 \001(\tR\tclientUri"
  "\022\032\n\010contacts\030\t \003(\tR\010contacts\022O\n$frontcha"
  "nnel_logout_session_required\030\013 \001(\010R!fron"
  "tchannelLogoutSessionRequired\0226\n\027frontch"
  "annel_logout_uri\030\014 \001(\tR\025frontchannelLogo"
  "utUri\022Q\n\013grant_types\030\r \003(\01620.depot.devto"
  "ols.auth.v0.identity.admin.GrantTypeR\ngr"
  "antTypes\022+\n\004jwks\030\016 \001(\0132\027.google.protobuf"
  ".StructR\004jwks\022\031\n\010jwks_uri\030\017 \001(\tR\007jwksUri"
  "\022\031\n\010logo_uri\030\020 \001(\tR\007logoUri\0223\n\010metadata\030"
  "\021 \001(\0132\027.google.protobuf.StructR\010metadata"
  "\022\024\n\005owner\030\022 \001(\tR\005owner\022\035\n\npolicy_uri\030\023 \001"
  "(\tR\tpolicyUri\0229\n\031post_logout_redirect_ur"
  "is\030\024 \003(\tR\026postLogoutRedirectUris\022#\n\rredi"
  "rect_uris\030\025 \003(\tR\014redirectUris\022{\n\032request"
  "_object_signing_alg\030\026 \001(\0162>.depot.devtoo"
  "ls.auth.v0.identity.admin.RequestObjectS"
  "igningAlgR\027requestObjectSigningAlg\022!\n\014re"
  "quest_uris\030\027 \003(\tR\013requestUris\022Z\n\016respons"
  "e_types\030\030 \003(\01623.depot.devtools.auth.v0.i"
  "dentity.admin.ResponseTypeR\rresponseType"
  "s\022\024\n\005scope\030\031 \001(\tR\005scope\0222\n\025sector_identi"
  "fier_uri\030\032 \001(\tR\023sectorIdentifierUri\022U\n\014s"
  "ubject_type\030\033 \001(\01622.depot.devtools.auth."
  "v0.identity.admin.SubjectTypeR\013subjectTy"
  "pe\022{\n\032token_endpoint_auth_method\030\034 \001(\0162>"
  ".depot.devtools.auth.v0.identity.admin.T"
  "okenEndpointAuthMethodR\027tokenEndpointAut"
  "hMethod\022\210\001\n\037token_endpoint_auth_signing_"
  "alg\030\035 \001(\0162B.depot.devtools.auth.v0.ident"
  "ity.admin.TokenEndpointAuthSigningAlgR\033t"
  "okenEndpointAuthSigningAlg\022\027\n\007tos_uri\030\036 "
  "\001(\tR\006tosUri\022\201\001\n\034userinfo_signed_response"
  "_alg\030\037 \001(\0162@.depot.devtools.auth.v0.iden"
  "tity.admin.UserinfoSignedResponseAlgR\031us"
  "erinfoSignedResponseAlg\022#\n\rclient_secret"
  "\030  \001(\tR\014clientSecret\022R\n\013client_type\030! \001("
  "\01621.depot.devtools.auth.v0.identity.admi"
  "n.ClientTypeR\nclientType\"^\n\032CreateOAuth2"
  "ClientResponse\022\033\n\tclient_id\030\001 \001(\tR\010clien"
  "tId\022#\n\rclient_secret\030\002 \001(\tR\014clientSecret"
  "\"\327\r\n\031UpdateOAuth2ClientRequest\0220\n\024allowe"
  "d_cors_origins\030\001 \003(\tR\022allowedCorsOrigins"
  "\022\032\n\010audience\030\002 \003(\tR\010audience\022M\n#backchan"
  "nel_logout_session_required\030\003 \001(\010R backc"
  "hannelLogoutSessionRequired\0224\n\026backchann"
  "el_logout_uri\030\004 \001(\tR\024backchannelLogoutUr"
  "i\022\037\n\013client_name\030\006 \001(\tR\nclientName\022\035\n\ncl"
  "ient_uri\030\010 \001(\tR\tclientUri\022\032\n\010contacts\030\t "
  "\003(\tR\010contacts\022O\n$frontchannel_logout_ses"
  "sion_required\030\013 \001(\010R!frontchannelLogoutS"
  "essionRequired\0226\n\027frontchannel_logout_ur"
  "i\030\014 \001(\tR\025frontchannelLogoutUri\022Q\n\013grant_"
  "types\030\r \003(\01620.depot.devtools.auth.v0.ide"
  "ntity.admin.GrantTypeR\ngrantTypes\022+\n\004jwk"
  "s\030\016 \001(\0132\027.google.protobuf.StructR\004jwks\022\031"
  "\n\010jwks_uri\030\017 \001(\tR\007jwksUri\022\031\n\010logo_uri\030\020 "
  "\001(\tR\007logoUri\0223\n\010metadata\030\021 \001(\0132\027.google."
  "protobuf.StructR\010metadata\022\024\n\005owner\030\022 \001(\t"
  "R\005owner\022\035\n\npolicy_uri\030\023 \001(\tR\tpolicyUri\0229"
  "\n\031post_logout_redirect_uris\030\024 \003(\tR\026postL"
  "ogoutRedirectUris\022#\n\rredirect_uris\030\025 \003(\t"
  "R\014redirectUris\022{\n\032request_object_signing"
  "_alg\030\026 \001(\0162>.depot.devtools.auth.v0.iden"
  "tity.admin.RequestObjectSigningAlgR\027requ"
  "estObjectSigningAlg\022!\n\014request_uris\030\027 \003("
  "\tR\013requestUris\022Z\n\016response_types\030\030 \003(\01623"
  ".depot.devtools.auth.v0.identity.admin.R"
  "esponseTypeR\rresponseTypes\022\024\n\005scope\030\031 \001("
  "\tR\005scope\0222\n\025sector_identifier_uri\030\032 \001(\tR"
  "\023sectorIdentifierUri\022U\n\014subject_type\030\033 \001"
  "(\01622.depot.devtools.auth.v0.identity.adm"
  "in.SubjectTypeR\013subjectType\022{\n\032token_end"
  "point_auth_method\030\034 \001(\0162>.depot.devtools"
  ".auth.v0.identity.admin.TokenEndpointAut"
  "hMethodR\027tokenEndpointAuthMethod\022\210\001\n\037tok"
  "en_endpoint_auth_signing_alg\030\035 \001(\0162B.dep"
  "ot.devtools.auth.v0.identity.admin.Token"
  "EndpointAuthSigningAlgR\033tokenEndpointAut"
  "hSigningAlg\022\027\n\007tos_uri\030\036 \001(\tR\006tosUri\022\201\001\n"
  "\034userinfo_signed_response_alg\030\037 \001(\0162@.de"
  "pot.devtools.auth.v0.identity.admin.User"
  "infoSignedResponseAlgR\031userinfoSignedRes"
  "ponseAlg\022#\n\rclient_secret\030  \001(\tR\014clientS"
  "ecret\022\033\n\tclient_id\030! \001(\tR\010clientId\"^\n\032Up"
  "dateOAuth2ClientResponse\022\033\n\tclient_id\030\001 "
  "\001(\tR\010clientId\022#\n\rclient_secret\030\002 \001(\tR\014cl"
  "ientSecret\"8\n\031DeleteOAuth2ClientRequest\022"
  "\033\n\tclient_id\030\001 \001(\tR\010clientId\"\034\n\032DeleteOA"
  "uth2ClientResponse\"6\n\023GetAddressesReques"
  "t\022\037\n\013identity_id\030\001 \001(\tR\nidentityId\"\244\002\n\024G"
  "etAddressesResponse\022a\n\taddresses\030\001 \003(\0132C"
  ".depot.devtools.auth.v0.identity.admin.G"
  "etAddressesResponse.AddressR\taddresses\032\250"
  "\001\n\007Address\022\016\n\002id\030\001 \001(\tR\002id\022\037\n\013identity_i"
  "d\030\002 \001(\tR\nidentityId\022\022\n\004name\030\003 \001(\tR\004name\022"
  "\030\n\007address\030\004 \001(\tR\007address\022\032\n\010verified\030\005 "
  "\001(\010R\010verified\022\"\n\rid_schema_key\030\006 \001(\tR\013id"
  "SchemaKey\"T\n\021GetAddressRequest\022\020\n\002id\030\001 \001"
  "(\tH\000R\002id\022$\n\014verification\030\002 \001(\tH\000R\014verifi"
  "cationB\007\n\005match\"\263\001\n\022GetAddressResponse\022\016"
  "\n\002id\030\001 \001(\tR\002id\022\037\n\013identity_id\030\002 \001(\tR\nide"
  "ntityId\022\022\n\004name\030\003 \001(\tR\004name\022\030\n\007address\030\004"
  " \001(\tR\007address\022\032\n\010verified\030\005 \001(\010R\010verifie"
  "d\022\"\n\rid_schema_key\030\006 \001(\tR\013idSchemaKey\"m\n"
  "\024UpdateAddressRequest\022\016\n\002id\030\001 \001(\tR\002id\022\034\n"
  "\010verified\030\002 \001(\010H\000R\010verified\022\032\n\007address\030\003"
  " \001(\tH\000R\007addressB\013\n\tattribute\"\027\n\025UpdateAd"
  "dressResponse\"4\n\021GetProfileRequest\022\037\n\013id"
  "entity_id\030\001 \001(\tR\nidentityId\".\n\022GetProfil"
  "eResponse\022\030\n\007profile\030\001 \001(\tR\007profile\"Q\n\024U"
  "pdateProfileRequest\022\037\n\013identity_id\030\001 \001(\t"
  "R\nidentityId\022\030\n\007profile\030\002 \001(\tR\007profile\"\027"
  "\n\025UpdateProfileResponse\"B\n\037GetIdentityLo"
  "ginAttemptsRequest\022\037\n\013identity_id\030\001 \001(\tR"
  "\nidentityId\"\221\003\n GetIdentityLoginAttempts"
  "Response\022k\n\010attempts\030\001 \003(\0132O.depot.devto"
  "ols.auth.v0.identity.admin.GetIdentityLo"
  "ginAttemptsResponse.AttemptR\010attempts\032\377\001"
  "\n\007Attempt\022\016\n\002id\030\001 \001(\tR\002id\022\037\n\013identity_id"
  "\030\002 \001(\tR\nidentityId\022\026\n\006status\030\003 \001(\tR\006stat"
  "us\0225\n\026authentication_methods\030\004 \003(\tR\025auth"
  "enticationMethods\0229\n\ncreated_at\030\005 \001(\0132\032."
  "google.protobuf.TimestampR\tcreatedAt\0229\n\n"
  "expires_at\030\006 \001(\0132\032.google.protobuf.Times"
  "tampR\texpiresAt\"^\n\025CreateIdSchemaRequest"
  "\022\022\n\004name\030\001 \001(\tR\004name\0221\n\007content\030\002 \001(\0132\027."
  "google.protobuf.StructR\007content\"(\n\026Creat"
  "eIdSchemaResponse\022\016\n\002id\030\002 \001(\tR\002id\"\025\n\023Get"
  "IdSchemasRequest\"\373\002\n\024GetIdSchemasRespons"
  "e\022h\n\013jsonschemas\030\001 \003(\0132F.depot.devtools."
  "auth.v0.identity.admin.GetIdSchemasRespo"
  "nse.JsonSchemaR\013jsonschemas\032\370\001\n\nJsonSche"
  "ma\022\016\n\002id\030\001 \001(\tR\002id\022\022\n\004name\030\002 \001(\tR\004name\0221"
  "\n\007content\030\003 \001(\0132\027.google.protobuf.Struct"
  "R\007content\0229\n\ncreated_at\030\004 \001(\0132\032.google.p"
  "rotobuf.TimestampR\tcreatedAt\0229\n\nupdated_"
  "at\030\005 \001(\0132\032.google.protobuf.TimestampR\tup"
  "datedAt\022\035\n\nis_default\030\006 \001(\010R\tisDefault\"$"
  "\n\022GetIdSchemaRequest\022\016\n\002id\030\001 \001(\tR\002id\"\201\002\n"
  "\023GetIdSchemaResponse\022\016\n\002id\030\001 \001(\tR\002id\022\022\n\004"
  "name\030\002 \001(\tR\004name\0221\n\007content\030\003 \001(\0132\027.goog"
  "le.protobuf.StructR\007content\0229\n\ncreated_a"
  "t\030\004 \001(\0132\032.google.protobuf.TimestampR\tcre"
  "atedAt\0229\n\nupdated_at\030\005 \001(\0132\032.google.prot"
  "obuf.TimestampR\tupdatedAt\022\035\n\nis_default\030"
  "\006 \001(\010R\tisDefault\"\033\n\031GetDefaultIdSchemaRe"
  "quest\"\210\002\n\032GetDefaultIdSchemaResponse\022\016\n\002"
  "id\030\001 \001(\tR\002id\022\022\n\004name\030\002 \001(\tR\004name\0221\n\007cont"
  "ent\030\003 \001(\0132\027.google.protobuf.StructR\007cont"
  "ent\0229\n\ncreated_at\030\004 \001(\0132\032.google.protobu"
  "f.TimestampR\tcreatedAt\0229\n\nupdated_at\030\005 \001"
  "(\0132\032.google.protobuf.TimestampR\tupdatedA"
  "t\022\035\n\nis_default\030\006 \001(\010R\tisDefault\"n\n\025Upda"
  "teIdSchemaRequest\022\016\n\002id\030\001 \001(\tR\002id\022\022\n\004nam"
  "e\030\002 \001(\tR\004name\0221\n\007content\030\003 \001(\0132\027.google."
  "protobuf.StructR\007content\"\030\n\026UpdateIdSche"
  "maResponse\",\n\032MarkDefaultIdSchemaRequest"
  "\022\016\n\002id\030\001 \001(\tR\002id\"\035\n\033MarkDefaultIdSchemaR"
  "esponse\"\'\n\025DeleteIdSchemaRequest\022\016\n\002id\030\001"
  " \001(\tR\002id\"\030\n\026DeleteIdSchemaResponse\"\027\n\025Ge"
  "tEmailsSetupRequest\"\314\007\n\026GetEmailsSetupRe"
  "sponse\022e\n\007welcome\030\001 \001(\0132K.depot.devtools"
  ".auth.v0.identity.admin.GetEmailsSetupRe"
  "sponse.EmailTemplateR\007welcome\022~\n\024account"
  "_verification\030\002 \001(\0132K.depot.devtools.aut"
  "h.v0.identity.admin.GetEmailsSetupRespon"
  "se.EmailTemplateR\023accountVerification\022v\n"
  "\020account_recovery\030\003 \001(\0132K.depot.devtools"
  ".auth.v0.identity.admin.GetEmailsSetupRe"
  "sponse.EmailTemplateR\017accountRecovery\022x\n"
  "\021account_recovered\030\004 \001(\0132K.depot.devtool"
  "s.auth.v0.identity.admin.GetEmailsSetupR"
  "esponse.EmailTemplateR\020accountRecovered\022"
  "]\n\003otp\030\005 \001(\0132K.depot.devtools.auth.v0.id"
  "entity.admin.GetEmailsSetupResponse.Emai"
  "lTemplateR\003otp\022]\n\004smtp\030\006 \001(\0132I.depot.dev"
  "tools.auth.v0.identity.admin.GetEmailsSe"
  "tupResponse.EmailSenderR\004smtp\022\035\n\nproject"
  "_id\030\007 \001(\tR\tprojectId\032C\n\rEmailTemplate\022\030\n"
  "\007content\030\003 \001(\tR\007content\022\030\n\007subject\030\004 \001(\t"
  "R\007subject\032\266\001\n\013EmailSender\022#\n\remail_addre"
  "ss\030\001 \001(\tR\014emailAddress\022\033\n\tsmtp_host\030\002 \001("
  "\tR\010smtpHost\022\033\n\tsmtp_port\030\003 \001(\rR\010smtpPort"
  "\022#\n\rsmtp_username\030\004 \001(\tR\014smtpUsername\022#\n"
  "\rsmtp_password\030\005 \001(\tR\014smtpPassword\"\274\007\n\030U"
  "pdateEmailsSetupRequest\022g\n\007welcome\030\001 \001(\013"
  "2M.depot.devtools.auth.v0.identity.admin"
  ".UpdateEmailsSetupRequest.EmailTemplateR"
  "\007welcome\022\200\001\n\024account_verification\030\002 \001(\0132"
  "M.depot.devtools.auth.v0.identity.admin."
  "UpdateEmailsSetupRequest.EmailTemplateR\023"
  "accountVerification\022x\n\020account_recovery\030"
  "\003 \001(\0132M.depot.devtools.auth.v0.identity."
  "admin.UpdateEmailsSetupRequest.EmailTemp"
  "lateR\017accountRecovery\022z\n\021account_recover"
  "ed\030\004 \001(\0132M.depot.devtools.auth.v0.identi"
  "ty.admin.UpdateEmailsSetupRequest.EmailT"
  "emplateR\020accountRecovered\022_\n\003otp\030\005 \001(\0132M"
  ".depot.devtools.auth.v0.identity.admin.U"
  "pdateEmailsSetupRequest.EmailTemplateR\003o"
  "tp\022_\n\004smtp\030\006 \001(\0132K.depot.devtools.auth.v"
  "0.identity.admin.UpdateEmailsSetupReques"
  "t.EmailSenderR\004smtp\032C\n\rEmailTemplate\022\030\n\007"
  "content\030\001 \001(\tR\007content\022\030\n\007subject\030\002 \001(\tR"
  "\007subject\032\266\001\n\013EmailSender\022#\n\remail_addres"
  "s\030\001 \001(\tR\014emailAddress\022\033\n\tsmtp_host\030\002 \001(\t"
  "R\010smtpHost\022\033\n\tsmtp_port\030\003 \001(\rR\010smtpPort\022"
  "#\n\rsmtp_username\030\004 \001(\tR\014smtpUsername\022#\n\r"
  "smtp_password\030\005 \001(\tR\014smtpPassword\"\033\n\031Upd"
  "ateEmailsSetupResponse\"\313\001\n\034GetUserBaseSt"
  "atisticsRequest\022\037\n\013days_before\030\001 \001(\rR\nda"
  "ysBefore\022F\n\021lifetime_start_at\030\002 \001(\0132\032.go"
  "ogle.protobuf.TimestampR\017lifetimeStartAt"
  "\022B\n\017lifetime_end_at\030\003 \001(\0132\032.google.proto"
  "buf.TimestampR\rlifetimeEndAt\"\241\004\n\035GetUser"
  "BaseStatisticsResponse\022\037\n\013total_users\030\001 "
  "\001(\005R\ntotalUsers\022y\n\rusers_per_day\030\002 \003(\0132U"
  ".depot.devtools.auth.v0.identity.admin.G"
  "etUserBaseStatisticsResponse.UsersPerDay"
  "EntryR\013usersPerDay\022\202\001\n\020sessions_per_day\030"
  "\003 \003(\0132X.depot.devtools.auth.v0.identity."
  "admin.GetUserBaseStatisticsResponse.Sess"
  "ionsPerDayEntryR\016sessionsPerDay\022,\n\022total"
  "_active_users\030\004 \001(\005R\020totalActiveUsers\022.\n"
  "\023total_lifetime_used\030\005 \001(\001R\021totalLifetim"
  "eUsed\032>\n\020UsersPerDayEntry\022\020\n\003key\030\001 \001(\tR\003"
  "key\022\024\n\005value\030\002 \001(\005R\005value:\0028\001\032A\n\023Session"
  "sPerDayEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005value\030"
  "\002 \001(\005R\005value:\0028\001*l\n\nClientType\022\025\n\021CLIENT"
  "_TYPE_UNSET\020\000\022\026\n\022CLIENT_FIRST_PARTY\020\001\022\026\n"
  "\022CLIENT_THIRD_PARTY\020\002\022\027\n\023CLIENT_SYSTEM_P"
  "ARTY\020\003*A\n\013SubjectType\022\027\n\023SUBJECT_TYPE_PU"
  "BLIC\020\000\022\031\n\025SUBJECT_TYPE_PAIRWISE\020\001*\325\001\n\027To"
  "kenEndpointAuthMethod\0222\n.TOKEN_ENDPOINT_"
  "AUTH_METHOD_CLIENT_SECRET_BASIC\020\000\0221\n-TOK"
  "EN_ENDPOINT_AUTH_METHOD_CLIENT_SECRET_PO"
  "ST\020\001\022.\n*TOKEN_ENDPOINT_AUTH_METHOD_PRIVA"
  "TE_KEY_JWT\020\002\022#\n\037TOKEN_ENDPOINT_AUTH_METH"
  "OD_NONE\020\003*\313\003\n\033TokenEndpointAuthSigningAl"
  "g\022)\n%TOKEN_ENDPOINT_AUTH_SIGNING_ALG_UNS"
  "ET\020\000\022)\n%TOKEN_ENDPOINT_AUTH_SIGNING_ALG_"
  "RS256\020\001\022)\n%TOKEN_ENDPOINT_AUTH_SIGNING_A"
  "LG_RS384\020\002\022)\n%TOKEN_ENDPOINT_AUTH_SIGNIN"
  "G_ALG_RS512\020\003\022)\n%TOKEN_ENDPOINT_AUTH_SIG"
  "NING_ALG_PS256\020\004\022)\n%TOKEN_ENDPOINT_AUTH_"
  "SIGNING_ALG_PS384\020\005\022)\n%TOKEN_ENDPOINT_AU"
  "TH_SIGNING_ALG_PS512\020\006\022)\n%TOKEN_ENDPOINT"
  "_AUTH_SIGNING_ALG_ES256\020\007\022)\n%TOKEN_ENDPO"
  "INT_AUTH_SIGNING_ALG_ES384\020\010\022)\n%TOKEN_EN"
  "DPOINT_AUTH_SIGNING_ALG_ES512\020\t*\272\001\n\tGran"
  "tType\022\024\n\020GRANT_TYPE_UNSET\020\000\022!\n\035GRANT_TYP"
  "E_CLIENT_CREDENTIALS\020\001\022!\n\035GRANT_TYPE_AUT"
  "HORIZATION_CODE\020\002\022\027\n\023GRANT_TYPE_IMPLICIT"
  "\020\003\022\034\n\030GRANT_TYPE_REFRESH_TOKEN\020\004\022\032\n\026GRAN"
  "T_TYPE_DEVICE_CODE\020\005*\224\002\n\014ResponseType\022\027\n"
  "\023RESPONSE_TYPE_UNSET\020\000\022\026\n\022RESPONSE_TYPE_"
  "NONE\020\001\022\032\n\026RESPONSE_TYPE_ID_TOKEN\020\002\022\027\n\023RE"
  "SPONSE_TYPE_TOKEN\020\003\022\026\n\022RESPONSE_TYPE_COD"
  "E\020\004\022 \n\034RESPONSE_TYPE_ID_TOKEN_TOKEN\020\005\022\037\n"
  "\033RESPONSE_TYPE_CODE_ID_TOKEN\020\006\022\034\n\030RESPON"
  "SE_TYPE_CODE_TOKEN\020\007\022%\n!RESPONSE_TYPE_CO"
  "DE_ID_TOKEN_TOKEN\020\010*\212\001\n\027RequestObjectSig"
  "ningAlg\022$\n REQUEST_OBJECT_SIGNING_ALG_UN"
  "SET\020\000\022#\n\037REQUEST_OBJECT_SIGNING_ALG_NONE"
  "\020\001\022$\n REQUEST_OBJECT_SIGNING_ALG_RS256\020\002"
  "*\222\001\n\031UserinfoSignedResponseAlg\022&\n\"USERIN"
  "FO_SIGNED_RESPONSE_ALG_UNSET\020\000\022%\n!USERIN"
  "FO_SIGNED_RESPONSE_ALG_NONE\020\001\022&\n\"USERINF"
  "O_SIGNED_RESPONSE_ALG_RS256\020\0022\252&\n\005Admin\022"
  "\215\001\n\016CreateIdentity\022<.depot.devtools.auth"
  ".v0.identity.admin.CreateIdentityRequest"
  "\032=.depot.devtools.auth.v0.identity.admin"
  ".CreateIdentityResponse\022\204\001\n\013GetIdentity\022"
  "9.depot.devtools.auth.v0.identity.admin."
  "GetIdentityRequest\032:.depot.devtools.auth"
  ".v0.identity.admin.GetIdentityResponse\022\250"
  "\001\n\027GetIdentityByIdentifier\022E.depot.devto"
  "ols.auth.v0.identity.admin.GetIdentityBy"
  "IdentifierRequest\032F.depot.devtools.auth."
  "v0.identity.admin.GetIdentityByIdentifie"
  "rResponse\022\253\001\n\030GetIdentitiesByAttribute\022F"
  ".depot.devtools.auth.v0.identity.admin.G"
  "etIdentitiesByAttributeRequest\032G.depot.d"
  "evtools.auth.v0.identity.admin.GetIdenti"
  "tiesByAttributeResponse\022\212\001\n\rGetIdentitie"
  "s\022;.depot.devtools.auth.v0.identity.admi"
  "n.GetIdentitiesRequest\032<.depot.devtools."
  "auth.v0.identity.admin.GetIdentitiesResp"
  "onse\022\215\001\n\016UpdateIdentity\022<.depot.devtools"
  ".auth.v0.identity.admin.UpdateIdentityRe"
  "quest\032=.depot.devtools.auth.v0.identity."
  "admin.UpdateIdentityResponse\022\215\001\n\016DeleteI"
  "dentity\022<.depot.devtools.auth.v0.identit"
  "y.admin.DeleteIdentityRequest\032=.depot.de"
  "vtools.auth.v0.identity.admin.DeleteIden"
  "tityResponse\022\207\001\n\014GetAddresses\022:.depot.de"
  "vtools.auth.v0.identity.admin.GetAddress"
  "esRequest\032;.depot.devtools.auth.v0.ident"
  "ity.admin.GetAddressesResponse\022\201\001\n\nGetAd"
  "dress\0228.depot.devtools.auth.v0.identity."
  "admin.GetAddressRequest\0329.depot.devtools"
  ".auth.v0.identity.admin.GetAddressRespon"
  "se\022\212\001\n\rUpdateAddress\022;.depot.devtools.au"
  "th.v0.identity.admin.UpdateAddressReques"
  "t\032<.depot.devtools.auth.v0.identity.admi"
  "n.UpdateAddressResponse\022\201\001\n\nGetProfile\0228"
  ".depot.devtools.auth.v0.identity.admin.G"
  "etProfileRequest\0329.depot.devtools.auth.v"
  "0.identity.admin.GetProfileResponse\022\212\001\n\r"
  "UpdateProfile\022;.depot.devtools.auth.v0.i"
  "dentity.admin.UpdateProfileRequest\032<.dep"
  "ot.devtools.auth.v0.identity.admin.Updat"
  "eProfileResponse\022\215\001\n\016GetCredentials\022<.de"
  "pot.devtools.auth.v0.identity.admin.GetC"
  "redentialsRequest\032=.depot.devtools.auth."
  "v0.identity.admin.GetCredentialsResponse"
  "\022\223\001\n\020UpdateCredential\022>.depot.devtools.a"
  "uth.v0.identity.admin.UpdateCredentialRe"
  "quest\032\?.depot.devtools.auth.v0.identity."
  "admin.UpdateCredentialResponse\022\253\001\n\030GetId"
  "entityLoginAttempts\022F.depot.devtools.aut"
  "h.v0.identity.admin.GetIdentityLoginAtte"
  "mptsRequest\032G.depot.devtools.auth.v0.ide"
  "ntity.admin.GetIdentityLoginAttemptsResp"
  "onse\022\223\001\n\020CreateConnection\022>.depot.devtoo"
  "ls.auth.v0.identity.admin.CreateConnecti"
  "onRequest\032\?.depot.devtools.auth.v0.ident"
  "ity.admin.CreateConnectionResponse\022\215\001\n\016G"
  "etConnections\022<.depot.devtools.auth.v0.i"
  "dentity.admin.GetConnectionsRequest\032=.de"
  "pot.devtools.auth.v0.identity.admin.GetC"
  "onnectionsResponse\022\223\001\n\020UpdateConnection\022"
  ">.depot.devtools.auth.v0.identity.admin."
  "UpdateConnectionRequest\032\?.depot.devtools"
  ".auth.v0.identity.admin.UpdateConnection"
  "Response\022\223\001\n\020DeleteConnection\022>.depot.de"
  "vtools.auth.v0.identity.admin.DeleteConn"
  "ectionRequest\032\?.depot.devtools.auth.v0.i"
  "dentity.admin.DeleteConnectionResponse\022\215"
  "\001\n\016CreateIdSchema\022<.depot.devtools.auth."
  "v0.identity.admin.CreateIdSchemaRequest\032"
  "=.depot.devtools.auth.v0.identity.admin."
  "CreateIdSchemaResponse\022\207\001\n\014GetIdSchemas\022"
  ":.depot.devtools.auth.v0.identity.admin."
  "GetIdSchemasRequest\032;.depot.devtools.aut"
  "h.v0.identity.admin.GetIdSchemasResponse"
  "\022\204\001\n\013GetIdSchema\0229.depot.devtools.auth.v"
  "0.identity.admin.GetIdSchemaRequest\032:.de"
  "pot.devtools.auth.v0.identity.admin.GetI"
  "dSchemaResponse\022\231\001\n\022GetDefaultIdSchema\022@"
  ".depot.devtools.auth.v0.identity.admin.G"
  "etDefaultIdSchemaRequest\032A.depot.devtool"
  "s.auth.v0.identity.admin.GetDefaultIdSch"
  "emaResponse\022\215\001\n\016UpdateIdSchema\022<.depot.d"
  "evtools.auth.v0.identity.admin.UpdateIdS"
  "chemaRequest\032=.depot.devtools.auth.v0.id"
  "entity.admin.UpdateIdSchemaResponse\022\234\001\n\023"
  "MarkDefaultIdSchema\022A.depot.devtools.aut"
  "h.v0.identity.admin.MarkDefaultIdSchemaR"
  "equest\032B.depot.devtools.auth.v0.identity"
  ".admin.MarkDefaultIdSchemaResponse\022\215\001\n\016D"
  "eleteIdSchema\022<.depot.devtools.auth.v0.i"
  "dentity.admin.DeleteIdSchemaRequest\032=.de"
  "pot.devtools.auth.v0.identity.admin.Dele"
  "teIdSchemaResponse\022\231\001\n\022CreateOAuth2Clien"
  "t\022@.depot.devtools.auth.v0.identity.admi"
  "n.CreateOAuth2ClientRequest\032A.depot.devt"
  "ools.auth.v0.identity.admin.CreateOAuth2"
  "ClientResponse\022\223\001\n\020GetOAuth2Clients\022>.de"
  "pot.devtools.auth.v0.identity.admin.GetO"
  "Auth2ClientsRequest\032\?.depot.devtools.aut"
  "h.v0.identity.admin.GetOAuth2ClientsResp"
  "onse\022\231\001\n\022UpdateOAuth2Client\022@.depot.devt"
  "ools.auth.v0.identity.admin.UpdateOAuth2"
  "ClientRequest\032A.depot.devtools.auth.v0.i"
  "dentity.admin.UpdateOAuth2ClientResponse"
  "\022\231\001\n\022DeleteOAuth2Client\022@.depot.devtools"
  ".auth.v0.identity.admin.DeleteOAuth2Clie"
  "ntRequest\032A.depot.devtools.auth.v0.ident"
  "ity.admin.DeleteOAuth2ClientResponse\022\215\001\n"
  "\016GetEmailsSetup\022<.depot.devtools.auth.v0"
  ".identity.admin.GetEmailsSetupRequest\032=."
  "depot.devtools.auth.v0.identity.admin.Ge"
  "tEmailsSetupResponse\022\226\001\n\021UpdateEmailsSet"
  "up\022\?.depot.devtools.auth.v0.identity.adm"
  "in.UpdateEmailsSetupRequest\032@.depot.devt"
  "ools.auth.v0.identity.admin.UpdateEmails"
  "SetupResponse\022\242\001\n\025GetUserBaseStatistics\022"
  "C.depot.devtools.auth.v0.identity.admin."
  "GetUserBaseStatisticsRequest\032D.depot.dev"
  "tools.auth.v0.identity.admin.GetUserBase"
  "StatisticsResponseB\242\001\n\030dev.auth3.identit"
  "y.adminB\nAdminProtoP\001Z\'github.com/auth3-"
  "dev/go-sdk/admin;admin\370\001\001\242\002\004A3IA\252\002\024Auth3"
  ".Identity.Admin\312\002\024Auth3\\Identity\\Admin\352\002"
  "\026Auth3::Identity::Adminb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto_deps[2] = {
  &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto_sccs[85] = {
  &scc_info_CreateConnectionRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_CreateConnectionResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_CreateIdSchemaRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_CreateIdSchemaResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_CreateIdentityRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_CreateIdentityResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_CreateOAuth2ClientRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_CreateOAuth2ClientResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_DeleteConnectionRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_DeleteConnectionResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_DeleteIdSchemaRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_DeleteIdSchemaResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_DeleteIdentityRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_DeleteIdentityResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_DeleteOAuth2ClientRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_DeleteOAuth2ClientResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetAddressRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetAddressResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetAddressesRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetAddressesResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetAddressesResponse_Address_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetConnectionsRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetConnectionsResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetConnectionsResponse_Connection_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetCredentialsRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetCredentialsResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetCredentialsResponse_Credential_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetCredentialsResponse_CredentialsEntry_DoNotUse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetDefaultIdSchemaRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetDefaultIdSchemaResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetEmailsSetupRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetEmailsSetupResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetEmailsSetupResponse_EmailSender_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetEmailsSetupResponse_EmailTemplate_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetIdSchemaRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetIdSchemaResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetIdSchemasRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetIdSchemasResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetIdSchemasResponse_JsonSchema_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetIdentitiesByAttributeRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetIdentitiesByAttributeResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetIdentitiesByAttributeResponse_Identity_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetIdentitiesByAttributeResponse_Identity_CredentialsIdsEntry_DoNotUse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetIdentitiesRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetIdentitiesResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetIdentitiesResponse_Identity_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetIdentityByIdentifierRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetIdentityByIdentifierResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetIdentityByIdentifierResponse_Identity_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetIdentityByIdentifierResponse_Identity_CredentialsIdsEntry_DoNotUse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetIdentityLoginAttemptsRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetIdentityLoginAttemptsResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetIdentityLoginAttemptsResponse_Attempt_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetIdentityRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetIdentityResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetIdentityResponse_CredentialsIdsEntry_DoNotUse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetOAuth2ClientsRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetOAuth2ClientsResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetOAuth2ClientsResponse_Client_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetProfileRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetProfileResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetUserBaseStatisticsRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetUserBaseStatisticsResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetUserBaseStatisticsResponse_SessionsPerDayEntry_DoNotUse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_GetUserBaseStatisticsResponse_UsersPerDayEntry_DoNotUse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_MarkDefaultIdSchemaRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_MarkDefaultIdSchemaResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_UpdateAddressRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_UpdateAddressResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_UpdateConnectionRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_UpdateConnectionResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_UpdateCredentialRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_UpdateCredentialResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_UpdateEmailsSetupRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_UpdateEmailsSetupRequest_EmailSender_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_UpdateEmailsSetupRequest_EmailTemplate_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_UpdateEmailsSetupResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_UpdateIdSchemaRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_UpdateIdSchemaResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_UpdateIdentityRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_UpdateIdentityResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_UpdateOAuth2ClientRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_UpdateOAuth2ClientResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_UpdateProfileRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
  &scc_info_UpdateProfileResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto = {
  false, false, descriptor_table_protodef_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto, "admin.proto", 26791,
  &descriptor_table_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto_once, descriptor_table_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto_sccs, descriptor_table_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto_deps, 85, 2,
  schemas, file_default_instances, TableStruct_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto::offsets,
  file_level_metadata_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto, 85, file_level_enum_descriptors_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto, file_level_service_descriptors_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto)), true);
namespace depot {
namespace devtools {
namespace auth {
namespace v0 {
namespace identity {
namespace admin {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GetIdentitiesResponse_Lock_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto);
  return file_level_enum_descriptors_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto[0];
}
bool GetIdentitiesResponse_Lock_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr GetIdentitiesResponse_Lock GetIdentitiesResponse::UNLOCKED;
constexpr GetIdentitiesResponse_Lock GetIdentitiesResponse::ADMIN_LOCKED;
constexpr GetIdentitiesResponse_Lock GetIdentitiesResponse::Lock_MIN;
constexpr GetIdentitiesResponse_Lock GetIdentitiesResponse::Lock_MAX;
constexpr int GetIdentitiesResponse::Lock_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GetIdentityResponse_Lock_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto);
  return file_level_enum_descriptors_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto[1];
}
bool GetIdentityResponse_Lock_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr GetIdentityResponse_Lock GetIdentityResponse::UNLOCKED;
constexpr GetIdentityResponse_Lock GetIdentityResponse::ADMIN_LOCKED;
constexpr GetIdentityResponse_Lock GetIdentityResponse::Lock_MIN;
constexpr GetIdentityResponse_Lock GetIdentityResponse::Lock_MAX;
constexpr int GetIdentityResponse::Lock_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GetIdentityByIdentifierResponse_Identity_Lock_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto);
  return file_level_enum_descriptors_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto[2];
}
bool GetIdentityByIdentifierResponse_Identity_Lock_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr GetIdentityByIdentifierResponse_Identity_Lock GetIdentityByIdentifierResponse_Identity::UNLOCKED;
constexpr GetIdentityByIdentifierResponse_Identity_Lock GetIdentityByIdentifierResponse_Identity::ADMIN_LOCKED;
constexpr GetIdentityByIdentifierResponse_Identity_Lock GetIdentityByIdentifierResponse_Identity::Lock_MIN;
constexpr GetIdentityByIdentifierResponse_Identity_Lock GetIdentityByIdentifierResponse_Identity::Lock_MAX;
constexpr int GetIdentityByIdentifierResponse_Identity::Lock_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GetIdentitiesByAttributeResponse_Identity_Lock_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto);
  return file_level_enum_descriptors_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto[3];
}
bool GetIdentitiesByAttributeResponse_Identity_Lock_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr GetIdentitiesByAttributeResponse_Identity_Lock GetIdentitiesByAttributeResponse_Identity::UNLOCKED;
constexpr GetIdentitiesByAttributeResponse_Identity_Lock GetIdentitiesByAttributeResponse_Identity::ADMIN_LOCKED;
constexpr GetIdentitiesByAttributeResponse_Identity_Lock GetIdentitiesByAttributeResponse_Identity::Lock_MIN;
constexpr GetIdentitiesByAttributeResponse_Identity_Lock GetIdentitiesByAttributeResponse_Identity::Lock_MAX;
constexpr int GetIdentitiesByAttributeResponse_Identity::Lock_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* UpdateIdentityRequest_Lock_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto);
  return file_level_enum_descriptors_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto[4];
}
bool UpdateIdentityRequest_Lock_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr UpdateIdentityRequest_Lock UpdateIdentityRequest::UNLOCKED;
constexpr UpdateIdentityRequest_Lock UpdateIdentityRequest::ADMIN_LOCKED;
constexpr UpdateIdentityRequest_Lock UpdateIdentityRequest::Lock_MIN;
constexpr UpdateIdentityRequest_Lock UpdateIdentityRequest::Lock_MAX;
constexpr int UpdateIdentityRequest::Lock_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CreateConnectionRequest_Providers_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto);
  return file_level_enum_descriptors_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto[5];
}
bool CreateConnectionRequest_Providers_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 52:
    case 53:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::NONE;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::OPENID;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::AMAZON;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::BITBUCKET;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::BOX;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::DAILYMOTION;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::DEEZER;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::DIGITALOCEAN;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::DISCORD;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::DROPBOX;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::EVEONLINE;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::FACEBOOK;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::FITBIT;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::GITEA;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::GITHUB;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::GITLAB;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::GOOGLE;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::SHOPIFY;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::SOUNDCLOUD;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::SPOTIFY;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::STEAM;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::STRIPE;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::TWITCH;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::UBER;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::WEPAY;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::YAHOO;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::YAMMER;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::HEROKU;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::INSTAGRAM;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::INTERCOM;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::KAKAO;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::LASTFM;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::LINKEDIN;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::LINE;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::ONEDRIVE;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::AZUREAD;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::MICROSOFTONLINE;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::BATTLENET;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::PAYPAL;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::TWITTER;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::SALESFORCE;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::TYPETALK;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::SLACK;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::MEETUP;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::XERO;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::VK;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::NAVER;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::YANDEX;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::NEXTCLOUD;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::APPLE;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::STRAVA;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::Providers_MIN;
constexpr CreateConnectionRequest_Providers CreateConnectionRequest::Providers_MAX;
constexpr int CreateConnectionRequest::Providers_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CreateConnectionRequest_Types_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto);
  return file_level_enum_descriptors_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto[6];
}
bool CreateConnectionRequest_Types_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CreateConnectionRequest_Types CreateConnectionRequest::UNSET;
constexpr CreateConnectionRequest_Types CreateConnectionRequest::PASSWORD;
constexpr CreateConnectionRequest_Types CreateConnectionRequest::OTP;
constexpr CreateConnectionRequest_Types CreateConnectionRequest::TOTP;
constexpr CreateConnectionRequest_Types CreateConnectionRequest::OIDC;
constexpr CreateConnectionRequest_Types CreateConnectionRequest::Types_MIN;
constexpr CreateConnectionRequest_Types CreateConnectionRequest::Types_MAX;
constexpr int CreateConnectionRequest::Types_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GetConnectionsResponse_Providers_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto);
  return file_level_enum_descriptors_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto[7];
}
bool GetConnectionsResponse_Providers_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 52:
    case 53:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::NONE;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::OPENID;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::AMAZON;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::BITBUCKET;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::BOX;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::DAILYMOTION;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::DEEZER;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::DIGITALOCEAN;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::DISCORD;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::DROPBOX;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::EVEONLINE;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::FACEBOOK;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::FITBIT;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::GITEA;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::GITHUB;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::GITLAB;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::GOOGLE;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::SHOPIFY;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::SOUNDCLOUD;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::SPOTIFY;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::STEAM;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::STRIPE;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::TWITCH;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::UBER;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::WEPAY;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::YAHOO;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::YAMMER;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::HEROKU;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::INSTAGRAM;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::INTERCOM;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::KAKAO;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::LASTFM;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::LINKEDIN;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::LINE;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::ONEDRIVE;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::AZUREAD;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::MICROSOFTONLINE;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::BATTLENET;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::PAYPAL;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::TWITTER;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::SALESFORCE;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::TYPETALK;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::SLACK;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::MEETUP;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::XERO;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::VK;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::NAVER;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::YANDEX;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::NEXTCLOUD;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::APPLE;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::STRAVA;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::Providers_MIN;
constexpr GetConnectionsResponse_Providers GetConnectionsResponse::Providers_MAX;
constexpr int GetConnectionsResponse::Providers_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GetConnectionsResponse_Types_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto);
  return file_level_enum_descriptors_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto[8];
}
bool GetConnectionsResponse_Types_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr GetConnectionsResponse_Types GetConnectionsResponse::UNSET;
constexpr GetConnectionsResponse_Types GetConnectionsResponse::PASSWORD;
constexpr GetConnectionsResponse_Types GetConnectionsResponse::OTP;
constexpr GetConnectionsResponse_Types GetConnectionsResponse::TOTP;
constexpr GetConnectionsResponse_Types GetConnectionsResponse::OIDC;
constexpr GetConnectionsResponse_Types GetConnectionsResponse::Types_MIN;
constexpr GetConnectionsResponse_Types GetConnectionsResponse::Types_MAX;
constexpr int GetConnectionsResponse::Types_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GetConnectionsResponse_Purposes_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto);
  return file_level_enum_descriptors_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto[9];
}
bool GetConnectionsResponse_Purposes_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr GetConnectionsResponse_Purposes GetConnectionsResponse::PURPOSE_UNKNOWN;
constexpr GetConnectionsResponse_Purposes GetConnectionsResponse::PURPOSE_MAIN_FACTOR;
constexpr GetConnectionsResponse_Purposes GetConnectionsResponse::PURPOSE_SECOND_FACTOR;
constexpr GetConnectionsResponse_Purposes GetConnectionsResponse::Purposes_MIN;
constexpr GetConnectionsResponse_Purposes GetConnectionsResponse::Purposes_MAX;
constexpr int GetConnectionsResponse::Purposes_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* UpdateConnectionRequest_Providers_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto);
  return file_level_enum_descriptors_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto[10];
}
bool UpdateConnectionRequest_Providers_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 52:
    case 53:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::NONE;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::OPENID;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::AMAZON;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::BITBUCKET;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::BOX;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::DAILYMOTION;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::DEEZER;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::DIGITALOCEAN;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::DISCORD;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::DROPBOX;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::EVEONLINE;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::FACEBOOK;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::FITBIT;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::GITEA;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::GITHUB;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::GITLAB;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::GOOGLE;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::SHOPIFY;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::SOUNDCLOUD;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::SPOTIFY;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::STEAM;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::STRIPE;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::TWITCH;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::UBER;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::WEPAY;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::YAHOO;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::YAMMER;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::HEROKU;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::INSTAGRAM;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::INTERCOM;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::KAKAO;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::LASTFM;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::LINKEDIN;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::LINE;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::ONEDRIVE;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::AZUREAD;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::MICROSOFTONLINE;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::BATTLENET;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::PAYPAL;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::TWITTER;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::SALESFORCE;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::TYPETALK;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::SLACK;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::MEETUP;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::XERO;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::VK;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::NAVER;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::YANDEX;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::NEXTCLOUD;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::APPLE;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::STRAVA;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::Providers_MIN;
constexpr UpdateConnectionRequest_Providers UpdateConnectionRequest::Providers_MAX;
constexpr int UpdateConnectionRequest::Providers_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* UpdateConnectionRequest_Types_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto);
  return file_level_enum_descriptors_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto[11];
}
bool UpdateConnectionRequest_Types_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr UpdateConnectionRequest_Types UpdateConnectionRequest::UNSET;
constexpr UpdateConnectionRequest_Types UpdateConnectionRequest::PASSWORD;
constexpr UpdateConnectionRequest_Types UpdateConnectionRequest::OTP;
constexpr UpdateConnectionRequest_Types UpdateConnectionRequest::TOTP;
constexpr UpdateConnectionRequest_Types UpdateConnectionRequest::OIDC;
constexpr UpdateConnectionRequest_Types UpdateConnectionRequest::Types_MIN;
constexpr UpdateConnectionRequest_Types UpdateConnectionRequest::Types_MAX;
constexpr int UpdateConnectionRequest::Types_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ClientType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto);
  return file_level_enum_descriptors_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto[12];
}
bool ClientType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SubjectType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto);
  return file_level_enum_descriptors_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto[13];
}
bool SubjectType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TokenEndpointAuthMethod_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto);
  return file_level_enum_descriptors_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto[14];
}
bool TokenEndpointAuthMethod_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TokenEndpointAuthSigningAlg_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto);
  return file_level_enum_descriptors_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto[15];
}
bool TokenEndpointAuthSigningAlg_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GrantType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto);
  return file_level_enum_descriptors_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto[16];
}
bool GrantType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ResponseType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto);
  return file_level_enum_descriptors_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto[17];
}
bool ResponseType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* RequestObjectSigningAlg_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto);
  return file_level_enum_descriptors_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto[18];
}
bool RequestObjectSigningAlg_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* UserinfoSignedResponseAlg_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto);
  return file_level_enum_descriptors_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto[19];
}
bool UserinfoSignedResponseAlg_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CreateIdentityRequest::InitAsDefaultInstance() {
  ::depot::devtools::auth::v0::identity::admin::_CreateIdentityRequest_default_instance_._instance.get_mutable()->data_ = const_cast< PROTOBUF_NAMESPACE_ID::Struct*>(
      PROTOBUF_NAMESPACE_ID::Struct::internal_default_instance());
}
class CreateIdentityRequest::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Struct& data(const CreateIdentityRequest* msg);
};

const PROTOBUF_NAMESPACE_ID::Struct&
CreateIdentityRequest::_Internal::data(const CreateIdentityRequest* msg) {
  return *msg->data_;
}
void CreateIdentityRequest::clear_data() {
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
}
CreateIdentityRequest::CreateIdentityRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.CreateIdentityRequest)
}
CreateIdentityRequest::CreateIdentityRequest(const CreateIdentityRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_connection_id().empty()) {
    connection_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_connection_id(),
      GetArena());
  }
  schema_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_schema_id().empty()) {
    schema_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_schema_id(),
      GetArena());
  }
  if (from._internal_has_data()) {
    data_ = new PROTOBUF_NAMESPACE_ID::Struct(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.CreateIdentityRequest)
}

void CreateIdentityRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateIdentityRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  schema_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_ = nullptr;
}

CreateIdentityRequest::~CreateIdentityRequest() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.CreateIdentityRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateIdentityRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  connection_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  schema_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
}

void CreateIdentityRequest::ArenaDtor(void* object) {
  CreateIdentityRequest* _this = reinterpret_cast< CreateIdentityRequest* >(object);
  (void)_this;
}
void CreateIdentityRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateIdentityRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateIdentityRequest& CreateIdentityRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateIdentityRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void CreateIdentityRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.CreateIdentityRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  connection_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  schema_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateIdentityRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Struct data = 1[json_name = "data"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string connection_id = 2[json_name = "connectionId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_connection_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.CreateIdentityRequest.connection_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string schema_id = 3[json_name = "schemaId"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_schema_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.CreateIdentityRequest.schema_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateIdentityRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.CreateIdentityRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Struct data = 1[json_name = "data"];
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::data(this), target, stream);
  }

  // string connection_id = 2[json_name = "connectionId"];
  if (this->connection_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_connection_id().data(), static_cast<int>(this->_internal_connection_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.CreateIdentityRequest.connection_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_connection_id(), target);
  }

  // string schema_id = 3[json_name = "schemaId"];
  if (this->schema_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_schema_id().data(), static_cast<int>(this->_internal_schema_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.CreateIdentityRequest.schema_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_schema_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.CreateIdentityRequest)
  return target;
}

size_t CreateIdentityRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.CreateIdentityRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string connection_id = 2[json_name = "connectionId"];
  if (this->connection_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_connection_id());
  }

  // string schema_id = 3[json_name = "schemaId"];
  if (this->schema_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_schema_id());
  }

  // .google.protobuf.Struct data = 1[json_name = "data"];
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateIdentityRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.CreateIdentityRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateIdentityRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateIdentityRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.CreateIdentityRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.CreateIdentityRequest)
    MergeFrom(*source);
  }
}

void CreateIdentityRequest::MergeFrom(const CreateIdentityRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.CreateIdentityRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.connection_id().size() > 0) {
    _internal_set_connection_id(from._internal_connection_id());
  }
  if (from.schema_id().size() > 0) {
    _internal_set_schema_id(from._internal_schema_id());
  }
  if (from.has_data()) {
    _internal_mutable_data()->PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_data());
  }
}

void CreateIdentityRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.CreateIdentityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateIdentityRequest::CopyFrom(const CreateIdentityRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.CreateIdentityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateIdentityRequest::IsInitialized() const {
  return true;
}

void CreateIdentityRequest::InternalSwap(CreateIdentityRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  connection_id_.Swap(&other->connection_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  schema_id_.Swap(&other->schema_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(data_, other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateIdentityRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateIdentityResponse::InitAsDefaultInstance() {
}
class CreateIdentityResponse::_Internal {
 public:
};

CreateIdentityResponse::CreateIdentityResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.CreateIdentityResponse)
}
CreateIdentityResponse::CreateIdentityResponse(const CreateIdentityResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  identity_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_identity_id().empty()) {
    identity_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_identity_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.CreateIdentityResponse)
}

void CreateIdentityResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateIdentityResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  identity_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CreateIdentityResponse::~CreateIdentityResponse() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.CreateIdentityResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateIdentityResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  identity_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateIdentityResponse::ArenaDtor(void* object) {
  CreateIdentityResponse* _this = reinterpret_cast< CreateIdentityResponse* >(object);
  (void)_this;
}
void CreateIdentityResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateIdentityResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateIdentityResponse& CreateIdentityResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateIdentityResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void CreateIdentityResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.CreateIdentityResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  identity_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateIdentityResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string identity_id = 1[json_name = "identityId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_identity_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.CreateIdentityResponse.identity_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateIdentityResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.CreateIdentityResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string identity_id = 1[json_name = "identityId"];
  if (this->identity_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_identity_id().data(), static_cast<int>(this->_internal_identity_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.CreateIdentityResponse.identity_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_identity_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.CreateIdentityResponse)
  return target;
}

size_t CreateIdentityResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.CreateIdentityResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string identity_id = 1[json_name = "identityId"];
  if (this->identity_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_identity_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateIdentityResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.CreateIdentityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateIdentityResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateIdentityResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.CreateIdentityResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.CreateIdentityResponse)
    MergeFrom(*source);
  }
}

void CreateIdentityResponse::MergeFrom(const CreateIdentityResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.CreateIdentityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.identity_id().size() > 0) {
    _internal_set_identity_id(from._internal_identity_id());
  }
}

void CreateIdentityResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.CreateIdentityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateIdentityResponse::CopyFrom(const CreateIdentityResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.CreateIdentityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateIdentityResponse::IsInitialized() const {
  return true;
}

void CreateIdentityResponse::InternalSwap(CreateIdentityResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  identity_id_.Swap(&other->identity_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateIdentityResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetIdentitiesRequest::InitAsDefaultInstance() {
}
class GetIdentitiesRequest::_Internal {
 public:
};

GetIdentitiesRequest::GetIdentitiesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetIdentitiesRequest)
}
GetIdentitiesRequest::GetIdentitiesRequest(const GetIdentitiesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_page_token().empty()) {
    page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_page_token(),
      GetArena());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetIdentitiesRequest)
}

void GetIdentitiesRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetIdentitiesRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

GetIdentitiesRequest::~GetIdentitiesRequest() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetIdentitiesRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetIdentitiesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetIdentitiesRequest::ArenaDtor(void* object) {
  GetIdentitiesRequest* _this = reinterpret_cast< GetIdentitiesRequest* >(object);
  (void)_this;
}
void GetIdentitiesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetIdentitiesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetIdentitiesRequest& GetIdentitiesRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetIdentitiesRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetIdentitiesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  page_token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  page_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetIdentitiesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 page_size = 1[json_name = "pageSize"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string page_token = 2[json_name = "pageToken"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetIdentitiesRequest.page_token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetIdentitiesRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 page_size = 1[json_name = "pageSize"];
  if (this->page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_page_size(), target);
  }

  // string page_token = 2[json_name = "pageToken"];
  if (this->page_token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetIdentitiesRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetIdentitiesRequest)
  return target;
}

size_t GetIdentitiesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string page_token = 2[json_name = "pageToken"];
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // int32 page_size = 1[json_name = "pageSize"];
  if (this->page_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_page_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetIdentitiesRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetIdentitiesRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetIdentitiesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetIdentitiesRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetIdentitiesRequest)
    MergeFrom(*source);
  }
}

void GetIdentitiesRequest::MergeFrom(const GetIdentitiesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.page_token().size() > 0) {
    _internal_set_page_token(from._internal_page_token());
  }
  if (from.page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
}

void GetIdentitiesRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIdentitiesRequest::CopyFrom(const GetIdentitiesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIdentitiesRequest::IsInitialized() const {
  return true;
}

void GetIdentitiesRequest::InternalSwap(GetIdentitiesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  page_token_.Swap(&other->page_token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(page_size_, other->page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetIdentitiesRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetIdentitiesResponse_Identity::InitAsDefaultInstance() {
  ::depot::devtools::auth::v0::identity::admin::_GetIdentitiesResponse_Identity_default_instance_._instance.get_mutable()->created_at_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::depot::devtools::auth::v0::identity::admin::_GetIdentitiesResponse_Identity_default_instance_._instance.get_mutable()->updated_at_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
}
class GetIdentitiesResponse_Identity::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& created_at(const GetIdentitiesResponse_Identity* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& updated_at(const GetIdentitiesResponse_Identity* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
GetIdentitiesResponse_Identity::_Internal::created_at(const GetIdentitiesResponse_Identity* msg) {
  return *msg->created_at_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
GetIdentitiesResponse_Identity::_Internal::updated_at(const GetIdentitiesResponse_Identity* msg) {
  return *msg->updated_at_;
}
void GetIdentitiesResponse_Identity::clear_created_at() {
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
}
void GetIdentitiesResponse_Identity::clear_updated_at() {
  if (GetArena() == nullptr && updated_at_ != nullptr) {
    delete updated_at_;
  }
  updated_at_ = nullptr;
}
GetIdentitiesResponse_Identity::GetIdentitiesResponse_Identity(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse.Identity)
}
GetIdentitiesResponse_Identity::GetIdentitiesResponse_Identity(const GetIdentitiesResponse_Identity& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  identity_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_identity_id().empty()) {
    identity_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_identity_id(),
      GetArena());
  }
  main_identifier_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_main_identifier().empty()) {
    main_identifier_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_main_identifier(),
      GetArena());
  }
  schema_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_schema_id().empty()) {
    schema_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_schema_id(),
      GetArena());
  }
  if (from._internal_has_created_at()) {
    created_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_at_);
  } else {
    created_at_ = nullptr;
  }
  if (from._internal_has_updated_at()) {
    updated_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.updated_at_);
  } else {
    updated_at_ = nullptr;
  }
  lock_ = from.lock_;
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse.Identity)
}

void GetIdentitiesResponse_Identity::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetIdentitiesResponse_Identity_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  identity_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  main_identifier_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  schema_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&created_at_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lock_) -
      reinterpret_cast<char*>(&created_at_)) + sizeof(lock_));
}

GetIdentitiesResponse_Identity::~GetIdentitiesResponse_Identity() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse.Identity)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetIdentitiesResponse_Identity::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  identity_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  main_identifier_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  schema_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete created_at_;
  if (this != internal_default_instance()) delete updated_at_;
}

void GetIdentitiesResponse_Identity::ArenaDtor(void* object) {
  GetIdentitiesResponse_Identity* _this = reinterpret_cast< GetIdentitiesResponse_Identity* >(object);
  (void)_this;
}
void GetIdentitiesResponse_Identity::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetIdentitiesResponse_Identity::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetIdentitiesResponse_Identity& GetIdentitiesResponse_Identity::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetIdentitiesResponse_Identity_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetIdentitiesResponse_Identity::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse.Identity)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  identity_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  main_identifier_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  schema_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
  if (GetArena() == nullptr && updated_at_ != nullptr) {
    delete updated_at_;
  }
  updated_at_ = nullptr;
  lock_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetIdentitiesResponse_Identity::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string identity_id = 1[json_name = "identityId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_identity_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse.Identity.identity_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_at = 2[json_name = "createdAt"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp updated_at = 3[json_name = "updatedAt"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_updated_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string main_identifier = 4[json_name = "mainIdentifier"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_main_identifier();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse.Identity.main_identifier"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string schema_id = 5[json_name = "schemaId"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_schema_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse.Identity.schema_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse.Lock lock = 6[json_name = "lock"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_lock(static_cast<::depot::devtools::auth::v0::identity::admin::GetIdentitiesResponse_Lock>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetIdentitiesResponse_Identity::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse.Identity)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string identity_id = 1[json_name = "identityId"];
  if (this->identity_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_identity_id().data(), static_cast<int>(this->_internal_identity_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse.Identity.identity_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_identity_id(), target);
  }

  // .google.protobuf.Timestamp created_at = 2[json_name = "createdAt"];
  if (this->has_created_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::created_at(this), target, stream);
  }

  // .google.protobuf.Timestamp updated_at = 3[json_name = "updatedAt"];
  if (this->has_updated_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::updated_at(this), target, stream);
  }

  // string main_identifier = 4[json_name = "mainIdentifier"];
  if (this->main_identifier().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_main_identifier().data(), static_cast<int>(this->_internal_main_identifier().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse.Identity.main_identifier");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_main_identifier(), target);
  }

  // string schema_id = 5[json_name = "schemaId"];
  if (this->schema_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_schema_id().data(), static_cast<int>(this->_internal_schema_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse.Identity.schema_id");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_schema_id(), target);
  }

  // .depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse.Lock lock = 6[json_name = "lock"];
  if (this->lock() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_lock(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse.Identity)
  return target;
}

size_t GetIdentitiesResponse_Identity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse.Identity)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string identity_id = 1[json_name = "identityId"];
  if (this->identity_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_identity_id());
  }

  // string main_identifier = 4[json_name = "mainIdentifier"];
  if (this->main_identifier().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_main_identifier());
  }

  // string schema_id = 5[json_name = "schemaId"];
  if (this->schema_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_schema_id());
  }

  // .google.protobuf.Timestamp created_at = 2[json_name = "createdAt"];
  if (this->has_created_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_at_);
  }

  // .google.protobuf.Timestamp updated_at = 3[json_name = "updatedAt"];
  if (this->has_updated_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *updated_at_);
  }

  // .depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse.Lock lock = 6[json_name = "lock"];
  if (this->lock() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_lock());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetIdentitiesResponse_Identity::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse.Identity)
  GOOGLE_DCHECK_NE(&from, this);
  const GetIdentitiesResponse_Identity* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetIdentitiesResponse_Identity>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse.Identity)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse.Identity)
    MergeFrom(*source);
  }
}

void GetIdentitiesResponse_Identity::MergeFrom(const GetIdentitiesResponse_Identity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse.Identity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.identity_id().size() > 0) {
    _internal_set_identity_id(from._internal_identity_id());
  }
  if (from.main_identifier().size() > 0) {
    _internal_set_main_identifier(from._internal_main_identifier());
  }
  if (from.schema_id().size() > 0) {
    _internal_set_schema_id(from._internal_schema_id());
  }
  if (from.has_created_at()) {
    _internal_mutable_created_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_at());
  }
  if (from.has_updated_at()) {
    _internal_mutable_updated_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_updated_at());
  }
  if (from.lock() != 0) {
    _internal_set_lock(from._internal_lock());
  }
}

void GetIdentitiesResponse_Identity::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse.Identity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIdentitiesResponse_Identity::CopyFrom(const GetIdentitiesResponse_Identity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse.Identity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIdentitiesResponse_Identity::IsInitialized() const {
  return true;
}

void GetIdentitiesResponse_Identity::InternalSwap(GetIdentitiesResponse_Identity* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  identity_id_.Swap(&other->identity_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  main_identifier_.Swap(&other->main_identifier_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  schema_id_.Swap(&other->schema_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetIdentitiesResponse_Identity, lock_)
      + sizeof(GetIdentitiesResponse_Identity::lock_)
      - PROTOBUF_FIELD_OFFSET(GetIdentitiesResponse_Identity, created_at_)>(
          reinterpret_cast<char*>(&created_at_),
          reinterpret_cast<char*>(&other->created_at_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetIdentitiesResponse_Identity::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetIdentitiesResponse::InitAsDefaultInstance() {
}
class GetIdentitiesResponse::_Internal {
 public:
};

GetIdentitiesResponse::GetIdentitiesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  identities_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse)
}
GetIdentitiesResponse::GetIdentitiesResponse(const GetIdentitiesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      identities_(from.identities_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_next_page_token(),
      GetArena());
  }
  total_size_ = from.total_size_;
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse)
}

void GetIdentitiesResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetIdentitiesResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  total_size_ = 0;
}

GetIdentitiesResponse::~GetIdentitiesResponse() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetIdentitiesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  next_page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetIdentitiesResponse::ArenaDtor(void* object) {
  GetIdentitiesResponse* _this = reinterpret_cast< GetIdentitiesResponse* >(object);
  (void)_this;
}
void GetIdentitiesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetIdentitiesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetIdentitiesResponse& GetIdentitiesResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetIdentitiesResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetIdentitiesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  identities_.Clear();
  next_page_token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  total_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetIdentitiesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse.Identity identities = 1[json_name = "identities"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_identities(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // string next_page_token = 2[json_name = "nextPageToken"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse.next_page_token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 total_size = 3[json_name = "totalSize"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          total_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetIdentitiesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse.Identity identities = 1[json_name = "identities"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_identities_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_identities(i), target, stream);
  }

  // string next_page_token = 2[json_name = "nextPageToken"];
  if (this->next_page_token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  // int32 total_size = 3[json_name = "totalSize"];
  if (this->total_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_total_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse)
  return target;
}

size_t GetIdentitiesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse.Identity identities = 1[json_name = "identities"];
  total_size += 1UL * this->_internal_identities_size();
  for (const auto& msg : this->identities_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2[json_name = "nextPageToken"];
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  // int32 total_size = 3[json_name = "totalSize"];
  if (this->total_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_total_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetIdentitiesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetIdentitiesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetIdentitiesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse)
    MergeFrom(*source);
  }
}

void GetIdentitiesResponse::MergeFrom(const GetIdentitiesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  identities_.MergeFrom(from.identities_);
  if (from.next_page_token().size() > 0) {
    _internal_set_next_page_token(from._internal_next_page_token());
  }
  if (from.total_size() != 0) {
    _internal_set_total_size(from._internal_total_size());
  }
}

void GetIdentitiesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIdentitiesResponse::CopyFrom(const GetIdentitiesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIdentitiesResponse::IsInitialized() const {
  return true;
}

void GetIdentitiesResponse::InternalSwap(GetIdentitiesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  identities_.InternalSwap(&other->identities_);
  next_page_token_.Swap(&other->next_page_token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(total_size_, other->total_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetIdentitiesResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetIdentityRequest::InitAsDefaultInstance() {
}
class GetIdentityRequest::_Internal {
 public:
};

GetIdentityRequest::GetIdentityRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetIdentityRequest)
}
GetIdentityRequest::GetIdentityRequest(const GetIdentityRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  identity_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_identity_id().empty()) {
    identity_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_identity_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetIdentityRequest)
}

void GetIdentityRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetIdentityRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  identity_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetIdentityRequest::~GetIdentityRequest() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetIdentityRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetIdentityRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  identity_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetIdentityRequest::ArenaDtor(void* object) {
  GetIdentityRequest* _this = reinterpret_cast< GetIdentityRequest* >(object);
  (void)_this;
}
void GetIdentityRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetIdentityRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetIdentityRequest& GetIdentityRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetIdentityRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetIdentityRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetIdentityRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  identity_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetIdentityRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string identity_id = 2[json_name = "identityId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_identity_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetIdentityRequest.identity_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetIdentityRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetIdentityRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string identity_id = 2[json_name = "identityId"];
  if (this->identity_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_identity_id().data(), static_cast<int>(this->_internal_identity_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetIdentityRequest.identity_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_identity_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetIdentityRequest)
  return target;
}

size_t GetIdentityRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetIdentityRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string identity_id = 2[json_name = "identityId"];
  if (this->identity_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_identity_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetIdentityRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetIdentityRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetIdentityRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetIdentityRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetIdentityRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetIdentityRequest)
    MergeFrom(*source);
  }
}

void GetIdentityRequest::MergeFrom(const GetIdentityRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetIdentityRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.identity_id().size() > 0) {
    _internal_set_identity_id(from._internal_identity_id());
  }
}

void GetIdentityRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetIdentityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIdentityRequest::CopyFrom(const GetIdentityRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetIdentityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIdentityRequest::IsInitialized() const {
  return true;
}

void GetIdentityRequest::InternalSwap(GetIdentityRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  identity_id_.Swap(&other->identity_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetIdentityRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

GetIdentityResponse_CredentialsIdsEntry_DoNotUse::GetIdentityResponse_CredentialsIdsEntry_DoNotUse() {}
GetIdentityResponse_CredentialsIdsEntry_DoNotUse::GetIdentityResponse_CredentialsIdsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetIdentityResponse_CredentialsIdsEntry_DoNotUse::MergeFrom(const GetIdentityResponse_CredentialsIdsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetIdentityResponse_CredentialsIdsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void GetIdentityResponse_CredentialsIdsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void GetIdentityResponse::InitAsDefaultInstance() {
  ::depot::devtools::auth::v0::identity::admin::_GetIdentityResponse_default_instance_._instance.get_mutable()->created_at_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::depot::devtools::auth::v0::identity::admin::_GetIdentityResponse_default_instance_._instance.get_mutable()->updated_at_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
}
class GetIdentityResponse::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& created_at(const GetIdentityResponse* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& updated_at(const GetIdentityResponse* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
GetIdentityResponse::_Internal::created_at(const GetIdentityResponse* msg) {
  return *msg->created_at_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
GetIdentityResponse::_Internal::updated_at(const GetIdentityResponse* msg) {
  return *msg->updated_at_;
}
void GetIdentityResponse::clear_created_at() {
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
}
void GetIdentityResponse::clear_updated_at() {
  if (GetArena() == nullptr && updated_at_ != nullptr) {
    delete updated_at_;
  }
  updated_at_ = nullptr;
}
GetIdentityResponse::GetIdentityResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  addresses_ids_(arena),
  credentials_ids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetIdentityResponse)
}
GetIdentityResponse::GetIdentityResponse(const GetIdentityResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      addresses_ids_(from.addresses_ids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  credentials_ids_.MergeFrom(from.credentials_ids_);
  identity_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_identity_id().empty()) {
    identity_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_identity_id(),
      GetArena());
  }
  main_identifier_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_main_identifier().empty()) {
    main_identifier_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_main_identifier(),
      GetArena());
  }
  profile_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_profile_id().empty()) {
    profile_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_profile_id(),
      GetArena());
  }
  schema_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_schema_id().empty()) {
    schema_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_schema_id(),
      GetArena());
  }
  if (from._internal_has_created_at()) {
    created_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_at_);
  } else {
    created_at_ = nullptr;
  }
  if (from._internal_has_updated_at()) {
    updated_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.updated_at_);
  } else {
    updated_at_ = nullptr;
  }
  lock_ = from.lock_;
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetIdentityResponse)
}

void GetIdentityResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetIdentityResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  identity_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  main_identifier_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  profile_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  schema_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&created_at_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lock_) -
      reinterpret_cast<char*>(&created_at_)) + sizeof(lock_));
}

GetIdentityResponse::~GetIdentityResponse() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetIdentityResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetIdentityResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  identity_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  main_identifier_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  profile_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  schema_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete created_at_;
  if (this != internal_default_instance()) delete updated_at_;
}

void GetIdentityResponse::ArenaDtor(void* object) {
  GetIdentityResponse* _this = reinterpret_cast< GetIdentityResponse* >(object);
  (void)_this;
}
void GetIdentityResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetIdentityResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetIdentityResponse& GetIdentityResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetIdentityResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetIdentityResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetIdentityResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  addresses_ids_.Clear();
  credentials_ids_.Clear();
  identity_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  main_identifier_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  profile_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  schema_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
  if (GetArena() == nullptr && updated_at_ != nullptr) {
    delete updated_at_;
  }
  updated_at_ = nullptr;
  lock_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetIdentityResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string identity_id = 1[json_name = "identityId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_identity_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetIdentityResponse.identity_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_at = 2[json_name = "createdAt"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp updated_at = 3[json_name = "updatedAt"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_updated_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string main_identifier = 4[json_name = "mainIdentifier"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_main_identifier();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetIdentityResponse.main_identifier"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string profile_id = 5[json_name = "profileId"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_profile_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetIdentityResponse.profile_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string addresses_ids = 6[json_name = "addressesIds"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_addresses_ids();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetIdentityResponse.addresses_ids"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // map<string, string> credentials_ids = 7[json_name = "credentialsIds"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&credentials_ids_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else goto handle_unusual;
        continue;
      // string schema_id = 8[json_name = "schemaId"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_schema_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetIdentityResponse.schema_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.GetIdentityResponse.Lock lock = 9[json_name = "lock"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_lock(static_cast<::depot::devtools::auth::v0::identity::admin::GetIdentityResponse_Lock>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetIdentityResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetIdentityResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string identity_id = 1[json_name = "identityId"];
  if (this->identity_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_identity_id().data(), static_cast<int>(this->_internal_identity_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetIdentityResponse.identity_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_identity_id(), target);
  }

  // .google.protobuf.Timestamp created_at = 2[json_name = "createdAt"];
  if (this->has_created_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::created_at(this), target, stream);
  }

  // .google.protobuf.Timestamp updated_at = 3[json_name = "updatedAt"];
  if (this->has_updated_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::updated_at(this), target, stream);
  }

  // string main_identifier = 4[json_name = "mainIdentifier"];
  if (this->main_identifier().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_main_identifier().data(), static_cast<int>(this->_internal_main_identifier().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetIdentityResponse.main_identifier");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_main_identifier(), target);
  }

  // string profile_id = 5[json_name = "profileId"];
  if (this->profile_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_profile_id().data(), static_cast<int>(this->_internal_profile_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetIdentityResponse.profile_id");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_profile_id(), target);
  }

  // repeated string addresses_ids = 6[json_name = "addressesIds"];
  for (int i = 0, n = this->_internal_addresses_ids_size(); i < n; i++) {
    const auto& s = this->_internal_addresses_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetIdentityResponse.addresses_ids");
    target = stream->WriteString(6, s, target);
  }

  // map<string, string> credentials_ids = 7[json_name = "credentialsIds"];
  if (!this->_internal_credentials_ids().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "depot.devtools.auth.v0.identity.admin.GetIdentityResponse.CredentialsIdsEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "depot.devtools.auth.v0.identity.admin.GetIdentityResponse.CredentialsIdsEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_credentials_ids().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_credentials_ids().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_credentials_ids().begin();
          it != this->_internal_credentials_ids().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetIdentityResponse_CredentialsIdsEntry_DoNotUse::Funcs::InternalSerialize(7, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_credentials_ids().begin();
          it != this->_internal_credentials_ids().end(); ++it) {
        target = GetIdentityResponse_CredentialsIdsEntry_DoNotUse::Funcs::InternalSerialize(7, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // string schema_id = 8[json_name = "schemaId"];
  if (this->schema_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_schema_id().data(), static_cast<int>(this->_internal_schema_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetIdentityResponse.schema_id");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_schema_id(), target);
  }

  // .depot.devtools.auth.v0.identity.admin.GetIdentityResponse.Lock lock = 9[json_name = "lock"];
  if (this->lock() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      9, this->_internal_lock(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetIdentityResponse)
  return target;
}

size_t GetIdentityResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetIdentityResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string addresses_ids = 6[json_name = "addressesIds"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(addresses_ids_.size());
  for (int i = 0, n = addresses_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      addresses_ids_.Get(i));
  }

  // map<string, string> credentials_ids = 7[json_name = "credentialsIds"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_credentials_ids_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_credentials_ids().begin();
      it != this->_internal_credentials_ids().end(); ++it) {
    total_size += GetIdentityResponse_CredentialsIdsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string identity_id = 1[json_name = "identityId"];
  if (this->identity_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_identity_id());
  }

  // string main_identifier = 4[json_name = "mainIdentifier"];
  if (this->main_identifier().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_main_identifier());
  }

  // string profile_id = 5[json_name = "profileId"];
  if (this->profile_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_profile_id());
  }

  // string schema_id = 8[json_name = "schemaId"];
  if (this->schema_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_schema_id());
  }

  // .google.protobuf.Timestamp created_at = 2[json_name = "createdAt"];
  if (this->has_created_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_at_);
  }

  // .google.protobuf.Timestamp updated_at = 3[json_name = "updatedAt"];
  if (this->has_updated_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *updated_at_);
  }

  // .depot.devtools.auth.v0.identity.admin.GetIdentityResponse.Lock lock = 9[json_name = "lock"];
  if (this->lock() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_lock());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetIdentityResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetIdentityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetIdentityResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetIdentityResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetIdentityResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetIdentityResponse)
    MergeFrom(*source);
  }
}

void GetIdentityResponse::MergeFrom(const GetIdentityResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetIdentityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  addresses_ids_.MergeFrom(from.addresses_ids_);
  credentials_ids_.MergeFrom(from.credentials_ids_);
  if (from.identity_id().size() > 0) {
    _internal_set_identity_id(from._internal_identity_id());
  }
  if (from.main_identifier().size() > 0) {
    _internal_set_main_identifier(from._internal_main_identifier());
  }
  if (from.profile_id().size() > 0) {
    _internal_set_profile_id(from._internal_profile_id());
  }
  if (from.schema_id().size() > 0) {
    _internal_set_schema_id(from._internal_schema_id());
  }
  if (from.has_created_at()) {
    _internal_mutable_created_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_at());
  }
  if (from.has_updated_at()) {
    _internal_mutable_updated_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_updated_at());
  }
  if (from.lock() != 0) {
    _internal_set_lock(from._internal_lock());
  }
}

void GetIdentityResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetIdentityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIdentityResponse::CopyFrom(const GetIdentityResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetIdentityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIdentityResponse::IsInitialized() const {
  return true;
}

void GetIdentityResponse::InternalSwap(GetIdentityResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  addresses_ids_.InternalSwap(&other->addresses_ids_);
  credentials_ids_.Swap(&other->credentials_ids_);
  identity_id_.Swap(&other->identity_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  main_identifier_.Swap(&other->main_identifier_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  profile_id_.Swap(&other->profile_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  schema_id_.Swap(&other->schema_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetIdentityResponse, lock_)
      + sizeof(GetIdentityResponse::lock_)
      - PROTOBUF_FIELD_OFFSET(GetIdentityResponse, created_at_)>(
          reinterpret_cast<char*>(&created_at_),
          reinterpret_cast<char*>(&other->created_at_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetIdentityResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetIdentityByIdentifierRequest::InitAsDefaultInstance() {
}
class GetIdentityByIdentifierRequest::_Internal {
 public:
};

GetIdentityByIdentifierRequest::GetIdentityByIdentifierRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierRequest)
}
GetIdentityByIdentifierRequest::GetIdentityByIdentifierRequest(const GetIdentityByIdentifierRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  attribute_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_attribute().empty()) {
    attribute_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_attribute(),
      GetArena());
  }
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_value(),
      GetArena());
  }
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_connection_id().empty()) {
    connection_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_connection_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierRequest)
}

void GetIdentityByIdentifierRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetIdentityByIdentifierRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  attribute_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetIdentityByIdentifierRequest::~GetIdentityByIdentifierRequest() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetIdentityByIdentifierRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  attribute_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetIdentityByIdentifierRequest::ArenaDtor(void* object) {
  GetIdentityByIdentifierRequest* _this = reinterpret_cast< GetIdentityByIdentifierRequest* >(object);
  (void)_this;
}
void GetIdentityByIdentifierRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetIdentityByIdentifierRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetIdentityByIdentifierRequest& GetIdentityByIdentifierRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetIdentityByIdentifierRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetIdentityByIdentifierRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attribute_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  connection_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetIdentityByIdentifierRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string attribute = 1[json_name = "attribute"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_attribute();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierRequest.attribute"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string value = 2[json_name = "value"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierRequest.value"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string connection_id = 3[json_name = "connectionId"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_connection_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierRequest.connection_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetIdentityByIdentifierRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string attribute = 1[json_name = "attribute"];
  if (this->attribute().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_attribute().data(), static_cast<int>(this->_internal_attribute().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierRequest.attribute");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_attribute(), target);
  }

  // string value = 2[json_name = "value"];
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierRequest.value");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_value(), target);
  }

  // string connection_id = 3[json_name = "connectionId"];
  if (this->connection_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_connection_id().data(), static_cast<int>(this->_internal_connection_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierRequest.connection_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_connection_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierRequest)
  return target;
}

size_t GetIdentityByIdentifierRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string attribute = 1[json_name = "attribute"];
  if (this->attribute().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_attribute());
  }

  // string value = 2[json_name = "value"];
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  // string connection_id = 3[json_name = "connectionId"];
  if (this->connection_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_connection_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetIdentityByIdentifierRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetIdentityByIdentifierRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetIdentityByIdentifierRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierRequest)
    MergeFrom(*source);
  }
}

void GetIdentityByIdentifierRequest::MergeFrom(const GetIdentityByIdentifierRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.attribute().size() > 0) {
    _internal_set_attribute(from._internal_attribute());
  }
  if (from.value().size() > 0) {
    _internal_set_value(from._internal_value());
  }
  if (from.connection_id().size() > 0) {
    _internal_set_connection_id(from._internal_connection_id());
  }
}

void GetIdentityByIdentifierRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIdentityByIdentifierRequest::CopyFrom(const GetIdentityByIdentifierRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIdentityByIdentifierRequest::IsInitialized() const {
  return true;
}

void GetIdentityByIdentifierRequest::InternalSwap(GetIdentityByIdentifierRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  attribute_.Swap(&other->attribute_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  connection_id_.Swap(&other->connection_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetIdentityByIdentifierRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

GetIdentityByIdentifierResponse_Identity_CredentialsIdsEntry_DoNotUse::GetIdentityByIdentifierResponse_Identity_CredentialsIdsEntry_DoNotUse() {}
GetIdentityByIdentifierResponse_Identity_CredentialsIdsEntry_DoNotUse::GetIdentityByIdentifierResponse_Identity_CredentialsIdsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetIdentityByIdentifierResponse_Identity_CredentialsIdsEntry_DoNotUse::MergeFrom(const GetIdentityByIdentifierResponse_Identity_CredentialsIdsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetIdentityByIdentifierResponse_Identity_CredentialsIdsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void GetIdentityByIdentifierResponse_Identity_CredentialsIdsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void GetIdentityByIdentifierResponse_Identity::InitAsDefaultInstance() {
  ::depot::devtools::auth::v0::identity::admin::_GetIdentityByIdentifierResponse_Identity_default_instance_._instance.get_mutable()->created_at_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::depot::devtools::auth::v0::identity::admin::_GetIdentityByIdentifierResponse_Identity_default_instance_._instance.get_mutable()->updated_at_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
}
class GetIdentityByIdentifierResponse_Identity::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& created_at(const GetIdentityByIdentifierResponse_Identity* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& updated_at(const GetIdentityByIdentifierResponse_Identity* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
GetIdentityByIdentifierResponse_Identity::_Internal::created_at(const GetIdentityByIdentifierResponse_Identity* msg) {
  return *msg->created_at_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
GetIdentityByIdentifierResponse_Identity::_Internal::updated_at(const GetIdentityByIdentifierResponse_Identity* msg) {
  return *msg->updated_at_;
}
void GetIdentityByIdentifierResponse_Identity::clear_created_at() {
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
}
void GetIdentityByIdentifierResponse_Identity::clear_updated_at() {
  if (GetArena() == nullptr && updated_at_ != nullptr) {
    delete updated_at_;
  }
  updated_at_ = nullptr;
}
GetIdentityByIdentifierResponse_Identity::GetIdentityByIdentifierResponse_Identity(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  addresses_ids_(arena),
  credentials_ids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity)
}
GetIdentityByIdentifierResponse_Identity::GetIdentityByIdentifierResponse_Identity(const GetIdentityByIdentifierResponse_Identity& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      addresses_ids_(from.addresses_ids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  credentials_ids_.MergeFrom(from.credentials_ids_);
  identity_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_identity_id().empty()) {
    identity_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_identity_id(),
      GetArena());
  }
  main_identifier_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_main_identifier().empty()) {
    main_identifier_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_main_identifier(),
      GetArena());
  }
  profile_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_profile_id().empty()) {
    profile_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_profile_id(),
      GetArena());
  }
  schema_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_schema_id().empty()) {
    schema_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_schema_id(),
      GetArena());
  }
  if (from._internal_has_created_at()) {
    created_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_at_);
  } else {
    created_at_ = nullptr;
  }
  if (from._internal_has_updated_at()) {
    updated_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.updated_at_);
  } else {
    updated_at_ = nullptr;
  }
  lock_ = from.lock_;
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity)
}

void GetIdentityByIdentifierResponse_Identity::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetIdentityByIdentifierResponse_Identity_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  identity_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  main_identifier_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  profile_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  schema_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&created_at_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lock_) -
      reinterpret_cast<char*>(&created_at_)) + sizeof(lock_));
}

GetIdentityByIdentifierResponse_Identity::~GetIdentityByIdentifierResponse_Identity() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetIdentityByIdentifierResponse_Identity::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  identity_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  main_identifier_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  profile_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  schema_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete created_at_;
  if (this != internal_default_instance()) delete updated_at_;
}

void GetIdentityByIdentifierResponse_Identity::ArenaDtor(void* object) {
  GetIdentityByIdentifierResponse_Identity* _this = reinterpret_cast< GetIdentityByIdentifierResponse_Identity* >(object);
  (void)_this;
}
void GetIdentityByIdentifierResponse_Identity::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetIdentityByIdentifierResponse_Identity::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetIdentityByIdentifierResponse_Identity& GetIdentityByIdentifierResponse_Identity::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetIdentityByIdentifierResponse_Identity_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetIdentityByIdentifierResponse_Identity::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  addresses_ids_.Clear();
  credentials_ids_.Clear();
  identity_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  main_identifier_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  profile_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  schema_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
  if (GetArena() == nullptr && updated_at_ != nullptr) {
    delete updated_at_;
  }
  updated_at_ = nullptr;
  lock_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetIdentityByIdentifierResponse_Identity::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string identity_id = 1[json_name = "identityId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_identity_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity.identity_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_at = 2[json_name = "createdAt"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp updated_at = 3[json_name = "updatedAt"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_updated_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string main_identifier = 4[json_name = "mainIdentifier"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_main_identifier();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity.main_identifier"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string profile_id = 5[json_name = "profileId"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_profile_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity.profile_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string addresses_ids = 6[json_name = "addressesIds"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_addresses_ids();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity.addresses_ids"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // map<string, string> credentials_ids = 7[json_name = "credentialsIds"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&credentials_ids_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else goto handle_unusual;
        continue;
      // string schema_id = 8[json_name = "schemaId"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_schema_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity.schema_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity.Lock lock = 9[json_name = "lock"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_lock(static_cast<::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse_Identity_Lock>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetIdentityByIdentifierResponse_Identity::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string identity_id = 1[json_name = "identityId"];
  if (this->identity_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_identity_id().data(), static_cast<int>(this->_internal_identity_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity.identity_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_identity_id(), target);
  }

  // .google.protobuf.Timestamp created_at = 2[json_name = "createdAt"];
  if (this->has_created_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::created_at(this), target, stream);
  }

  // .google.protobuf.Timestamp updated_at = 3[json_name = "updatedAt"];
  if (this->has_updated_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::updated_at(this), target, stream);
  }

  // string main_identifier = 4[json_name = "mainIdentifier"];
  if (this->main_identifier().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_main_identifier().data(), static_cast<int>(this->_internal_main_identifier().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity.main_identifier");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_main_identifier(), target);
  }

  // string profile_id = 5[json_name = "profileId"];
  if (this->profile_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_profile_id().data(), static_cast<int>(this->_internal_profile_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity.profile_id");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_profile_id(), target);
  }

  // repeated string addresses_ids = 6[json_name = "addressesIds"];
  for (int i = 0, n = this->_internal_addresses_ids_size(); i < n; i++) {
    const auto& s = this->_internal_addresses_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity.addresses_ids");
    target = stream->WriteString(6, s, target);
  }

  // map<string, string> credentials_ids = 7[json_name = "credentialsIds"];
  if (!this->_internal_credentials_ids().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity.CredentialsIdsEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity.CredentialsIdsEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_credentials_ids().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_credentials_ids().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_credentials_ids().begin();
          it != this->_internal_credentials_ids().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetIdentityByIdentifierResponse_Identity_CredentialsIdsEntry_DoNotUse::Funcs::InternalSerialize(7, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_credentials_ids().begin();
          it != this->_internal_credentials_ids().end(); ++it) {
        target = GetIdentityByIdentifierResponse_Identity_CredentialsIdsEntry_DoNotUse::Funcs::InternalSerialize(7, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // string schema_id = 8[json_name = "schemaId"];
  if (this->schema_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_schema_id().data(), static_cast<int>(this->_internal_schema_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity.schema_id");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_schema_id(), target);
  }

  // .depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity.Lock lock = 9[json_name = "lock"];
  if (this->lock() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      9, this->_internal_lock(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity)
  return target;
}

size_t GetIdentityByIdentifierResponse_Identity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string addresses_ids = 6[json_name = "addressesIds"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(addresses_ids_.size());
  for (int i = 0, n = addresses_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      addresses_ids_.Get(i));
  }

  // map<string, string> credentials_ids = 7[json_name = "credentialsIds"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_credentials_ids_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_credentials_ids().begin();
      it != this->_internal_credentials_ids().end(); ++it) {
    total_size += GetIdentityByIdentifierResponse_Identity_CredentialsIdsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string identity_id = 1[json_name = "identityId"];
  if (this->identity_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_identity_id());
  }

  // string main_identifier = 4[json_name = "mainIdentifier"];
  if (this->main_identifier().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_main_identifier());
  }

  // string profile_id = 5[json_name = "profileId"];
  if (this->profile_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_profile_id());
  }

  // string schema_id = 8[json_name = "schemaId"];
  if (this->schema_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_schema_id());
  }

  // .google.protobuf.Timestamp created_at = 2[json_name = "createdAt"];
  if (this->has_created_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_at_);
  }

  // .google.protobuf.Timestamp updated_at = 3[json_name = "updatedAt"];
  if (this->has_updated_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *updated_at_);
  }

  // .depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity.Lock lock = 9[json_name = "lock"];
  if (this->lock() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_lock());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetIdentityByIdentifierResponse_Identity::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity)
  GOOGLE_DCHECK_NE(&from, this);
  const GetIdentityByIdentifierResponse_Identity* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetIdentityByIdentifierResponse_Identity>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity)
    MergeFrom(*source);
  }
}

void GetIdentityByIdentifierResponse_Identity::MergeFrom(const GetIdentityByIdentifierResponse_Identity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  addresses_ids_.MergeFrom(from.addresses_ids_);
  credentials_ids_.MergeFrom(from.credentials_ids_);
  if (from.identity_id().size() > 0) {
    _internal_set_identity_id(from._internal_identity_id());
  }
  if (from.main_identifier().size() > 0) {
    _internal_set_main_identifier(from._internal_main_identifier());
  }
  if (from.profile_id().size() > 0) {
    _internal_set_profile_id(from._internal_profile_id());
  }
  if (from.schema_id().size() > 0) {
    _internal_set_schema_id(from._internal_schema_id());
  }
  if (from.has_created_at()) {
    _internal_mutable_created_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_at());
  }
  if (from.has_updated_at()) {
    _internal_mutable_updated_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_updated_at());
  }
  if (from.lock() != 0) {
    _internal_set_lock(from._internal_lock());
  }
}

void GetIdentityByIdentifierResponse_Identity::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIdentityByIdentifierResponse_Identity::CopyFrom(const GetIdentityByIdentifierResponse_Identity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIdentityByIdentifierResponse_Identity::IsInitialized() const {
  return true;
}

void GetIdentityByIdentifierResponse_Identity::InternalSwap(GetIdentityByIdentifierResponse_Identity* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  addresses_ids_.InternalSwap(&other->addresses_ids_);
  credentials_ids_.Swap(&other->credentials_ids_);
  identity_id_.Swap(&other->identity_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  main_identifier_.Swap(&other->main_identifier_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  profile_id_.Swap(&other->profile_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  schema_id_.Swap(&other->schema_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetIdentityByIdentifierResponse_Identity, lock_)
      + sizeof(GetIdentityByIdentifierResponse_Identity::lock_)
      - PROTOBUF_FIELD_OFFSET(GetIdentityByIdentifierResponse_Identity, created_at_)>(
          reinterpret_cast<char*>(&created_at_),
          reinterpret_cast<char*>(&other->created_at_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetIdentityByIdentifierResponse_Identity::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetIdentityByIdentifierResponse::InitAsDefaultInstance() {
  ::depot::devtools::auth::v0::identity::admin::_GetIdentityByIdentifierResponse_default_instance_._instance.get_mutable()->identity_ = const_cast< ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse_Identity*>(
      ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse_Identity::internal_default_instance());
}
class GetIdentityByIdentifierResponse::_Internal {
 public:
  static const ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse_Identity& identity(const GetIdentityByIdentifierResponse* msg);
};

const ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse_Identity&
GetIdentityByIdentifierResponse::_Internal::identity(const GetIdentityByIdentifierResponse* msg) {
  return *msg->identity_;
}
GetIdentityByIdentifierResponse::GetIdentityByIdentifierResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse)
}
GetIdentityByIdentifierResponse::GetIdentityByIdentifierResponse(const GetIdentityByIdentifierResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_identity()) {
    identity_ = new ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse_Identity(*from.identity_);
  } else {
    identity_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse)
}

void GetIdentityByIdentifierResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetIdentityByIdentifierResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  identity_ = nullptr;
}

GetIdentityByIdentifierResponse::~GetIdentityByIdentifierResponse() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetIdentityByIdentifierResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete identity_;
}

void GetIdentityByIdentifierResponse::ArenaDtor(void* object) {
  GetIdentityByIdentifierResponse* _this = reinterpret_cast< GetIdentityByIdentifierResponse* >(object);
  (void)_this;
}
void GetIdentityByIdentifierResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetIdentityByIdentifierResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetIdentityByIdentifierResponse& GetIdentityByIdentifierResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetIdentityByIdentifierResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetIdentityByIdentifierResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && identity_ != nullptr) {
    delete identity_;
  }
  identity_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetIdentityByIdentifierResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity identity = 1[json_name = "identity"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_identity(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetIdentityByIdentifierResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity identity = 1[json_name = "identity"];
  if (this->has_identity()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::identity(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse)
  return target;
}

size_t GetIdentityByIdentifierResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity identity = 1[json_name = "identity"];
  if (this->has_identity()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *identity_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetIdentityByIdentifierResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetIdentityByIdentifierResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetIdentityByIdentifierResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse)
    MergeFrom(*source);
  }
}

void GetIdentityByIdentifierResponse::MergeFrom(const GetIdentityByIdentifierResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_identity()) {
    _internal_mutable_identity()->::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse_Identity::MergeFrom(from._internal_identity());
  }
}

void GetIdentityByIdentifierResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIdentityByIdentifierResponse::CopyFrom(const GetIdentityByIdentifierResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIdentityByIdentifierResponse::IsInitialized() const {
  return true;
}

void GetIdentityByIdentifierResponse::InternalSwap(GetIdentityByIdentifierResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(identity_, other->identity_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetIdentityByIdentifierResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetIdentitiesByAttributeRequest::InitAsDefaultInstance() {
}
class GetIdentitiesByAttributeRequest::_Internal {
 public:
};

GetIdentitiesByAttributeRequest::GetIdentitiesByAttributeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeRequest)
}
GetIdentitiesByAttributeRequest::GetIdentitiesByAttributeRequest(const GetIdentitiesByAttributeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  attribute_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_attribute().empty()) {
    attribute_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_attribute(),
      GetArena());
  }
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeRequest)
}

void GetIdentitiesByAttributeRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetIdentitiesByAttributeRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  attribute_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetIdentitiesByAttributeRequest::~GetIdentitiesByAttributeRequest() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetIdentitiesByAttributeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  attribute_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetIdentitiesByAttributeRequest::ArenaDtor(void* object) {
  GetIdentitiesByAttributeRequest* _this = reinterpret_cast< GetIdentitiesByAttributeRequest* >(object);
  (void)_this;
}
void GetIdentitiesByAttributeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetIdentitiesByAttributeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetIdentitiesByAttributeRequest& GetIdentitiesByAttributeRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetIdentitiesByAttributeRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetIdentitiesByAttributeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attribute_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetIdentitiesByAttributeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string attribute = 1[json_name = "attribute"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_attribute();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeRequest.attribute"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string value = 2[json_name = "value"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeRequest.value"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetIdentitiesByAttributeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string attribute = 1[json_name = "attribute"];
  if (this->attribute().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_attribute().data(), static_cast<int>(this->_internal_attribute().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeRequest.attribute");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_attribute(), target);
  }

  // string value = 2[json_name = "value"];
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeRequest.value");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeRequest)
  return target;
}

size_t GetIdentitiesByAttributeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string attribute = 1[json_name = "attribute"];
  if (this->attribute().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_attribute());
  }

  // string value = 2[json_name = "value"];
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetIdentitiesByAttributeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetIdentitiesByAttributeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetIdentitiesByAttributeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeRequest)
    MergeFrom(*source);
  }
}

void GetIdentitiesByAttributeRequest::MergeFrom(const GetIdentitiesByAttributeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.attribute().size() > 0) {
    _internal_set_attribute(from._internal_attribute());
  }
  if (from.value().size() > 0) {
    _internal_set_value(from._internal_value());
  }
}

void GetIdentitiesByAttributeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIdentitiesByAttributeRequest::CopyFrom(const GetIdentitiesByAttributeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIdentitiesByAttributeRequest::IsInitialized() const {
  return true;
}

void GetIdentitiesByAttributeRequest::InternalSwap(GetIdentitiesByAttributeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  attribute_.Swap(&other->attribute_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetIdentitiesByAttributeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

GetIdentitiesByAttributeResponse_Identity_CredentialsIdsEntry_DoNotUse::GetIdentitiesByAttributeResponse_Identity_CredentialsIdsEntry_DoNotUse() {}
GetIdentitiesByAttributeResponse_Identity_CredentialsIdsEntry_DoNotUse::GetIdentitiesByAttributeResponse_Identity_CredentialsIdsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetIdentitiesByAttributeResponse_Identity_CredentialsIdsEntry_DoNotUse::MergeFrom(const GetIdentitiesByAttributeResponse_Identity_CredentialsIdsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetIdentitiesByAttributeResponse_Identity_CredentialsIdsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void GetIdentitiesByAttributeResponse_Identity_CredentialsIdsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void GetIdentitiesByAttributeResponse_Identity::InitAsDefaultInstance() {
  ::depot::devtools::auth::v0::identity::admin::_GetIdentitiesByAttributeResponse_Identity_default_instance_._instance.get_mutable()->created_at_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::depot::devtools::auth::v0::identity::admin::_GetIdentitiesByAttributeResponse_Identity_default_instance_._instance.get_mutable()->updated_at_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
}
class GetIdentitiesByAttributeResponse_Identity::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& created_at(const GetIdentitiesByAttributeResponse_Identity* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& updated_at(const GetIdentitiesByAttributeResponse_Identity* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
GetIdentitiesByAttributeResponse_Identity::_Internal::created_at(const GetIdentitiesByAttributeResponse_Identity* msg) {
  return *msg->created_at_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
GetIdentitiesByAttributeResponse_Identity::_Internal::updated_at(const GetIdentitiesByAttributeResponse_Identity* msg) {
  return *msg->updated_at_;
}
void GetIdentitiesByAttributeResponse_Identity::clear_created_at() {
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
}
void GetIdentitiesByAttributeResponse_Identity::clear_updated_at() {
  if (GetArena() == nullptr && updated_at_ != nullptr) {
    delete updated_at_;
  }
  updated_at_ = nullptr;
}
GetIdentitiesByAttributeResponse_Identity::GetIdentitiesByAttributeResponse_Identity(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  addresses_ids_(arena),
  credentials_ids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity)
}
GetIdentitiesByAttributeResponse_Identity::GetIdentitiesByAttributeResponse_Identity(const GetIdentitiesByAttributeResponse_Identity& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      addresses_ids_(from.addresses_ids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  credentials_ids_.MergeFrom(from.credentials_ids_);
  identity_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_identity_id().empty()) {
    identity_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_identity_id(),
      GetArena());
  }
  main_identifier_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_main_identifier().empty()) {
    main_identifier_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_main_identifier(),
      GetArena());
  }
  profile_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_profile_id().empty()) {
    profile_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_profile_id(),
      GetArena());
  }
  schema_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_schema_id().empty()) {
    schema_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_schema_id(),
      GetArena());
  }
  if (from._internal_has_created_at()) {
    created_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_at_);
  } else {
    created_at_ = nullptr;
  }
  if (from._internal_has_updated_at()) {
    updated_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.updated_at_);
  } else {
    updated_at_ = nullptr;
  }
  lock_ = from.lock_;
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity)
}

void GetIdentitiesByAttributeResponse_Identity::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetIdentitiesByAttributeResponse_Identity_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  identity_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  main_identifier_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  profile_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  schema_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&created_at_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lock_) -
      reinterpret_cast<char*>(&created_at_)) + sizeof(lock_));
}

GetIdentitiesByAttributeResponse_Identity::~GetIdentitiesByAttributeResponse_Identity() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetIdentitiesByAttributeResponse_Identity::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  identity_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  main_identifier_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  profile_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  schema_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete created_at_;
  if (this != internal_default_instance()) delete updated_at_;
}

void GetIdentitiesByAttributeResponse_Identity::ArenaDtor(void* object) {
  GetIdentitiesByAttributeResponse_Identity* _this = reinterpret_cast< GetIdentitiesByAttributeResponse_Identity* >(object);
  (void)_this;
}
void GetIdentitiesByAttributeResponse_Identity::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetIdentitiesByAttributeResponse_Identity::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetIdentitiesByAttributeResponse_Identity& GetIdentitiesByAttributeResponse_Identity::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetIdentitiesByAttributeResponse_Identity_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetIdentitiesByAttributeResponse_Identity::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  addresses_ids_.Clear();
  credentials_ids_.Clear();
  identity_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  main_identifier_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  profile_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  schema_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
  if (GetArena() == nullptr && updated_at_ != nullptr) {
    delete updated_at_;
  }
  updated_at_ = nullptr;
  lock_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetIdentitiesByAttributeResponse_Identity::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string identity_id = 1[json_name = "identityId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_identity_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity.identity_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_at = 2[json_name = "createdAt"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp updated_at = 3[json_name = "updatedAt"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_updated_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string main_identifier = 4[json_name = "mainIdentifier"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_main_identifier();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity.main_identifier"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string profile_id = 5[json_name = "profileId"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_profile_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity.profile_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string addresses_ids = 6[json_name = "addressesIds"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_addresses_ids();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity.addresses_ids"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // map<string, string> credentials_ids = 7[json_name = "credentialsIds"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&credentials_ids_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else goto handle_unusual;
        continue;
      // string schema_id = 8[json_name = "schemaId"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_schema_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity.schema_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity.Lock lock = 9[json_name = "lock"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_lock(static_cast<::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse_Identity_Lock>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetIdentitiesByAttributeResponse_Identity::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string identity_id = 1[json_name = "identityId"];
  if (this->identity_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_identity_id().data(), static_cast<int>(this->_internal_identity_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity.identity_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_identity_id(), target);
  }

  // .google.protobuf.Timestamp created_at = 2[json_name = "createdAt"];
  if (this->has_created_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::created_at(this), target, stream);
  }

  // .google.protobuf.Timestamp updated_at = 3[json_name = "updatedAt"];
  if (this->has_updated_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::updated_at(this), target, stream);
  }

  // string main_identifier = 4[json_name = "mainIdentifier"];
  if (this->main_identifier().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_main_identifier().data(), static_cast<int>(this->_internal_main_identifier().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity.main_identifier");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_main_identifier(), target);
  }

  // string profile_id = 5[json_name = "profileId"];
  if (this->profile_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_profile_id().data(), static_cast<int>(this->_internal_profile_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity.profile_id");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_profile_id(), target);
  }

  // repeated string addresses_ids = 6[json_name = "addressesIds"];
  for (int i = 0, n = this->_internal_addresses_ids_size(); i < n; i++) {
    const auto& s = this->_internal_addresses_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity.addresses_ids");
    target = stream->WriteString(6, s, target);
  }

  // map<string, string> credentials_ids = 7[json_name = "credentialsIds"];
  if (!this->_internal_credentials_ids().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity.CredentialsIdsEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity.CredentialsIdsEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_credentials_ids().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_credentials_ids().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_credentials_ids().begin();
          it != this->_internal_credentials_ids().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetIdentitiesByAttributeResponse_Identity_CredentialsIdsEntry_DoNotUse::Funcs::InternalSerialize(7, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_credentials_ids().begin();
          it != this->_internal_credentials_ids().end(); ++it) {
        target = GetIdentitiesByAttributeResponse_Identity_CredentialsIdsEntry_DoNotUse::Funcs::InternalSerialize(7, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // string schema_id = 8[json_name = "schemaId"];
  if (this->schema_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_schema_id().data(), static_cast<int>(this->_internal_schema_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity.schema_id");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_schema_id(), target);
  }

  // .depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity.Lock lock = 9[json_name = "lock"];
  if (this->lock() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      9, this->_internal_lock(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity)
  return target;
}

size_t GetIdentitiesByAttributeResponse_Identity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string addresses_ids = 6[json_name = "addressesIds"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(addresses_ids_.size());
  for (int i = 0, n = addresses_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      addresses_ids_.Get(i));
  }

  // map<string, string> credentials_ids = 7[json_name = "credentialsIds"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_credentials_ids_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_credentials_ids().begin();
      it != this->_internal_credentials_ids().end(); ++it) {
    total_size += GetIdentitiesByAttributeResponse_Identity_CredentialsIdsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string identity_id = 1[json_name = "identityId"];
  if (this->identity_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_identity_id());
  }

  // string main_identifier = 4[json_name = "mainIdentifier"];
  if (this->main_identifier().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_main_identifier());
  }

  // string profile_id = 5[json_name = "profileId"];
  if (this->profile_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_profile_id());
  }

  // string schema_id = 8[json_name = "schemaId"];
  if (this->schema_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_schema_id());
  }

  // .google.protobuf.Timestamp created_at = 2[json_name = "createdAt"];
  if (this->has_created_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_at_);
  }

  // .google.protobuf.Timestamp updated_at = 3[json_name = "updatedAt"];
  if (this->has_updated_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *updated_at_);
  }

  // .depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity.Lock lock = 9[json_name = "lock"];
  if (this->lock() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_lock());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetIdentitiesByAttributeResponse_Identity::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity)
  GOOGLE_DCHECK_NE(&from, this);
  const GetIdentitiesByAttributeResponse_Identity* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetIdentitiesByAttributeResponse_Identity>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity)
    MergeFrom(*source);
  }
}

void GetIdentitiesByAttributeResponse_Identity::MergeFrom(const GetIdentitiesByAttributeResponse_Identity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  addresses_ids_.MergeFrom(from.addresses_ids_);
  credentials_ids_.MergeFrom(from.credentials_ids_);
  if (from.identity_id().size() > 0) {
    _internal_set_identity_id(from._internal_identity_id());
  }
  if (from.main_identifier().size() > 0) {
    _internal_set_main_identifier(from._internal_main_identifier());
  }
  if (from.profile_id().size() > 0) {
    _internal_set_profile_id(from._internal_profile_id());
  }
  if (from.schema_id().size() > 0) {
    _internal_set_schema_id(from._internal_schema_id());
  }
  if (from.has_created_at()) {
    _internal_mutable_created_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_at());
  }
  if (from.has_updated_at()) {
    _internal_mutable_updated_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_updated_at());
  }
  if (from.lock() != 0) {
    _internal_set_lock(from._internal_lock());
  }
}

void GetIdentitiesByAttributeResponse_Identity::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIdentitiesByAttributeResponse_Identity::CopyFrom(const GetIdentitiesByAttributeResponse_Identity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIdentitiesByAttributeResponse_Identity::IsInitialized() const {
  return true;
}

void GetIdentitiesByAttributeResponse_Identity::InternalSwap(GetIdentitiesByAttributeResponse_Identity* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  addresses_ids_.InternalSwap(&other->addresses_ids_);
  credentials_ids_.Swap(&other->credentials_ids_);
  identity_id_.Swap(&other->identity_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  main_identifier_.Swap(&other->main_identifier_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  profile_id_.Swap(&other->profile_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  schema_id_.Swap(&other->schema_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetIdentitiesByAttributeResponse_Identity, lock_)
      + sizeof(GetIdentitiesByAttributeResponse_Identity::lock_)
      - PROTOBUF_FIELD_OFFSET(GetIdentitiesByAttributeResponse_Identity, created_at_)>(
          reinterpret_cast<char*>(&created_at_),
          reinterpret_cast<char*>(&other->created_at_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetIdentitiesByAttributeResponse_Identity::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetIdentitiesByAttributeResponse::InitAsDefaultInstance() {
}
class GetIdentitiesByAttributeResponse::_Internal {
 public:
};

GetIdentitiesByAttributeResponse::GetIdentitiesByAttributeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  identities_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse)
}
GetIdentitiesByAttributeResponse::GetIdentitiesByAttributeResponse(const GetIdentitiesByAttributeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      identities_(from.identities_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse)
}

void GetIdentitiesByAttributeResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetIdentitiesByAttributeResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
}

GetIdentitiesByAttributeResponse::~GetIdentitiesByAttributeResponse() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetIdentitiesByAttributeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetIdentitiesByAttributeResponse::ArenaDtor(void* object) {
  GetIdentitiesByAttributeResponse* _this = reinterpret_cast< GetIdentitiesByAttributeResponse* >(object);
  (void)_this;
}
void GetIdentitiesByAttributeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetIdentitiesByAttributeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetIdentitiesByAttributeResponse& GetIdentitiesByAttributeResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetIdentitiesByAttributeResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetIdentitiesByAttributeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  identities_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetIdentitiesByAttributeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity identities = 1[json_name = "identities"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_identities(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetIdentitiesByAttributeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity identities = 1[json_name = "identities"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_identities_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_identities(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse)
  return target;
}

size_t GetIdentitiesByAttributeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity identities = 1[json_name = "identities"];
  total_size += 1UL * this->_internal_identities_size();
  for (const auto& msg : this->identities_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetIdentitiesByAttributeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetIdentitiesByAttributeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetIdentitiesByAttributeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse)
    MergeFrom(*source);
  }
}

void GetIdentitiesByAttributeResponse::MergeFrom(const GetIdentitiesByAttributeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  identities_.MergeFrom(from.identities_);
}

void GetIdentitiesByAttributeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIdentitiesByAttributeResponse::CopyFrom(const GetIdentitiesByAttributeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIdentitiesByAttributeResponse::IsInitialized() const {
  return true;
}

void GetIdentitiesByAttributeResponse::InternalSwap(GetIdentitiesByAttributeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  identities_.InternalSwap(&other->identities_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetIdentitiesByAttributeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateIdentityRequest::InitAsDefaultInstance() {
}
class UpdateIdentityRequest::_Internal {
 public:
};

UpdateIdentityRequest::UpdateIdentityRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.UpdateIdentityRequest)
}
UpdateIdentityRequest::UpdateIdentityRequest(const UpdateIdentityRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  identity_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_identity_id().empty()) {
    identity_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_identity_id(),
      GetArena());
  }
  lock_ = from.lock_;
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.UpdateIdentityRequest)
}

void UpdateIdentityRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateIdentityRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  identity_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  lock_ = 0;
}

UpdateIdentityRequest::~UpdateIdentityRequest() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.UpdateIdentityRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateIdentityRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  identity_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpdateIdentityRequest::ArenaDtor(void* object) {
  UpdateIdentityRequest* _this = reinterpret_cast< UpdateIdentityRequest* >(object);
  (void)_this;
}
void UpdateIdentityRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateIdentityRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateIdentityRequest& UpdateIdentityRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateIdentityRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void UpdateIdentityRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.UpdateIdentityRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  identity_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  lock_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateIdentityRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string identity_id = 1[json_name = "identityId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_identity_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateIdentityRequest.identity_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.UpdateIdentityRequest.Lock lock = 2[json_name = "lock"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_lock(static_cast<::depot::devtools::auth::v0::identity::admin::UpdateIdentityRequest_Lock>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateIdentityRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.UpdateIdentityRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string identity_id = 1[json_name = "identityId"];
  if (this->identity_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_identity_id().data(), static_cast<int>(this->_internal_identity_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateIdentityRequest.identity_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_identity_id(), target);
  }

  // .depot.devtools.auth.v0.identity.admin.UpdateIdentityRequest.Lock lock = 2[json_name = "lock"];
  if (this->lock() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_lock(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.UpdateIdentityRequest)
  return target;
}

size_t UpdateIdentityRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.UpdateIdentityRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string identity_id = 1[json_name = "identityId"];
  if (this->identity_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_identity_id());
  }

  // .depot.devtools.auth.v0.identity.admin.UpdateIdentityRequest.Lock lock = 2[json_name = "lock"];
  if (this->lock() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_lock());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateIdentityRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.UpdateIdentityRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateIdentityRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateIdentityRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.UpdateIdentityRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.UpdateIdentityRequest)
    MergeFrom(*source);
  }
}

void UpdateIdentityRequest::MergeFrom(const UpdateIdentityRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.UpdateIdentityRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.identity_id().size() > 0) {
    _internal_set_identity_id(from._internal_identity_id());
  }
  if (from.lock() != 0) {
    _internal_set_lock(from._internal_lock());
  }
}

void UpdateIdentityRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.UpdateIdentityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateIdentityRequest::CopyFrom(const UpdateIdentityRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.UpdateIdentityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateIdentityRequest::IsInitialized() const {
  return true;
}

void UpdateIdentityRequest::InternalSwap(UpdateIdentityRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  identity_id_.Swap(&other->identity_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(lock_, other->lock_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateIdentityRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateIdentityResponse::InitAsDefaultInstance() {
}
class UpdateIdentityResponse::_Internal {
 public:
};

UpdateIdentityResponse::UpdateIdentityResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.UpdateIdentityResponse)
}
UpdateIdentityResponse::UpdateIdentityResponse(const UpdateIdentityResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.UpdateIdentityResponse)
}

void UpdateIdentityResponse::SharedCtor() {
}

UpdateIdentityResponse::~UpdateIdentityResponse() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.UpdateIdentityResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateIdentityResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UpdateIdentityResponse::ArenaDtor(void* object) {
  UpdateIdentityResponse* _this = reinterpret_cast< UpdateIdentityResponse* >(object);
  (void)_this;
}
void UpdateIdentityResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateIdentityResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateIdentityResponse& UpdateIdentityResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateIdentityResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void UpdateIdentityResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.UpdateIdentityResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateIdentityResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateIdentityResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.UpdateIdentityResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.UpdateIdentityResponse)
  return target;
}

size_t UpdateIdentityResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.UpdateIdentityResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateIdentityResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.UpdateIdentityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateIdentityResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateIdentityResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.UpdateIdentityResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.UpdateIdentityResponse)
    MergeFrom(*source);
  }
}

void UpdateIdentityResponse::MergeFrom(const UpdateIdentityResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.UpdateIdentityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UpdateIdentityResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.UpdateIdentityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateIdentityResponse::CopyFrom(const UpdateIdentityResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.UpdateIdentityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateIdentityResponse::IsInitialized() const {
  return true;
}

void UpdateIdentityResponse::InternalSwap(UpdateIdentityResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateIdentityResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteIdentityRequest::InitAsDefaultInstance() {
}
class DeleteIdentityRequest::_Internal {
 public:
};

DeleteIdentityRequest::DeleteIdentityRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.DeleteIdentityRequest)
}
DeleteIdentityRequest::DeleteIdentityRequest(const DeleteIdentityRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  identity_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_identity_id().empty()) {
    identity_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_identity_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.DeleteIdentityRequest)
}

void DeleteIdentityRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteIdentityRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  identity_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteIdentityRequest::~DeleteIdentityRequest() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.DeleteIdentityRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteIdentityRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  identity_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteIdentityRequest::ArenaDtor(void* object) {
  DeleteIdentityRequest* _this = reinterpret_cast< DeleteIdentityRequest* >(object);
  (void)_this;
}
void DeleteIdentityRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteIdentityRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteIdentityRequest& DeleteIdentityRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteIdentityRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void DeleteIdentityRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.DeleteIdentityRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  identity_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteIdentityRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string identity_id = 1[json_name = "identityId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_identity_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.DeleteIdentityRequest.identity_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteIdentityRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.DeleteIdentityRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string identity_id = 1[json_name = "identityId"];
  if (this->identity_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_identity_id().data(), static_cast<int>(this->_internal_identity_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.DeleteIdentityRequest.identity_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_identity_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.DeleteIdentityRequest)
  return target;
}

size_t DeleteIdentityRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.DeleteIdentityRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string identity_id = 1[json_name = "identityId"];
  if (this->identity_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_identity_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteIdentityRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.DeleteIdentityRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteIdentityRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteIdentityRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.DeleteIdentityRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.DeleteIdentityRequest)
    MergeFrom(*source);
  }
}

void DeleteIdentityRequest::MergeFrom(const DeleteIdentityRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.DeleteIdentityRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.identity_id().size() > 0) {
    _internal_set_identity_id(from._internal_identity_id());
  }
}

void DeleteIdentityRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.DeleteIdentityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteIdentityRequest::CopyFrom(const DeleteIdentityRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.DeleteIdentityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteIdentityRequest::IsInitialized() const {
  return true;
}

void DeleteIdentityRequest::InternalSwap(DeleteIdentityRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  identity_id_.Swap(&other->identity_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteIdentityRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteIdentityResponse::InitAsDefaultInstance() {
}
class DeleteIdentityResponse::_Internal {
 public:
};

DeleteIdentityResponse::DeleteIdentityResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.DeleteIdentityResponse)
}
DeleteIdentityResponse::DeleteIdentityResponse(const DeleteIdentityResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.DeleteIdentityResponse)
}

void DeleteIdentityResponse::SharedCtor() {
}

DeleteIdentityResponse::~DeleteIdentityResponse() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.DeleteIdentityResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteIdentityResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteIdentityResponse::ArenaDtor(void* object) {
  DeleteIdentityResponse* _this = reinterpret_cast< DeleteIdentityResponse* >(object);
  (void)_this;
}
void DeleteIdentityResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteIdentityResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteIdentityResponse& DeleteIdentityResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteIdentityResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void DeleteIdentityResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.DeleteIdentityResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteIdentityResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteIdentityResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.DeleteIdentityResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.DeleteIdentityResponse)
  return target;
}

size_t DeleteIdentityResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.DeleteIdentityResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteIdentityResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.DeleteIdentityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteIdentityResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteIdentityResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.DeleteIdentityResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.DeleteIdentityResponse)
    MergeFrom(*source);
  }
}

void DeleteIdentityResponse::MergeFrom(const DeleteIdentityResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.DeleteIdentityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteIdentityResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.DeleteIdentityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteIdentityResponse::CopyFrom(const DeleteIdentityResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.DeleteIdentityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteIdentityResponse::IsInitialized() const {
  return true;
}

void DeleteIdentityResponse::InternalSwap(DeleteIdentityResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteIdentityResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetCredentialsRequest::InitAsDefaultInstance() {
}
class GetCredentialsRequest::_Internal {
 public:
};

GetCredentialsRequest::GetCredentialsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetCredentialsRequest)
}
GetCredentialsRequest::GetCredentialsRequest(const GetCredentialsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  identity_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_identity_id().empty()) {
    identity_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_identity_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetCredentialsRequest)
}

void GetCredentialsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetCredentialsRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  identity_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetCredentialsRequest::~GetCredentialsRequest() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetCredentialsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetCredentialsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  identity_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetCredentialsRequest::ArenaDtor(void* object) {
  GetCredentialsRequest* _this = reinterpret_cast< GetCredentialsRequest* >(object);
  (void)_this;
}
void GetCredentialsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetCredentialsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetCredentialsRequest& GetCredentialsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetCredentialsRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetCredentialsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetCredentialsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  identity_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCredentialsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string identity_id = 1[json_name = "identityId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_identity_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetCredentialsRequest.identity_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetCredentialsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetCredentialsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string identity_id = 1[json_name = "identityId"];
  if (this->identity_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_identity_id().data(), static_cast<int>(this->_internal_identity_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetCredentialsRequest.identity_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_identity_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetCredentialsRequest)
  return target;
}

size_t GetCredentialsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetCredentialsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string identity_id = 1[json_name = "identityId"];
  if (this->identity_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_identity_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetCredentialsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetCredentialsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCredentialsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetCredentialsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetCredentialsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetCredentialsRequest)
    MergeFrom(*source);
  }
}

void GetCredentialsRequest::MergeFrom(const GetCredentialsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetCredentialsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.identity_id().size() > 0) {
    _internal_set_identity_id(from._internal_identity_id());
  }
}

void GetCredentialsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetCredentialsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCredentialsRequest::CopyFrom(const GetCredentialsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetCredentialsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCredentialsRequest::IsInitialized() const {
  return true;
}

void GetCredentialsRequest::InternalSwap(GetCredentialsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  identity_id_.Swap(&other->identity_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCredentialsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetCredentialsResponse_Credential::InitAsDefaultInstance() {
  ::depot::devtools::auth::v0::identity::admin::_GetCredentialsResponse_Credential_default_instance_._instance.get_mutable()->created_at_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::depot::devtools::auth::v0::identity::admin::_GetCredentialsResponse_Credential_default_instance_._instance.get_mutable()->updated_at_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
}
class GetCredentialsResponse_Credential::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& created_at(const GetCredentialsResponse_Credential* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& updated_at(const GetCredentialsResponse_Credential* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
GetCredentialsResponse_Credential::_Internal::created_at(const GetCredentialsResponse_Credential* msg) {
  return *msg->created_at_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
GetCredentialsResponse_Credential::_Internal::updated_at(const GetCredentialsResponse_Credential* msg) {
  return *msg->updated_at_;
}
void GetCredentialsResponse_Credential::clear_created_at() {
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
}
void GetCredentialsResponse_Credential::clear_updated_at() {
  if (GetArena() == nullptr && updated_at_ != nullptr) {
    delete updated_at_;
  }
  updated_at_ = nullptr;
}
GetCredentialsResponse_Credential::GetCredentialsResponse_Credential(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetCredentialsResponse.Credential)
}
GetCredentialsResponse_Credential::GetCredentialsResponse_Credential(const GetCredentialsResponse_Credential& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  credential_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_credential_id().empty()) {
    credential_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_credential_id(),
      GetArena());
  }
  identity_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_identity_id().empty()) {
    identity_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_identity_id(),
      GetArena());
  }
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_connection_id().empty()) {
    connection_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_connection_id(),
      GetArena());
  }
  if (from._internal_has_created_at()) {
    created_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_at_);
  } else {
    created_at_ = nullptr;
  }
  if (from._internal_has_updated_at()) {
    updated_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.updated_at_);
  } else {
    updated_at_ = nullptr;
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&configured_) -
    reinterpret_cast<char*>(&type_)) + sizeof(configured_));
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetCredentialsResponse.Credential)
}

void GetCredentialsResponse_Credential::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetCredentialsResponse_Credential_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  credential_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  identity_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&created_at_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&configured_) -
      reinterpret_cast<char*>(&created_at_)) + sizeof(configured_));
}

GetCredentialsResponse_Credential::~GetCredentialsResponse_Credential() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetCredentialsResponse.Credential)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetCredentialsResponse_Credential::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  credential_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  identity_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete created_at_;
  if (this != internal_default_instance()) delete updated_at_;
}

void GetCredentialsResponse_Credential::ArenaDtor(void* object) {
  GetCredentialsResponse_Credential* _this = reinterpret_cast< GetCredentialsResponse_Credential* >(object);
  (void)_this;
}
void GetCredentialsResponse_Credential::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetCredentialsResponse_Credential::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetCredentialsResponse_Credential& GetCredentialsResponse_Credential::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetCredentialsResponse_Credential_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetCredentialsResponse_Credential::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetCredentialsResponse.Credential)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  credential_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  identity_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  connection_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
  if (GetArena() == nullptr && updated_at_ != nullptr) {
    delete updated_at_;
  }
  updated_at_ = nullptr;
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&configured_) -
      reinterpret_cast<char*>(&type_)) + sizeof(configured_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCredentialsResponse_Credential::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string credential_id = 1[json_name = "credentialId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_credential_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetCredentialsResponse.Credential.credential_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_at = 2[json_name = "createdAt"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp updated_at = 3[json_name = "updatedAt"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_updated_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string identity_id = 4[json_name = "identityId"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_identity_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetCredentialsResponse.Credential.identity_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 type = 5[json_name = "type"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string connection_id = 6[json_name = "connectionId"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_connection_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetCredentialsResponse.Credential.connection_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool configured = 7[json_name = "configured"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          configured_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetCredentialsResponse_Credential::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetCredentialsResponse.Credential)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string credential_id = 1[json_name = "credentialId"];
  if (this->credential_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_credential_id().data(), static_cast<int>(this->_internal_credential_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetCredentialsResponse.Credential.credential_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_credential_id(), target);
  }

  // .google.protobuf.Timestamp created_at = 2[json_name = "createdAt"];
  if (this->has_created_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::created_at(this), target, stream);
  }

  // .google.protobuf.Timestamp updated_at = 3[json_name = "updatedAt"];
  if (this->has_updated_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::updated_at(this), target, stream);
  }

  // string identity_id = 4[json_name = "identityId"];
  if (this->identity_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_identity_id().data(), static_cast<int>(this->_internal_identity_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetCredentialsResponse.Credential.identity_id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_identity_id(), target);
  }

  // int32 type = 5[json_name = "type"];
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_type(), target);
  }

  // string connection_id = 6[json_name = "connectionId"];
  if (this->connection_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_connection_id().data(), static_cast<int>(this->_internal_connection_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetCredentialsResponse.Credential.connection_id");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_connection_id(), target);
  }

  // bool configured = 7[json_name = "configured"];
  if (this->configured() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->_internal_configured(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetCredentialsResponse.Credential)
  return target;
}

size_t GetCredentialsResponse_Credential::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetCredentialsResponse.Credential)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string credential_id = 1[json_name = "credentialId"];
  if (this->credential_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_credential_id());
  }

  // string identity_id = 4[json_name = "identityId"];
  if (this->identity_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_identity_id());
  }

  // string connection_id = 6[json_name = "connectionId"];
  if (this->connection_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_connection_id());
  }

  // .google.protobuf.Timestamp created_at = 2[json_name = "createdAt"];
  if (this->has_created_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_at_);
  }

  // .google.protobuf.Timestamp updated_at = 3[json_name = "updatedAt"];
  if (this->has_updated_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *updated_at_);
  }

  // int32 type = 5[json_name = "type"];
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_type());
  }

  // bool configured = 7[json_name = "configured"];
  if (this->configured() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetCredentialsResponse_Credential::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetCredentialsResponse.Credential)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCredentialsResponse_Credential* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetCredentialsResponse_Credential>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetCredentialsResponse.Credential)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetCredentialsResponse.Credential)
    MergeFrom(*source);
  }
}

void GetCredentialsResponse_Credential::MergeFrom(const GetCredentialsResponse_Credential& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetCredentialsResponse.Credential)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.credential_id().size() > 0) {
    _internal_set_credential_id(from._internal_credential_id());
  }
  if (from.identity_id().size() > 0) {
    _internal_set_identity_id(from._internal_identity_id());
  }
  if (from.connection_id().size() > 0) {
    _internal_set_connection_id(from._internal_connection_id());
  }
  if (from.has_created_at()) {
    _internal_mutable_created_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_at());
  }
  if (from.has_updated_at()) {
    _internal_mutable_updated_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_updated_at());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.configured() != 0) {
    _internal_set_configured(from._internal_configured());
  }
}

void GetCredentialsResponse_Credential::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetCredentialsResponse.Credential)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCredentialsResponse_Credential::CopyFrom(const GetCredentialsResponse_Credential& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetCredentialsResponse.Credential)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCredentialsResponse_Credential::IsInitialized() const {
  return true;
}

void GetCredentialsResponse_Credential::InternalSwap(GetCredentialsResponse_Credential* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  credential_id_.Swap(&other->credential_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  identity_id_.Swap(&other->identity_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  connection_id_.Swap(&other->connection_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetCredentialsResponse_Credential, configured_)
      + sizeof(GetCredentialsResponse_Credential::configured_)
      - PROTOBUF_FIELD_OFFSET(GetCredentialsResponse_Credential, created_at_)>(
          reinterpret_cast<char*>(&created_at_),
          reinterpret_cast<char*>(&other->created_at_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCredentialsResponse_Credential::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

GetCredentialsResponse_CredentialsEntry_DoNotUse::GetCredentialsResponse_CredentialsEntry_DoNotUse() {}
GetCredentialsResponse_CredentialsEntry_DoNotUse::GetCredentialsResponse_CredentialsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetCredentialsResponse_CredentialsEntry_DoNotUse::MergeFrom(const GetCredentialsResponse_CredentialsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetCredentialsResponse_CredentialsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void GetCredentialsResponse_CredentialsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void GetCredentialsResponse::InitAsDefaultInstance() {
}
class GetCredentialsResponse::_Internal {
 public:
};

GetCredentialsResponse::GetCredentialsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  credentials_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetCredentialsResponse)
}
GetCredentialsResponse::GetCredentialsResponse(const GetCredentialsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  credentials_.MergeFrom(from.credentials_);
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetCredentialsResponse)
}

void GetCredentialsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetCredentialsResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
}

GetCredentialsResponse::~GetCredentialsResponse() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetCredentialsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetCredentialsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetCredentialsResponse::ArenaDtor(void* object) {
  GetCredentialsResponse* _this = reinterpret_cast< GetCredentialsResponse* >(object);
  (void)_this;
}
void GetCredentialsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetCredentialsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetCredentialsResponse& GetCredentialsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetCredentialsResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetCredentialsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetCredentialsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  credentials_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCredentialsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<string, .depot.devtools.auth.v0.identity.admin.GetCredentialsResponse.Credential> credentials = 1[json_name = "credentials"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&credentials_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetCredentialsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetCredentialsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .depot.devtools.auth.v0.identity.admin.GetCredentialsResponse.Credential> credentials = 1[json_name = "credentials"];
  if (!this->_internal_credentials().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse_Credential >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "depot.devtools.auth.v0.identity.admin.GetCredentialsResponse.CredentialsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_credentials().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_credentials().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse_Credential >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse_Credential >::const_iterator
          it = this->_internal_credentials().begin();
          it != this->_internal_credentials().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetCredentialsResponse_CredentialsEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse_Credential >::const_iterator
          it = this->_internal_credentials().begin();
          it != this->_internal_credentials().end(); ++it) {
        target = GetCredentialsResponse_CredentialsEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetCredentialsResponse)
  return target;
}

size_t GetCredentialsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetCredentialsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .depot.devtools.auth.v0.identity.admin.GetCredentialsResponse.Credential> credentials = 1[json_name = "credentials"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_credentials_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse_Credential >::const_iterator
      it = this->_internal_credentials().begin();
      it != this->_internal_credentials().end(); ++it) {
    total_size += GetCredentialsResponse_CredentialsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetCredentialsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetCredentialsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCredentialsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetCredentialsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetCredentialsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetCredentialsResponse)
    MergeFrom(*source);
  }
}

void GetCredentialsResponse::MergeFrom(const GetCredentialsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetCredentialsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  credentials_.MergeFrom(from.credentials_);
}

void GetCredentialsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetCredentialsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCredentialsResponse::CopyFrom(const GetCredentialsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetCredentialsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCredentialsResponse::IsInitialized() const {
  return true;
}

void GetCredentialsResponse::InternalSwap(GetCredentialsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  credentials_.Swap(&other->credentials_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCredentialsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateCredentialRequest::InitAsDefaultInstance() {
  ::depot::devtools::auth::v0::identity::admin::_UpdateCredentialRequest_default_instance_._instance.get_mutable()->data_ = const_cast< PROTOBUF_NAMESPACE_ID::Struct*>(
      PROTOBUF_NAMESPACE_ID::Struct::internal_default_instance());
}
class UpdateCredentialRequest::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Struct& data(const UpdateCredentialRequest* msg);
};

const PROTOBUF_NAMESPACE_ID::Struct&
UpdateCredentialRequest::_Internal::data(const UpdateCredentialRequest* msg) {
  return *msg->data_;
}
void UpdateCredentialRequest::clear_data() {
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
}
UpdateCredentialRequest::UpdateCredentialRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.UpdateCredentialRequest)
}
UpdateCredentialRequest::UpdateCredentialRequest(const UpdateCredentialRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_connection_id().empty()) {
    connection_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_connection_id(),
      GetArena());
  }
  identity_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_identity_id().empty()) {
    identity_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_identity_id(),
      GetArena());
  }
  if (from._internal_has_data()) {
    data_ = new PROTOBUF_NAMESPACE_ID::Struct(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.UpdateCredentialRequest)
}

void UpdateCredentialRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateCredentialRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  identity_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_ = nullptr;
}

UpdateCredentialRequest::~UpdateCredentialRequest() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.UpdateCredentialRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateCredentialRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  connection_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  identity_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
}

void UpdateCredentialRequest::ArenaDtor(void* object) {
  UpdateCredentialRequest* _this = reinterpret_cast< UpdateCredentialRequest* >(object);
  (void)_this;
}
void UpdateCredentialRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateCredentialRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateCredentialRequest& UpdateCredentialRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateCredentialRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void UpdateCredentialRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.UpdateCredentialRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  connection_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  identity_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateCredentialRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Struct data = 1[json_name = "data"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string connection_id = 2[json_name = "connectionId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_connection_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateCredentialRequest.connection_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string identity_id = 3[json_name = "identityId"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_identity_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateCredentialRequest.identity_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateCredentialRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.UpdateCredentialRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Struct data = 1[json_name = "data"];
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::data(this), target, stream);
  }

  // string connection_id = 2[json_name = "connectionId"];
  if (this->connection_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_connection_id().data(), static_cast<int>(this->_internal_connection_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateCredentialRequest.connection_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_connection_id(), target);
  }

  // string identity_id = 3[json_name = "identityId"];
  if (this->identity_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_identity_id().data(), static_cast<int>(this->_internal_identity_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateCredentialRequest.identity_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_identity_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.UpdateCredentialRequest)
  return target;
}

size_t UpdateCredentialRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.UpdateCredentialRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string connection_id = 2[json_name = "connectionId"];
  if (this->connection_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_connection_id());
  }

  // string identity_id = 3[json_name = "identityId"];
  if (this->identity_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_identity_id());
  }

  // .google.protobuf.Struct data = 1[json_name = "data"];
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateCredentialRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.UpdateCredentialRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateCredentialRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateCredentialRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.UpdateCredentialRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.UpdateCredentialRequest)
    MergeFrom(*source);
  }
}

void UpdateCredentialRequest::MergeFrom(const UpdateCredentialRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.UpdateCredentialRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.connection_id().size() > 0) {
    _internal_set_connection_id(from._internal_connection_id());
  }
  if (from.identity_id().size() > 0) {
    _internal_set_identity_id(from._internal_identity_id());
  }
  if (from.has_data()) {
    _internal_mutable_data()->PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_data());
  }
}

void UpdateCredentialRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.UpdateCredentialRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateCredentialRequest::CopyFrom(const UpdateCredentialRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.UpdateCredentialRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateCredentialRequest::IsInitialized() const {
  return true;
}

void UpdateCredentialRequest::InternalSwap(UpdateCredentialRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  connection_id_.Swap(&other->connection_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  identity_id_.Swap(&other->identity_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(data_, other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateCredentialRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateCredentialResponse::InitAsDefaultInstance() {
}
class UpdateCredentialResponse::_Internal {
 public:
};

UpdateCredentialResponse::UpdateCredentialResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.UpdateCredentialResponse)
}
UpdateCredentialResponse::UpdateCredentialResponse(const UpdateCredentialResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.UpdateCredentialResponse)
}

void UpdateCredentialResponse::SharedCtor() {
}

UpdateCredentialResponse::~UpdateCredentialResponse() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.UpdateCredentialResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateCredentialResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UpdateCredentialResponse::ArenaDtor(void* object) {
  UpdateCredentialResponse* _this = reinterpret_cast< UpdateCredentialResponse* >(object);
  (void)_this;
}
void UpdateCredentialResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateCredentialResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateCredentialResponse& UpdateCredentialResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateCredentialResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void UpdateCredentialResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.UpdateCredentialResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateCredentialResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateCredentialResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.UpdateCredentialResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.UpdateCredentialResponse)
  return target;
}

size_t UpdateCredentialResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.UpdateCredentialResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateCredentialResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.UpdateCredentialResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateCredentialResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateCredentialResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.UpdateCredentialResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.UpdateCredentialResponse)
    MergeFrom(*source);
  }
}

void UpdateCredentialResponse::MergeFrom(const UpdateCredentialResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.UpdateCredentialResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UpdateCredentialResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.UpdateCredentialResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateCredentialResponse::CopyFrom(const UpdateCredentialResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.UpdateCredentialResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateCredentialResponse::IsInitialized() const {
  return true;
}

void UpdateCredentialResponse::InternalSwap(UpdateCredentialResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateCredentialResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateConnectionRequest::InitAsDefaultInstance() {
}
class CreateConnectionRequest::_Internal {
 public:
};

CreateConnectionRequest::CreateConnectionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  mfa_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.CreateConnectionRequest)
}
CreateConnectionRequest::CreateConnectionRequest(const CreateConnectionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      mfa_(from.mfa_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  client_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_client_id().empty()) {
    client_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_client_id(),
      GetArena());
  }
  client_secret_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_client_secret().empty()) {
    client_secret_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_client_secret(),
      GetArena());
  }
  button_image_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_button_image_url().empty()) {
    button_image_url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_button_image_url(),
      GetArena());
  }
  oidc_discovery_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_oidc_discovery_url().empty()) {
    oidc_discovery_url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_oidc_discovery_url(),
      GetArena());
  }
  scopes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_scopes().empty()) {
    scopes_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_scopes(),
      GetArena());
  }
  ::memcpy(&provider_, &from.provider_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&provider_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.CreateConnectionRequest)
}

void CreateConnectionRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateConnectionRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_secret_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  button_image_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  oidc_discovery_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scopes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&provider_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&provider_)) + sizeof(type_));
}

CreateConnectionRequest::~CreateConnectionRequest() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.CreateConnectionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateConnectionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_secret_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  button_image_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  oidc_discovery_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scopes_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateConnectionRequest::ArenaDtor(void* object) {
  CreateConnectionRequest* _this = reinterpret_cast< CreateConnectionRequest* >(object);
  (void)_this;
}
void CreateConnectionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateConnectionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateConnectionRequest& CreateConnectionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateConnectionRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void CreateConnectionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.CreateConnectionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mfa_.Clear();
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  client_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  client_secret_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  button_image_url_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  oidc_discovery_url_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  scopes_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&provider_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&provider_)) + sizeof(type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateConnectionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1[json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.CreateConnectionRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string client_id = 2[json_name = "clientId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_client_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.CreateConnectionRequest.client_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string client_secret = 3[json_name = "clientSecret"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_client_secret();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.CreateConnectionRequest.client_secret"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string button_image_url = 4[json_name = "buttonImageUrl"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_button_image_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.CreateConnectionRequest.button_image_url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.CreateConnectionRequest.Providers provider = 6[json_name = "provider"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_provider(static_cast<::depot::devtools::auth::v0::identity::admin::CreateConnectionRequest_Providers>(val));
        } else goto handle_unusual;
        continue;
      // string oidc_discovery_url = 7[json_name = "oidcDiscoveryUrl"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_oidc_discovery_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.CreateConnectionRequest.oidc_discovery_url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string mfa = 8[json_name = "mfa"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_mfa();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.CreateConnectionRequest.mfa"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.CreateConnectionRequest.Types type = 9[json_name = "type"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::depot::devtools::auth::v0::identity::admin::CreateConnectionRequest_Types>(val));
        } else goto handle_unusual;
        continue;
      // string scopes = 10[json_name = "scopes"];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_scopes();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.CreateConnectionRequest.scopes"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateConnectionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.CreateConnectionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1[json_name = "id"];
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.CreateConnectionRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string client_id = 2[json_name = "clientId"];
  if (this->client_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_id().data(), static_cast<int>(this->_internal_client_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.CreateConnectionRequest.client_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_client_id(), target);
  }

  // string client_secret = 3[json_name = "clientSecret"];
  if (this->client_secret().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_secret().data(), static_cast<int>(this->_internal_client_secret().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.CreateConnectionRequest.client_secret");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_client_secret(), target);
  }

  // string button_image_url = 4[json_name = "buttonImageUrl"];
  if (this->button_image_url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_button_image_url().data(), static_cast<int>(this->_internal_button_image_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.CreateConnectionRequest.button_image_url");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_button_image_url(), target);
  }

  // .depot.devtools.auth.v0.identity.admin.CreateConnectionRequest.Providers provider = 6[json_name = "provider"];
  if (this->provider() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_provider(), target);
  }

  // string oidc_discovery_url = 7[json_name = "oidcDiscoveryUrl"];
  if (this->oidc_discovery_url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_oidc_discovery_url().data(), static_cast<int>(this->_internal_oidc_discovery_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.CreateConnectionRequest.oidc_discovery_url");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_oidc_discovery_url(), target);
  }

  // repeated string mfa = 8[json_name = "mfa"];
  for (int i = 0, n = this->_internal_mfa_size(); i < n; i++) {
    const auto& s = this->_internal_mfa(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.CreateConnectionRequest.mfa");
    target = stream->WriteString(8, s, target);
  }

  // .depot.devtools.auth.v0.identity.admin.CreateConnectionRequest.Types type = 9[json_name = "type"];
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      9, this->_internal_type(), target);
  }

  // string scopes = 10[json_name = "scopes"];
  if (this->scopes().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_scopes().data(), static_cast<int>(this->_internal_scopes().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.CreateConnectionRequest.scopes");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_scopes(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.CreateConnectionRequest)
  return target;
}

size_t CreateConnectionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.CreateConnectionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string mfa = 8[json_name = "mfa"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(mfa_.size());
  for (int i = 0, n = mfa_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      mfa_.Get(i));
  }

  // string id = 1[json_name = "id"];
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string client_id = 2[json_name = "clientId"];
  if (this->client_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_id());
  }

  // string client_secret = 3[json_name = "clientSecret"];
  if (this->client_secret().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_secret());
  }

  // string button_image_url = 4[json_name = "buttonImageUrl"];
  if (this->button_image_url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_button_image_url());
  }

  // string oidc_discovery_url = 7[json_name = "oidcDiscoveryUrl"];
  if (this->oidc_discovery_url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_oidc_discovery_url());
  }

  // string scopes = 10[json_name = "scopes"];
  if (this->scopes().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_scopes());
  }

  // .depot.devtools.auth.v0.identity.admin.CreateConnectionRequest.Providers provider = 6[json_name = "provider"];
  if (this->provider() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_provider());
  }

  // .depot.devtools.auth.v0.identity.admin.CreateConnectionRequest.Types type = 9[json_name = "type"];
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateConnectionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.CreateConnectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateConnectionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateConnectionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.CreateConnectionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.CreateConnectionRequest)
    MergeFrom(*source);
  }
}

void CreateConnectionRequest::MergeFrom(const CreateConnectionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.CreateConnectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mfa_.MergeFrom(from.mfa_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.client_id().size() > 0) {
    _internal_set_client_id(from._internal_client_id());
  }
  if (from.client_secret().size() > 0) {
    _internal_set_client_secret(from._internal_client_secret());
  }
  if (from.button_image_url().size() > 0) {
    _internal_set_button_image_url(from._internal_button_image_url());
  }
  if (from.oidc_discovery_url().size() > 0) {
    _internal_set_oidc_discovery_url(from._internal_oidc_discovery_url());
  }
  if (from.scopes().size() > 0) {
    _internal_set_scopes(from._internal_scopes());
  }
  if (from.provider() != 0) {
    _internal_set_provider(from._internal_provider());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void CreateConnectionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.CreateConnectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateConnectionRequest::CopyFrom(const CreateConnectionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.CreateConnectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateConnectionRequest::IsInitialized() const {
  return true;
}

void CreateConnectionRequest::InternalSwap(CreateConnectionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mfa_.InternalSwap(&other->mfa_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  client_id_.Swap(&other->client_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  client_secret_.Swap(&other->client_secret_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  button_image_url_.Swap(&other->button_image_url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  oidc_discovery_url_.Swap(&other->oidc_discovery_url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  scopes_.Swap(&other->scopes_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateConnectionRequest, type_)
      + sizeof(CreateConnectionRequest::type_)
      - PROTOBUF_FIELD_OFFSET(CreateConnectionRequest, provider_)>(
          reinterpret_cast<char*>(&provider_),
          reinterpret_cast<char*>(&other->provider_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateConnectionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateConnectionResponse::InitAsDefaultInstance() {
}
class CreateConnectionResponse::_Internal {
 public:
};

CreateConnectionResponse::CreateConnectionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.CreateConnectionResponse)
}
CreateConnectionResponse::CreateConnectionResponse(const CreateConnectionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.CreateConnectionResponse)
}

void CreateConnectionResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateConnectionResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CreateConnectionResponse::~CreateConnectionResponse() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.CreateConnectionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateConnectionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateConnectionResponse::ArenaDtor(void* object) {
  CreateConnectionResponse* _this = reinterpret_cast< CreateConnectionResponse* >(object);
  (void)_this;
}
void CreateConnectionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateConnectionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateConnectionResponse& CreateConnectionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateConnectionResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void CreateConnectionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.CreateConnectionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateConnectionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1[json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.CreateConnectionResponse.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateConnectionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.CreateConnectionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1[json_name = "id"];
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.CreateConnectionResponse.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.CreateConnectionResponse)
  return target;
}

size_t CreateConnectionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.CreateConnectionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1[json_name = "id"];
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateConnectionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.CreateConnectionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateConnectionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateConnectionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.CreateConnectionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.CreateConnectionResponse)
    MergeFrom(*source);
  }
}

void CreateConnectionResponse::MergeFrom(const CreateConnectionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.CreateConnectionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void CreateConnectionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.CreateConnectionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateConnectionResponse::CopyFrom(const CreateConnectionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.CreateConnectionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateConnectionResponse::IsInitialized() const {
  return true;
}

void CreateConnectionResponse::InternalSwap(CreateConnectionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateConnectionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetConnectionsRequest::InitAsDefaultInstance() {
}
class GetConnectionsRequest::_Internal {
 public:
};

GetConnectionsRequest::GetConnectionsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetConnectionsRequest)
}
GetConnectionsRequest::GetConnectionsRequest(const GetConnectionsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetConnectionsRequest)
}

void GetConnectionsRequest::SharedCtor() {
}

GetConnectionsRequest::~GetConnectionsRequest() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetConnectionsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetConnectionsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetConnectionsRequest::ArenaDtor(void* object) {
  GetConnectionsRequest* _this = reinterpret_cast< GetConnectionsRequest* >(object);
  (void)_this;
}
void GetConnectionsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetConnectionsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetConnectionsRequest& GetConnectionsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetConnectionsRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetConnectionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetConnectionsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetConnectionsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetConnectionsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetConnectionsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetConnectionsRequest)
  return target;
}

size_t GetConnectionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetConnectionsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetConnectionsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetConnectionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetConnectionsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetConnectionsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetConnectionsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetConnectionsRequest)
    MergeFrom(*source);
  }
}

void GetConnectionsRequest::MergeFrom(const GetConnectionsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetConnectionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetConnectionsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetConnectionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetConnectionsRequest::CopyFrom(const GetConnectionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetConnectionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetConnectionsRequest::IsInitialized() const {
  return true;
}

void GetConnectionsRequest::InternalSwap(GetConnectionsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetConnectionsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetConnectionsResponse_Connection::InitAsDefaultInstance() {
}
class GetConnectionsResponse_Connection::_Internal {
 public:
};

GetConnectionsResponse_Connection::GetConnectionsResponse_Connection(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  mfa_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Connection)
}
GetConnectionsResponse_Connection::GetConnectionsResponse_Connection(const GetConnectionsResponse_Connection& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      mfa_(from.mfa_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  client_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_client_id().empty()) {
    client_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_client_id(),
      GetArena());
  }
  client_secret_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_client_secret().empty()) {
    client_secret_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_client_secret(),
      GetArena());
  }
  button_image_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_button_image_url().empty()) {
    button_image_url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_button_image_url(),
      GetArena());
  }
  oidc_discovery_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_oidc_discovery_url().empty()) {
    oidc_discovery_url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_oidc_discovery_url(),
      GetArena());
  }
  scopes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_scopes().empty()) {
    scopes_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_scopes(),
      GetArena());
  }
  ::memcpy(&provider_, &from.provider_,
    static_cast<size_t>(reinterpret_cast<char*>(&purpose_) -
    reinterpret_cast<char*>(&provider_)) + sizeof(purpose_));
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Connection)
}

void GetConnectionsResponse_Connection::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetConnectionsResponse_Connection_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_secret_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  button_image_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  oidc_discovery_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scopes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&provider_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&purpose_) -
      reinterpret_cast<char*>(&provider_)) + sizeof(purpose_));
}

GetConnectionsResponse_Connection::~GetConnectionsResponse_Connection() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Connection)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetConnectionsResponse_Connection::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_secret_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  button_image_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  oidc_discovery_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scopes_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetConnectionsResponse_Connection::ArenaDtor(void* object) {
  GetConnectionsResponse_Connection* _this = reinterpret_cast< GetConnectionsResponse_Connection* >(object);
  (void)_this;
}
void GetConnectionsResponse_Connection::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetConnectionsResponse_Connection::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetConnectionsResponse_Connection& GetConnectionsResponse_Connection::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetConnectionsResponse_Connection_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetConnectionsResponse_Connection::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Connection)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mfa_.Clear();
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  client_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  client_secret_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  button_image_url_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  oidc_discovery_url_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  scopes_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&provider_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&purpose_) -
      reinterpret_cast<char*>(&provider_)) + sizeof(purpose_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetConnectionsResponse_Connection::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1[json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Connection.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string client_id = 2[json_name = "clientId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_client_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Connection.client_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string client_secret = 3[json_name = "clientSecret"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_client_secret();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Connection.client_secret"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string button_image_url = 4[json_name = "buttonImageUrl"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_button_image_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Connection.button_image_url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Providers provider = 6[json_name = "provider"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_provider(static_cast<::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse_Providers>(val));
        } else goto handle_unusual;
        continue;
      // string oidc_discovery_url = 7[json_name = "oidcDiscoveryUrl"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_oidc_discovery_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Connection.oidc_discovery_url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string mfa = 8[json_name = "mfa"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_mfa();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Connection.mfa"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Types type = 9[json_name = "type"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse_Types>(val));
        } else goto handle_unusual;
        continue;
      // string scopes = 10[json_name = "scopes"];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_scopes();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Connection.scopes"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Purposes purpose = 11[json_name = "purpose"];
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_purpose(static_cast<::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse_Purposes>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetConnectionsResponse_Connection::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Connection)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1[json_name = "id"];
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Connection.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string client_id = 2[json_name = "clientId"];
  if (this->client_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_id().data(), static_cast<int>(this->_internal_client_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Connection.client_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_client_id(), target);
  }

  // string client_secret = 3[json_name = "clientSecret"];
  if (this->client_secret().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_secret().data(), static_cast<int>(this->_internal_client_secret().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Connection.client_secret");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_client_secret(), target);
  }

  // string button_image_url = 4[json_name = "buttonImageUrl"];
  if (this->button_image_url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_button_image_url().data(), static_cast<int>(this->_internal_button_image_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Connection.button_image_url");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_button_image_url(), target);
  }

  // .depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Providers provider = 6[json_name = "provider"];
  if (this->provider() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_provider(), target);
  }

  // string oidc_discovery_url = 7[json_name = "oidcDiscoveryUrl"];
  if (this->oidc_discovery_url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_oidc_discovery_url().data(), static_cast<int>(this->_internal_oidc_discovery_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Connection.oidc_discovery_url");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_oidc_discovery_url(), target);
  }

  // repeated string mfa = 8[json_name = "mfa"];
  for (int i = 0, n = this->_internal_mfa_size(); i < n; i++) {
    const auto& s = this->_internal_mfa(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Connection.mfa");
    target = stream->WriteString(8, s, target);
  }

  // .depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Types type = 9[json_name = "type"];
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      9, this->_internal_type(), target);
  }

  // string scopes = 10[json_name = "scopes"];
  if (this->scopes().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_scopes().data(), static_cast<int>(this->_internal_scopes().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Connection.scopes");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_scopes(), target);
  }

  // .depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Purposes purpose = 11[json_name = "purpose"];
  if (this->purpose() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      11, this->_internal_purpose(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Connection)
  return target;
}

size_t GetConnectionsResponse_Connection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Connection)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string mfa = 8[json_name = "mfa"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(mfa_.size());
  for (int i = 0, n = mfa_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      mfa_.Get(i));
  }

  // string id = 1[json_name = "id"];
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string client_id = 2[json_name = "clientId"];
  if (this->client_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_id());
  }

  // string client_secret = 3[json_name = "clientSecret"];
  if (this->client_secret().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_secret());
  }

  // string button_image_url = 4[json_name = "buttonImageUrl"];
  if (this->button_image_url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_button_image_url());
  }

  // string oidc_discovery_url = 7[json_name = "oidcDiscoveryUrl"];
  if (this->oidc_discovery_url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_oidc_discovery_url());
  }

  // string scopes = 10[json_name = "scopes"];
  if (this->scopes().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_scopes());
  }

  // .depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Providers provider = 6[json_name = "provider"];
  if (this->provider() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_provider());
  }

  // .depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Types type = 9[json_name = "type"];
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  // .depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Purposes purpose = 11[json_name = "purpose"];
  if (this->purpose() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_purpose());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetConnectionsResponse_Connection::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Connection)
  GOOGLE_DCHECK_NE(&from, this);
  const GetConnectionsResponse_Connection* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetConnectionsResponse_Connection>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Connection)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Connection)
    MergeFrom(*source);
  }
}

void GetConnectionsResponse_Connection::MergeFrom(const GetConnectionsResponse_Connection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Connection)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mfa_.MergeFrom(from.mfa_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.client_id().size() > 0) {
    _internal_set_client_id(from._internal_client_id());
  }
  if (from.client_secret().size() > 0) {
    _internal_set_client_secret(from._internal_client_secret());
  }
  if (from.button_image_url().size() > 0) {
    _internal_set_button_image_url(from._internal_button_image_url());
  }
  if (from.oidc_discovery_url().size() > 0) {
    _internal_set_oidc_discovery_url(from._internal_oidc_discovery_url());
  }
  if (from.scopes().size() > 0) {
    _internal_set_scopes(from._internal_scopes());
  }
  if (from.provider() != 0) {
    _internal_set_provider(from._internal_provider());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.purpose() != 0) {
    _internal_set_purpose(from._internal_purpose());
  }
}

void GetConnectionsResponse_Connection::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Connection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetConnectionsResponse_Connection::CopyFrom(const GetConnectionsResponse_Connection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Connection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetConnectionsResponse_Connection::IsInitialized() const {
  return true;
}

void GetConnectionsResponse_Connection::InternalSwap(GetConnectionsResponse_Connection* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mfa_.InternalSwap(&other->mfa_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  client_id_.Swap(&other->client_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  client_secret_.Swap(&other->client_secret_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  button_image_url_.Swap(&other->button_image_url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  oidc_discovery_url_.Swap(&other->oidc_discovery_url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  scopes_.Swap(&other->scopes_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetConnectionsResponse_Connection, purpose_)
      + sizeof(GetConnectionsResponse_Connection::purpose_)
      - PROTOBUF_FIELD_OFFSET(GetConnectionsResponse_Connection, provider_)>(
          reinterpret_cast<char*>(&provider_),
          reinterpret_cast<char*>(&other->provider_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetConnectionsResponse_Connection::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetConnectionsResponse::InitAsDefaultInstance() {
}
class GetConnectionsResponse::_Internal {
 public:
};

GetConnectionsResponse::GetConnectionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  connections_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetConnectionsResponse)
}
GetConnectionsResponse::GetConnectionsResponse(const GetConnectionsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      connections_(from.connections_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetConnectionsResponse)
}

void GetConnectionsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetConnectionsResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
}

GetConnectionsResponse::~GetConnectionsResponse() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetConnectionsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetConnectionsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetConnectionsResponse::ArenaDtor(void* object) {
  GetConnectionsResponse* _this = reinterpret_cast< GetConnectionsResponse* >(object);
  (void)_this;
}
void GetConnectionsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetConnectionsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetConnectionsResponse& GetConnectionsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetConnectionsResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetConnectionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetConnectionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  connections_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetConnectionsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Connection connections = 1[json_name = "connections"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_connections(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetConnectionsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetConnectionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Connection connections = 1[json_name = "connections"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_connections_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_connections(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetConnectionsResponse)
  return target;
}

size_t GetConnectionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetConnectionsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Connection connections = 1[json_name = "connections"];
  total_size += 1UL * this->_internal_connections_size();
  for (const auto& msg : this->connections_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetConnectionsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetConnectionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetConnectionsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetConnectionsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetConnectionsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetConnectionsResponse)
    MergeFrom(*source);
  }
}

void GetConnectionsResponse::MergeFrom(const GetConnectionsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetConnectionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  connections_.MergeFrom(from.connections_);
}

void GetConnectionsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetConnectionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetConnectionsResponse::CopyFrom(const GetConnectionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetConnectionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetConnectionsResponse::IsInitialized() const {
  return true;
}

void GetConnectionsResponse::InternalSwap(GetConnectionsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  connections_.InternalSwap(&other->connections_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetConnectionsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateConnectionRequest::InitAsDefaultInstance() {
}
class UpdateConnectionRequest::_Internal {
 public:
};

UpdateConnectionRequest::UpdateConnectionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  mfa_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest)
}
UpdateConnectionRequest::UpdateConnectionRequest(const UpdateConnectionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      mfa_(from.mfa_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  client_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_client_id().empty()) {
    client_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_client_id(),
      GetArena());
  }
  client_secret_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_client_secret().empty()) {
    client_secret_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_client_secret(),
      GetArena());
  }
  button_image_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_button_image_url().empty()) {
    button_image_url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_button_image_url(),
      GetArena());
  }
  oidc_discovery_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_oidc_discovery_url().empty()) {
    oidc_discovery_url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_oidc_discovery_url(),
      GetArena());
  }
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  scopes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_scopes().empty()) {
    scopes_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_scopes(),
      GetArena());
  }
  ::memcpy(&provider_, &from.provider_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&provider_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest)
}

void UpdateConnectionRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateConnectionRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  client_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_secret_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  button_image_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  oidc_discovery_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scopes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&provider_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&provider_)) + sizeof(type_));
}

UpdateConnectionRequest::~UpdateConnectionRequest() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateConnectionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  client_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_secret_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  button_image_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  oidc_discovery_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scopes_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpdateConnectionRequest::ArenaDtor(void* object) {
  UpdateConnectionRequest* _this = reinterpret_cast< UpdateConnectionRequest* >(object);
  (void)_this;
}
void UpdateConnectionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateConnectionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateConnectionRequest& UpdateConnectionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateConnectionRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void UpdateConnectionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mfa_.Clear();
  client_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  client_secret_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  button_image_url_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  oidc_discovery_url_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  scopes_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&provider_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&provider_)) + sizeof(type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateConnectionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string client_id = 2[json_name = "clientId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_client_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest.client_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string client_secret = 3[json_name = "clientSecret"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_client_secret();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest.client_secret"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string button_image_url = 4[json_name = "buttonImageUrl"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_button_image_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest.button_image_url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest.Providers provider = 6[json_name = "provider"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_provider(static_cast<::depot::devtools::auth::v0::identity::admin::UpdateConnectionRequest_Providers>(val));
        } else goto handle_unusual;
        continue;
      // string oidc_discovery_url = 7[json_name = "oidcDiscoveryUrl"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_oidc_discovery_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest.oidc_discovery_url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string mfa = 8[json_name = "mfa"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_mfa();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest.mfa"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest.Types type = 9[json_name = "type"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::depot::devtools::auth::v0::identity::admin::UpdateConnectionRequest_Types>(val));
        } else goto handle_unusual;
        continue;
      // string id = 10[json_name = "id"];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string scopes = 11[json_name = "scopes"];
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_scopes();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest.scopes"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateConnectionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string client_id = 2[json_name = "clientId"];
  if (this->client_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_id().data(), static_cast<int>(this->_internal_client_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest.client_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_client_id(), target);
  }

  // string client_secret = 3[json_name = "clientSecret"];
  if (this->client_secret().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_secret().data(), static_cast<int>(this->_internal_client_secret().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest.client_secret");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_client_secret(), target);
  }

  // string button_image_url = 4[json_name = "buttonImageUrl"];
  if (this->button_image_url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_button_image_url().data(), static_cast<int>(this->_internal_button_image_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest.button_image_url");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_button_image_url(), target);
  }

  // .depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest.Providers provider = 6[json_name = "provider"];
  if (this->provider() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_provider(), target);
  }

  // string oidc_discovery_url = 7[json_name = "oidcDiscoveryUrl"];
  if (this->oidc_discovery_url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_oidc_discovery_url().data(), static_cast<int>(this->_internal_oidc_discovery_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest.oidc_discovery_url");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_oidc_discovery_url(), target);
  }

  // repeated string mfa = 8[json_name = "mfa"];
  for (int i = 0, n = this->_internal_mfa_size(); i < n; i++) {
    const auto& s = this->_internal_mfa(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest.mfa");
    target = stream->WriteString(8, s, target);
  }

  // .depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest.Types type = 9[json_name = "type"];
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      9, this->_internal_type(), target);
  }

  // string id = 10[json_name = "id"];
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest.id");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_id(), target);
  }

  // string scopes = 11[json_name = "scopes"];
  if (this->scopes().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_scopes().data(), static_cast<int>(this->_internal_scopes().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest.scopes");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_scopes(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest)
  return target;
}

size_t UpdateConnectionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string mfa = 8[json_name = "mfa"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(mfa_.size());
  for (int i = 0, n = mfa_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      mfa_.Get(i));
  }

  // string client_id = 2[json_name = "clientId"];
  if (this->client_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_id());
  }

  // string client_secret = 3[json_name = "clientSecret"];
  if (this->client_secret().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_secret());
  }

  // string button_image_url = 4[json_name = "buttonImageUrl"];
  if (this->button_image_url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_button_image_url());
  }

  // string oidc_discovery_url = 7[json_name = "oidcDiscoveryUrl"];
  if (this->oidc_discovery_url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_oidc_discovery_url());
  }

  // string id = 10[json_name = "id"];
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string scopes = 11[json_name = "scopes"];
  if (this->scopes().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_scopes());
  }

  // .depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest.Providers provider = 6[json_name = "provider"];
  if (this->provider() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_provider());
  }

  // .depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest.Types type = 9[json_name = "type"];
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateConnectionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateConnectionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateConnectionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest)
    MergeFrom(*source);
  }
}

void UpdateConnectionRequest::MergeFrom(const UpdateConnectionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mfa_.MergeFrom(from.mfa_);
  if (from.client_id().size() > 0) {
    _internal_set_client_id(from._internal_client_id());
  }
  if (from.client_secret().size() > 0) {
    _internal_set_client_secret(from._internal_client_secret());
  }
  if (from.button_image_url().size() > 0) {
    _internal_set_button_image_url(from._internal_button_image_url());
  }
  if (from.oidc_discovery_url().size() > 0) {
    _internal_set_oidc_discovery_url(from._internal_oidc_discovery_url());
  }
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.scopes().size() > 0) {
    _internal_set_scopes(from._internal_scopes());
  }
  if (from.provider() != 0) {
    _internal_set_provider(from._internal_provider());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void UpdateConnectionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateConnectionRequest::CopyFrom(const UpdateConnectionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateConnectionRequest::IsInitialized() const {
  return true;
}

void UpdateConnectionRequest::InternalSwap(UpdateConnectionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mfa_.InternalSwap(&other->mfa_);
  client_id_.Swap(&other->client_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  client_secret_.Swap(&other->client_secret_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  button_image_url_.Swap(&other->button_image_url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  oidc_discovery_url_.Swap(&other->oidc_discovery_url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  scopes_.Swap(&other->scopes_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateConnectionRequest, type_)
      + sizeof(UpdateConnectionRequest::type_)
      - PROTOBUF_FIELD_OFFSET(UpdateConnectionRequest, provider_)>(
          reinterpret_cast<char*>(&provider_),
          reinterpret_cast<char*>(&other->provider_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateConnectionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateConnectionResponse::InitAsDefaultInstance() {
}
class UpdateConnectionResponse::_Internal {
 public:
};

UpdateConnectionResponse::UpdateConnectionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.UpdateConnectionResponse)
}
UpdateConnectionResponse::UpdateConnectionResponse(const UpdateConnectionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.UpdateConnectionResponse)
}

void UpdateConnectionResponse::SharedCtor() {
}

UpdateConnectionResponse::~UpdateConnectionResponse() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.UpdateConnectionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateConnectionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UpdateConnectionResponse::ArenaDtor(void* object) {
  UpdateConnectionResponse* _this = reinterpret_cast< UpdateConnectionResponse* >(object);
  (void)_this;
}
void UpdateConnectionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateConnectionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateConnectionResponse& UpdateConnectionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateConnectionResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void UpdateConnectionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.UpdateConnectionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateConnectionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateConnectionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.UpdateConnectionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.UpdateConnectionResponse)
  return target;
}

size_t UpdateConnectionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.UpdateConnectionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateConnectionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.UpdateConnectionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateConnectionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateConnectionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.UpdateConnectionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.UpdateConnectionResponse)
    MergeFrom(*source);
  }
}

void UpdateConnectionResponse::MergeFrom(const UpdateConnectionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.UpdateConnectionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UpdateConnectionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.UpdateConnectionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateConnectionResponse::CopyFrom(const UpdateConnectionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.UpdateConnectionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateConnectionResponse::IsInitialized() const {
  return true;
}

void UpdateConnectionResponse::InternalSwap(UpdateConnectionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateConnectionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteConnectionRequest::InitAsDefaultInstance() {
}
class DeleteConnectionRequest::_Internal {
 public:
};

DeleteConnectionRequest::DeleteConnectionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.DeleteConnectionRequest)
}
DeleteConnectionRequest::DeleteConnectionRequest(const DeleteConnectionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.DeleteConnectionRequest)
}

void DeleteConnectionRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteConnectionRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteConnectionRequest::~DeleteConnectionRequest() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.DeleteConnectionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteConnectionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteConnectionRequest::ArenaDtor(void* object) {
  DeleteConnectionRequest* _this = reinterpret_cast< DeleteConnectionRequest* >(object);
  (void)_this;
}
void DeleteConnectionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteConnectionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteConnectionRequest& DeleteConnectionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteConnectionRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void DeleteConnectionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.DeleteConnectionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteConnectionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1[json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.DeleteConnectionRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteConnectionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.DeleteConnectionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1[json_name = "id"];
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.DeleteConnectionRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.DeleteConnectionRequest)
  return target;
}

size_t DeleteConnectionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.DeleteConnectionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1[json_name = "id"];
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteConnectionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.DeleteConnectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteConnectionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteConnectionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.DeleteConnectionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.DeleteConnectionRequest)
    MergeFrom(*source);
  }
}

void DeleteConnectionRequest::MergeFrom(const DeleteConnectionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.DeleteConnectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void DeleteConnectionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.DeleteConnectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteConnectionRequest::CopyFrom(const DeleteConnectionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.DeleteConnectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteConnectionRequest::IsInitialized() const {
  return true;
}

void DeleteConnectionRequest::InternalSwap(DeleteConnectionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteConnectionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteConnectionResponse::InitAsDefaultInstance() {
}
class DeleteConnectionResponse::_Internal {
 public:
};

DeleteConnectionResponse::DeleteConnectionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.DeleteConnectionResponse)
}
DeleteConnectionResponse::DeleteConnectionResponse(const DeleteConnectionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.DeleteConnectionResponse)
}

void DeleteConnectionResponse::SharedCtor() {
}

DeleteConnectionResponse::~DeleteConnectionResponse() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.DeleteConnectionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteConnectionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteConnectionResponse::ArenaDtor(void* object) {
  DeleteConnectionResponse* _this = reinterpret_cast< DeleteConnectionResponse* >(object);
  (void)_this;
}
void DeleteConnectionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteConnectionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteConnectionResponse& DeleteConnectionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteConnectionResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void DeleteConnectionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.DeleteConnectionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteConnectionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteConnectionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.DeleteConnectionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.DeleteConnectionResponse)
  return target;
}

size_t DeleteConnectionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.DeleteConnectionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteConnectionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.DeleteConnectionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteConnectionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteConnectionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.DeleteConnectionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.DeleteConnectionResponse)
    MergeFrom(*source);
  }
}

void DeleteConnectionResponse::MergeFrom(const DeleteConnectionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.DeleteConnectionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteConnectionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.DeleteConnectionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteConnectionResponse::CopyFrom(const DeleteConnectionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.DeleteConnectionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteConnectionResponse::IsInitialized() const {
  return true;
}

void DeleteConnectionResponse::InternalSwap(DeleteConnectionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteConnectionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetOAuth2ClientsRequest::InitAsDefaultInstance() {
}
class GetOAuth2ClientsRequest::_Internal {
 public:
};

GetOAuth2ClientsRequest::GetOAuth2ClientsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsRequest)
}
GetOAuth2ClientsRequest::GetOAuth2ClientsRequest(const GetOAuth2ClientsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsRequest)
}

void GetOAuth2ClientsRequest::SharedCtor() {
}

GetOAuth2ClientsRequest::~GetOAuth2ClientsRequest() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetOAuth2ClientsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetOAuth2ClientsRequest::ArenaDtor(void* object) {
  GetOAuth2ClientsRequest* _this = reinterpret_cast< GetOAuth2ClientsRequest* >(object);
  (void)_this;
}
void GetOAuth2ClientsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetOAuth2ClientsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetOAuth2ClientsRequest& GetOAuth2ClientsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetOAuth2ClientsRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetOAuth2ClientsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOAuth2ClientsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetOAuth2ClientsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsRequest)
  return target;
}

size_t GetOAuth2ClientsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetOAuth2ClientsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOAuth2ClientsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetOAuth2ClientsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsRequest)
    MergeFrom(*source);
  }
}

void GetOAuth2ClientsRequest::MergeFrom(const GetOAuth2ClientsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetOAuth2ClientsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOAuth2ClientsRequest::CopyFrom(const GetOAuth2ClientsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOAuth2ClientsRequest::IsInitialized() const {
  return true;
}

void GetOAuth2ClientsRequest::InternalSwap(GetOAuth2ClientsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOAuth2ClientsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetOAuth2ClientsResponse_Client::InitAsDefaultInstance() {
  ::depot::devtools::auth::v0::identity::admin::_GetOAuth2ClientsResponse_Client_default_instance_._instance.get_mutable()->created_at_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::depot::devtools::auth::v0::identity::admin::_GetOAuth2ClientsResponse_Client_default_instance_._instance.get_mutable()->jwks_ = const_cast< PROTOBUF_NAMESPACE_ID::Struct*>(
      PROTOBUF_NAMESPACE_ID::Struct::internal_default_instance());
  ::depot::devtools::auth::v0::identity::admin::_GetOAuth2ClientsResponse_Client_default_instance_._instance.get_mutable()->metadata_ = const_cast< PROTOBUF_NAMESPACE_ID::Struct*>(
      PROTOBUF_NAMESPACE_ID::Struct::internal_default_instance());
  ::depot::devtools::auth::v0::identity::admin::_GetOAuth2ClientsResponse_Client_default_instance_._instance.get_mutable()->updated_at_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
}
class GetOAuth2ClientsResponse_Client::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& created_at(const GetOAuth2ClientsResponse_Client* msg);
  static const PROTOBUF_NAMESPACE_ID::Struct& jwks(const GetOAuth2ClientsResponse_Client* msg);
  static const PROTOBUF_NAMESPACE_ID::Struct& metadata(const GetOAuth2ClientsResponse_Client* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& updated_at(const GetOAuth2ClientsResponse_Client* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
GetOAuth2ClientsResponse_Client::_Internal::created_at(const GetOAuth2ClientsResponse_Client* msg) {
  return *msg->created_at_;
}
const PROTOBUF_NAMESPACE_ID::Struct&
GetOAuth2ClientsResponse_Client::_Internal::jwks(const GetOAuth2ClientsResponse_Client* msg) {
  return *msg->jwks_;
}
const PROTOBUF_NAMESPACE_ID::Struct&
GetOAuth2ClientsResponse_Client::_Internal::metadata(const GetOAuth2ClientsResponse_Client* msg) {
  return *msg->metadata_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
GetOAuth2ClientsResponse_Client::_Internal::updated_at(const GetOAuth2ClientsResponse_Client* msg) {
  return *msg->updated_at_;
}
void GetOAuth2ClientsResponse_Client::clear_created_at() {
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
}
void GetOAuth2ClientsResponse_Client::clear_jwks() {
  if (GetArena() == nullptr && jwks_ != nullptr) {
    delete jwks_;
  }
  jwks_ = nullptr;
}
void GetOAuth2ClientsResponse_Client::clear_metadata() {
  if (GetArena() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
}
void GetOAuth2ClientsResponse_Client::clear_updated_at() {
  if (GetArena() == nullptr && updated_at_ != nullptr) {
    delete updated_at_;
  }
  updated_at_ = nullptr;
}
GetOAuth2ClientsResponse_Client::GetOAuth2ClientsResponse_Client(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  allowed_cors_origins_(arena),
  audience_(arena),
  contacts_(arena),
  grant_types_(arena),
  post_logout_redirect_uris_(arena),
  redirect_uris_(arena),
  request_uris_(arena),
  response_types_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client)
}
GetOAuth2ClientsResponse_Client::GetOAuth2ClientsResponse_Client(const GetOAuth2ClientsResponse_Client& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      allowed_cors_origins_(from.allowed_cors_origins_),
      audience_(from.audience_),
      contacts_(from.contacts_),
      grant_types_(from.grant_types_),
      post_logout_redirect_uris_(from.post_logout_redirect_uris_),
      redirect_uris_(from.redirect_uris_),
      request_uris_(from.request_uris_),
      response_types_(from.response_types_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  backchannel_logout_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_backchannel_logout_uri().empty()) {
    backchannel_logout_uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_backchannel_logout_uri(),
      GetArena());
  }
  client_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_client_id().empty()) {
    client_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_client_id(),
      GetArena());
  }
  client_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_client_name().empty()) {
    client_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_client_name(),
      GetArena());
  }
  client_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_client_uri().empty()) {
    client_uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_client_uri(),
      GetArena());
  }
  frontchannel_logout_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_frontchannel_logout_uri().empty()) {
    frontchannel_logout_uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_frontchannel_logout_uri(),
      GetArena());
  }
  jwks_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_jwks_uri().empty()) {
    jwks_uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_jwks_uri(),
      GetArena());
  }
  logo_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_logo_uri().empty()) {
    logo_uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_logo_uri(),
      GetArena());
  }
  owner_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_owner().empty()) {
    owner_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_owner(),
      GetArena());
  }
  policy_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_policy_uri().empty()) {
    policy_uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_policy_uri(),
      GetArena());
  }
  scope_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_scope().empty()) {
    scope_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_scope(),
      GetArena());
  }
  sector_identifier_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sector_identifier_uri().empty()) {
    sector_identifier_uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_sector_identifier_uri(),
      GetArena());
  }
  tos_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tos_uri().empty()) {
    tos_uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_tos_uri(),
      GetArena());
  }
  if (from._internal_has_created_at()) {
    created_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_at_);
  } else {
    created_at_ = nullptr;
  }
  if (from._internal_has_jwks()) {
    jwks_ = new PROTOBUF_NAMESPACE_ID::Struct(*from.jwks_);
  } else {
    jwks_ = nullptr;
  }
  if (from._internal_has_metadata()) {
    metadata_ = new PROTOBUF_NAMESPACE_ID::Struct(*from.metadata_);
  } else {
    metadata_ = nullptr;
  }
  if (from._internal_has_updated_at()) {
    updated_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.updated_at_);
  } else {
    updated_at_ = nullptr;
  }
  ::memcpy(&client_secret_expires_at_, &from.client_secret_expires_at_,
    static_cast<size_t>(reinterpret_cast<char*>(&client_type_) -
    reinterpret_cast<char*>(&client_secret_expires_at_)) + sizeof(client_type_));
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client)
}

void GetOAuth2ClientsResponse_Client::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetOAuth2ClientsResponse_Client_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  backchannel_logout_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  frontchannel_logout_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  jwks_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  logo_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  owner_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  policy_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scope_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sector_identifier_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tos_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&created_at_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&client_type_) -
      reinterpret_cast<char*>(&created_at_)) + sizeof(client_type_));
}

GetOAuth2ClientsResponse_Client::~GetOAuth2ClientsResponse_Client() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetOAuth2ClientsResponse_Client::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  backchannel_logout_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  frontchannel_logout_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  jwks_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  logo_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  owner_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  policy_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scope_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sector_identifier_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tos_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete created_at_;
  if (this != internal_default_instance()) delete jwks_;
  if (this != internal_default_instance()) delete metadata_;
  if (this != internal_default_instance()) delete updated_at_;
}

void GetOAuth2ClientsResponse_Client::ArenaDtor(void* object) {
  GetOAuth2ClientsResponse_Client* _this = reinterpret_cast< GetOAuth2ClientsResponse_Client* >(object);
  (void)_this;
}
void GetOAuth2ClientsResponse_Client::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetOAuth2ClientsResponse_Client::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetOAuth2ClientsResponse_Client& GetOAuth2ClientsResponse_Client::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetOAuth2ClientsResponse_Client_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetOAuth2ClientsResponse_Client::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  allowed_cors_origins_.Clear();
  audience_.Clear();
  contacts_.Clear();
  grant_types_.Clear();
  post_logout_redirect_uris_.Clear();
  redirect_uris_.Clear();
  request_uris_.Clear();
  response_types_.Clear();
  backchannel_logout_uri_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  client_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  client_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  client_uri_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  frontchannel_logout_uri_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  jwks_uri_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  logo_uri_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  owner_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  policy_uri_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  scope_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sector_identifier_uri_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  tos_uri_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
  if (GetArena() == nullptr && jwks_ != nullptr) {
    delete jwks_;
  }
  jwks_ = nullptr;
  if (GetArena() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
  if (GetArena() == nullptr && updated_at_ != nullptr) {
    delete updated_at_;
  }
  updated_at_ = nullptr;
  ::memset(&client_secret_expires_at_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&client_type_) -
      reinterpret_cast<char*>(&client_secret_expires_at_)) + sizeof(client_type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOAuth2ClientsResponse_Client::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string allowed_cors_origins = 1[json_name = "allowedCorsOrigins"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_allowed_cors_origins();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.allowed_cors_origins"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string audience = 2[json_name = "audience"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_audience();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.audience"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // bool backchannel_logout_session_required = 3[json_name = "backchannelLogoutSessionRequired"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          backchannel_logout_session_required_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string backchannel_logout_uri = 4[json_name = "backchannelLogoutUri"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_backchannel_logout_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.backchannel_logout_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string client_id = 5[json_name = "clientId"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_client_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.client_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string client_name = 6[json_name = "clientName"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_client_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.client_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 client_secret_expires_at = 7[json_name = "clientSecretExpiresAt"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          client_secret_expires_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string client_uri = 8[json_name = "clientUri"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_client_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.client_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string contacts = 9[json_name = "contacts"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_contacts();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.contacts"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_at = 10[json_name = "createdAt"];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool frontchannel_logout_session_required = 11[json_name = "frontchannelLogoutSessionRequired"];
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          frontchannel_logout_session_required_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string frontchannel_logout_uri = 12[json_name = "frontchannelLogoutUri"];
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_frontchannel_logout_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.frontchannel_logout_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .depot.devtools.auth.v0.identity.admin.GrantType grant_types = 13[json_name = "grantTypes"];
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_grant_types(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_grant_types(static_cast<::depot::devtools::auth::v0::identity::admin::GrantType>(val));
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Struct jwks = 14[json_name = "jwks"];
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_jwks(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string jwks_uri = 15[json_name = "jwksUri"];
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          auto str = _internal_mutable_jwks_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.jwks_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string logo_uri = 16[json_name = "logoUri"];
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          auto str = _internal_mutable_logo_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.logo_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Struct metadata = 17[json_name = "metadata"];
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_metadata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string owner = 18[json_name = "owner"];
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          auto str = _internal_mutable_owner();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.owner"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string policy_uri = 19[json_name = "policyUri"];
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          auto str = _internal_mutable_policy_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.policy_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string post_logout_redirect_uris = 20[json_name = "postLogoutRedirectUris"];
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          ptr -= 2;
          do {
            ptr += 2;
            auto str = _internal_add_post_logout_redirect_uris();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.post_logout_redirect_uris"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<162>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string redirect_uris = 21[json_name = "redirectUris"];
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr -= 2;
          do {
            ptr += 2;
            auto str = _internal_add_redirect_uris();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.redirect_uris"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<170>(ptr));
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.RequestObjectSigningAlg request_object_signing_alg = 22[json_name = "requestObjectSigningAlg"];
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_request_object_signing_alg(static_cast<::depot::devtools::auth::v0::identity::admin::RequestObjectSigningAlg>(val));
        } else goto handle_unusual;
        continue;
      // repeated string request_uris = 23[json_name = "requestUris"];
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr -= 2;
          do {
            ptr += 2;
            auto str = _internal_add_request_uris();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.request_uris"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<186>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .depot.devtools.auth.v0.identity.admin.ResponseType response_types = 24[json_name = "responseTypes"];
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 194)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_response_types(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_response_types(static_cast<::depot::devtools::auth::v0::identity::admin::ResponseType>(val));
        } else goto handle_unusual;
        continue;
      // string scope = 25[json_name = "scope"];
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          auto str = _internal_mutable_scope();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.scope"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string sector_identifier_uri = 26[json_name = "sectorIdentifierUri"];
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 210)) {
          auto str = _internal_mutable_sector_identifier_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.sector_identifier_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.SubjectType subject_type = 27[json_name = "subjectType"];
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 216)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_subject_type(static_cast<::depot::devtools::auth::v0::identity::admin::SubjectType>(val));
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.TokenEndpointAuthMethod token_endpoint_auth_method = 28[json_name = "tokenEndpointAuthMethod"];
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_token_endpoint_auth_method(static_cast<::depot::devtools::auth::v0::identity::admin::TokenEndpointAuthMethod>(val));
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.TokenEndpointAuthSigningAlg token_endpoint_auth_signing_alg = 29[json_name = "tokenEndpointAuthSigningAlg"];
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 232)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_token_endpoint_auth_signing_alg(static_cast<::depot::devtools::auth::v0::identity::admin::TokenEndpointAuthSigningAlg>(val));
        } else goto handle_unusual;
        continue;
      // string tos_uri = 30[json_name = "tosUri"];
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 242)) {
          auto str = _internal_mutable_tos_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.tos_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp updated_at = 31[json_name = "updatedAt"];
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_updated_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.UserinfoSignedResponseAlg userinfo_signed_response_alg = 32[json_name = "userinfoSignedResponseAlg"];
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 0)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_userinfo_signed_response_alg(static_cast<::depot::devtools::auth::v0::identity::admin::UserinfoSignedResponseAlg>(val));
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.ClientType client_type = 33[json_name = "clientType"];
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_client_type(static_cast<::depot::devtools::auth::v0::identity::admin::ClientType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetOAuth2ClientsResponse_Client::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string allowed_cors_origins = 1[json_name = "allowedCorsOrigins"];
  for (int i = 0, n = this->_internal_allowed_cors_origins_size(); i < n; i++) {
    const auto& s = this->_internal_allowed_cors_origins(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.allowed_cors_origins");
    target = stream->WriteString(1, s, target);
  }

  // repeated string audience = 2[json_name = "audience"];
  for (int i = 0, n = this->_internal_audience_size(); i < n; i++) {
    const auto& s = this->_internal_audience(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.audience");
    target = stream->WriteString(2, s, target);
  }

  // bool backchannel_logout_session_required = 3[json_name = "backchannelLogoutSessionRequired"];
  if (this->backchannel_logout_session_required() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_backchannel_logout_session_required(), target);
  }

  // string backchannel_logout_uri = 4[json_name = "backchannelLogoutUri"];
  if (this->backchannel_logout_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_backchannel_logout_uri().data(), static_cast<int>(this->_internal_backchannel_logout_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.backchannel_logout_uri");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_backchannel_logout_uri(), target);
  }

  // string client_id = 5[json_name = "clientId"];
  if (this->client_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_id().data(), static_cast<int>(this->_internal_client_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.client_id");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_client_id(), target);
  }

  // string client_name = 6[json_name = "clientName"];
  if (this->client_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_name().data(), static_cast<int>(this->_internal_client_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.client_name");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_client_name(), target);
  }

  // int64 client_secret_expires_at = 7[json_name = "clientSecretExpiresAt"];
  if (this->client_secret_expires_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(7, this->_internal_client_secret_expires_at(), target);
  }

  // string client_uri = 8[json_name = "clientUri"];
  if (this->client_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_uri().data(), static_cast<int>(this->_internal_client_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.client_uri");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_client_uri(), target);
  }

  // repeated string contacts = 9[json_name = "contacts"];
  for (int i = 0, n = this->_internal_contacts_size(); i < n; i++) {
    const auto& s = this->_internal_contacts(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.contacts");
    target = stream->WriteString(9, s, target);
  }

  // .google.protobuf.Timestamp created_at = 10[json_name = "createdAt"];
  if (this->has_created_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::created_at(this), target, stream);
  }

  // bool frontchannel_logout_session_required = 11[json_name = "frontchannelLogoutSessionRequired"];
  if (this->frontchannel_logout_session_required() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(11, this->_internal_frontchannel_logout_session_required(), target);
  }

  // string frontchannel_logout_uri = 12[json_name = "frontchannelLogoutUri"];
  if (this->frontchannel_logout_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_frontchannel_logout_uri().data(), static_cast<int>(this->_internal_frontchannel_logout_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.frontchannel_logout_uri");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_frontchannel_logout_uri(), target);
  }

  // repeated .depot.devtools.auth.v0.identity.admin.GrantType grant_types = 13[json_name = "grantTypes"];
  {
    int byte_size = _grant_types_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          13, grant_types_, byte_size, target);
    }
  }

  // .google.protobuf.Struct jwks = 14[json_name = "jwks"];
  if (this->has_jwks()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        14, _Internal::jwks(this), target, stream);
  }

  // string jwks_uri = 15[json_name = "jwksUri"];
  if (this->jwks_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_jwks_uri().data(), static_cast<int>(this->_internal_jwks_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.jwks_uri");
    target = stream->WriteStringMaybeAliased(
        15, this->_internal_jwks_uri(), target);
  }

  // string logo_uri = 16[json_name = "logoUri"];
  if (this->logo_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_logo_uri().data(), static_cast<int>(this->_internal_logo_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.logo_uri");
    target = stream->WriteStringMaybeAliased(
        16, this->_internal_logo_uri(), target);
  }

  // .google.protobuf.Struct metadata = 17[json_name = "metadata"];
  if (this->has_metadata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        17, _Internal::metadata(this), target, stream);
  }

  // string owner = 18[json_name = "owner"];
  if (this->owner().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_owner().data(), static_cast<int>(this->_internal_owner().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.owner");
    target = stream->WriteStringMaybeAliased(
        18, this->_internal_owner(), target);
  }

  // string policy_uri = 19[json_name = "policyUri"];
  if (this->policy_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_policy_uri().data(), static_cast<int>(this->_internal_policy_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.policy_uri");
    target = stream->WriteStringMaybeAliased(
        19, this->_internal_policy_uri(), target);
  }

  // repeated string post_logout_redirect_uris = 20[json_name = "postLogoutRedirectUris"];
  for (int i = 0, n = this->_internal_post_logout_redirect_uris_size(); i < n; i++) {
    const auto& s = this->_internal_post_logout_redirect_uris(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.post_logout_redirect_uris");
    target = stream->WriteString(20, s, target);
  }

  // repeated string redirect_uris = 21[json_name = "redirectUris"];
  for (int i = 0, n = this->_internal_redirect_uris_size(); i < n; i++) {
    const auto& s = this->_internal_redirect_uris(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.redirect_uris");
    target = stream->WriteString(21, s, target);
  }

  // .depot.devtools.auth.v0.identity.admin.RequestObjectSigningAlg request_object_signing_alg = 22[json_name = "requestObjectSigningAlg"];
  if (this->request_object_signing_alg() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      22, this->_internal_request_object_signing_alg(), target);
  }

  // repeated string request_uris = 23[json_name = "requestUris"];
  for (int i = 0, n = this->_internal_request_uris_size(); i < n; i++) {
    const auto& s = this->_internal_request_uris(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.request_uris");
    target = stream->WriteString(23, s, target);
  }

  // repeated .depot.devtools.auth.v0.identity.admin.ResponseType response_types = 24[json_name = "responseTypes"];
  {
    int byte_size = _response_types_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          24, response_types_, byte_size, target);
    }
  }

  // string scope = 25[json_name = "scope"];
  if (this->scope().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_scope().data(), static_cast<int>(this->_internal_scope().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.scope");
    target = stream->WriteStringMaybeAliased(
        25, this->_internal_scope(), target);
  }

  // string sector_identifier_uri = 26[json_name = "sectorIdentifierUri"];
  if (this->sector_identifier_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sector_identifier_uri().data(), static_cast<int>(this->_internal_sector_identifier_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.sector_identifier_uri");
    target = stream->WriteStringMaybeAliased(
        26, this->_internal_sector_identifier_uri(), target);
  }

  // .depot.devtools.auth.v0.identity.admin.SubjectType subject_type = 27[json_name = "subjectType"];
  if (this->subject_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      27, this->_internal_subject_type(), target);
  }

  // .depot.devtools.auth.v0.identity.admin.TokenEndpointAuthMethod token_endpoint_auth_method = 28[json_name = "tokenEndpointAuthMethod"];
  if (this->token_endpoint_auth_method() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      28, this->_internal_token_endpoint_auth_method(), target);
  }

  // .depot.devtools.auth.v0.identity.admin.TokenEndpointAuthSigningAlg token_endpoint_auth_signing_alg = 29[json_name = "tokenEndpointAuthSigningAlg"];
  if (this->token_endpoint_auth_signing_alg() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      29, this->_internal_token_endpoint_auth_signing_alg(), target);
  }

  // string tos_uri = 30[json_name = "tosUri"];
  if (this->tos_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tos_uri().data(), static_cast<int>(this->_internal_tos_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.tos_uri");
    target = stream->WriteStringMaybeAliased(
        30, this->_internal_tos_uri(), target);
  }

  // .google.protobuf.Timestamp updated_at = 31[json_name = "updatedAt"];
  if (this->has_updated_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        31, _Internal::updated_at(this), target, stream);
  }

  // .depot.devtools.auth.v0.identity.admin.UserinfoSignedResponseAlg userinfo_signed_response_alg = 32[json_name = "userinfoSignedResponseAlg"];
  if (this->userinfo_signed_response_alg() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      32, this->_internal_userinfo_signed_response_alg(), target);
  }

  // .depot.devtools.auth.v0.identity.admin.ClientType client_type = 33[json_name = "clientType"];
  if (this->client_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      33, this->_internal_client_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client)
  return target;
}

size_t GetOAuth2ClientsResponse_Client::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string allowed_cors_origins = 1[json_name = "allowedCorsOrigins"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(allowed_cors_origins_.size());
  for (int i = 0, n = allowed_cors_origins_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      allowed_cors_origins_.Get(i));
  }

  // repeated string audience = 2[json_name = "audience"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(audience_.size());
  for (int i = 0, n = audience_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      audience_.Get(i));
  }

  // repeated string contacts = 9[json_name = "contacts"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(contacts_.size());
  for (int i = 0, n = contacts_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      contacts_.Get(i));
  }

  // repeated .depot.devtools.auth.v0.identity.admin.GrantType grant_types = 13[json_name = "grantTypes"];
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_grant_types_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->_internal_grant_types(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _grant_types_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated string post_logout_redirect_uris = 20[json_name = "postLogoutRedirectUris"];
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(post_logout_redirect_uris_.size());
  for (int i = 0, n = post_logout_redirect_uris_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      post_logout_redirect_uris_.Get(i));
  }

  // repeated string redirect_uris = 21[json_name = "redirectUris"];
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(redirect_uris_.size());
  for (int i = 0, n = redirect_uris_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      redirect_uris_.Get(i));
  }

  // repeated string request_uris = 23[json_name = "requestUris"];
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(request_uris_.size());
  for (int i = 0, n = request_uris_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      request_uris_.Get(i));
  }

  // repeated .depot.devtools.auth.v0.identity.admin.ResponseType response_types = 24[json_name = "responseTypes"];
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_response_types_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->_internal_response_types(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _response_types_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string backchannel_logout_uri = 4[json_name = "backchannelLogoutUri"];
  if (this->backchannel_logout_uri().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_backchannel_logout_uri());
  }

  // string client_id = 5[json_name = "clientId"];
  if (this->client_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_id());
  }

  // string client_name = 6[json_name = "clientName"];
  if (this->client_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_name());
  }

  // string client_uri = 8[json_name = "clientUri"];
  if (this->client_uri().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_uri());
  }

  // string frontchannel_logout_uri = 12[json_name = "frontchannelLogoutUri"];
  if (this->frontchannel_logout_uri().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_frontchannel_logout_uri());
  }

  // string jwks_uri = 15[json_name = "jwksUri"];
  if (this->jwks_uri().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_jwks_uri());
  }

  // string logo_uri = 16[json_name = "logoUri"];
  if (this->logo_uri().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_logo_uri());
  }

  // string owner = 18[json_name = "owner"];
  if (this->owner().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_owner());
  }

  // string policy_uri = 19[json_name = "policyUri"];
  if (this->policy_uri().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_policy_uri());
  }

  // string scope = 25[json_name = "scope"];
  if (this->scope().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_scope());
  }

  // string sector_identifier_uri = 26[json_name = "sectorIdentifierUri"];
  if (this->sector_identifier_uri().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sector_identifier_uri());
  }

  // string tos_uri = 30[json_name = "tosUri"];
  if (this->tos_uri().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tos_uri());
  }

  // .google.protobuf.Timestamp created_at = 10[json_name = "createdAt"];
  if (this->has_created_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_at_);
  }

  // .google.protobuf.Struct jwks = 14[json_name = "jwks"];
  if (this->has_jwks()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *jwks_);
  }

  // .google.protobuf.Struct metadata = 17[json_name = "metadata"];
  if (this->has_metadata()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *metadata_);
  }

  // .google.protobuf.Timestamp updated_at = 31[json_name = "updatedAt"];
  if (this->has_updated_at()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *updated_at_);
  }

  // int64 client_secret_expires_at = 7[json_name = "clientSecretExpiresAt"];
  if (this->client_secret_expires_at() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_client_secret_expires_at());
  }

  // bool backchannel_logout_session_required = 3[json_name = "backchannelLogoutSessionRequired"];
  if (this->backchannel_logout_session_required() != 0) {
    total_size += 1 + 1;
  }

  // bool frontchannel_logout_session_required = 11[json_name = "frontchannelLogoutSessionRequired"];
  if (this->frontchannel_logout_session_required() != 0) {
    total_size += 1 + 1;
  }

  // .depot.devtools.auth.v0.identity.admin.RequestObjectSigningAlg request_object_signing_alg = 22[json_name = "requestObjectSigningAlg"];
  if (this->request_object_signing_alg() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_request_object_signing_alg());
  }

  // .depot.devtools.auth.v0.identity.admin.SubjectType subject_type = 27[json_name = "subjectType"];
  if (this->subject_type() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_subject_type());
  }

  // .depot.devtools.auth.v0.identity.admin.TokenEndpointAuthMethod token_endpoint_auth_method = 28[json_name = "tokenEndpointAuthMethod"];
  if (this->token_endpoint_auth_method() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_token_endpoint_auth_method());
  }

  // .depot.devtools.auth.v0.identity.admin.TokenEndpointAuthSigningAlg token_endpoint_auth_signing_alg = 29[json_name = "tokenEndpointAuthSigningAlg"];
  if (this->token_endpoint_auth_signing_alg() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_token_endpoint_auth_signing_alg());
  }

  // .depot.devtools.auth.v0.identity.admin.UserinfoSignedResponseAlg userinfo_signed_response_alg = 32[json_name = "userinfoSignedResponseAlg"];
  if (this->userinfo_signed_response_alg() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_userinfo_signed_response_alg());
  }

  // .depot.devtools.auth.v0.identity.admin.ClientType client_type = 33[json_name = "clientType"];
  if (this->client_type() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_client_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetOAuth2ClientsResponse_Client::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOAuth2ClientsResponse_Client* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetOAuth2ClientsResponse_Client>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client)
    MergeFrom(*source);
  }
}

void GetOAuth2ClientsResponse_Client::MergeFrom(const GetOAuth2ClientsResponse_Client& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  allowed_cors_origins_.MergeFrom(from.allowed_cors_origins_);
  audience_.MergeFrom(from.audience_);
  contacts_.MergeFrom(from.contacts_);
  grant_types_.MergeFrom(from.grant_types_);
  post_logout_redirect_uris_.MergeFrom(from.post_logout_redirect_uris_);
  redirect_uris_.MergeFrom(from.redirect_uris_);
  request_uris_.MergeFrom(from.request_uris_);
  response_types_.MergeFrom(from.response_types_);
  if (from.backchannel_logout_uri().size() > 0) {
    _internal_set_backchannel_logout_uri(from._internal_backchannel_logout_uri());
  }
  if (from.client_id().size() > 0) {
    _internal_set_client_id(from._internal_client_id());
  }
  if (from.client_name().size() > 0) {
    _internal_set_client_name(from._internal_client_name());
  }
  if (from.client_uri().size() > 0) {
    _internal_set_client_uri(from._internal_client_uri());
  }
  if (from.frontchannel_logout_uri().size() > 0) {
    _internal_set_frontchannel_logout_uri(from._internal_frontchannel_logout_uri());
  }
  if (from.jwks_uri().size() > 0) {
    _internal_set_jwks_uri(from._internal_jwks_uri());
  }
  if (from.logo_uri().size() > 0) {
    _internal_set_logo_uri(from._internal_logo_uri());
  }
  if (from.owner().size() > 0) {
    _internal_set_owner(from._internal_owner());
  }
  if (from.policy_uri().size() > 0) {
    _internal_set_policy_uri(from._internal_policy_uri());
  }
  if (from.scope().size() > 0) {
    _internal_set_scope(from._internal_scope());
  }
  if (from.sector_identifier_uri().size() > 0) {
    _internal_set_sector_identifier_uri(from._internal_sector_identifier_uri());
  }
  if (from.tos_uri().size() > 0) {
    _internal_set_tos_uri(from._internal_tos_uri());
  }
  if (from.has_created_at()) {
    _internal_mutable_created_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_at());
  }
  if (from.has_jwks()) {
    _internal_mutable_jwks()->PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_jwks());
  }
  if (from.has_metadata()) {
    _internal_mutable_metadata()->PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_metadata());
  }
  if (from.has_updated_at()) {
    _internal_mutable_updated_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_updated_at());
  }
  if (from.client_secret_expires_at() != 0) {
    _internal_set_client_secret_expires_at(from._internal_client_secret_expires_at());
  }
  if (from.backchannel_logout_session_required() != 0) {
    _internal_set_backchannel_logout_session_required(from._internal_backchannel_logout_session_required());
  }
  if (from.frontchannel_logout_session_required() != 0) {
    _internal_set_frontchannel_logout_session_required(from._internal_frontchannel_logout_session_required());
  }
  if (from.request_object_signing_alg() != 0) {
    _internal_set_request_object_signing_alg(from._internal_request_object_signing_alg());
  }
  if (from.subject_type() != 0) {
    _internal_set_subject_type(from._internal_subject_type());
  }
  if (from.token_endpoint_auth_method() != 0) {
    _internal_set_token_endpoint_auth_method(from._internal_token_endpoint_auth_method());
  }
  if (from.token_endpoint_auth_signing_alg() != 0) {
    _internal_set_token_endpoint_auth_signing_alg(from._internal_token_endpoint_auth_signing_alg());
  }
  if (from.userinfo_signed_response_alg() != 0) {
    _internal_set_userinfo_signed_response_alg(from._internal_userinfo_signed_response_alg());
  }
  if (from.client_type() != 0) {
    _internal_set_client_type(from._internal_client_type());
  }
}

void GetOAuth2ClientsResponse_Client::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOAuth2ClientsResponse_Client::CopyFrom(const GetOAuth2ClientsResponse_Client& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOAuth2ClientsResponse_Client::IsInitialized() const {
  return true;
}

void GetOAuth2ClientsResponse_Client::InternalSwap(GetOAuth2ClientsResponse_Client* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  allowed_cors_origins_.InternalSwap(&other->allowed_cors_origins_);
  audience_.InternalSwap(&other->audience_);
  contacts_.InternalSwap(&other->contacts_);
  grant_types_.InternalSwap(&other->grant_types_);
  post_logout_redirect_uris_.InternalSwap(&other->post_logout_redirect_uris_);
  redirect_uris_.InternalSwap(&other->redirect_uris_);
  request_uris_.InternalSwap(&other->request_uris_);
  response_types_.InternalSwap(&other->response_types_);
  backchannel_logout_uri_.Swap(&other->backchannel_logout_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  client_id_.Swap(&other->client_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  client_name_.Swap(&other->client_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  client_uri_.Swap(&other->client_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  frontchannel_logout_uri_.Swap(&other->frontchannel_logout_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  jwks_uri_.Swap(&other->jwks_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  logo_uri_.Swap(&other->logo_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  owner_.Swap(&other->owner_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  policy_uri_.Swap(&other->policy_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  scope_.Swap(&other->scope_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sector_identifier_uri_.Swap(&other->sector_identifier_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  tos_uri_.Swap(&other->tos_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetOAuth2ClientsResponse_Client, client_type_)
      + sizeof(GetOAuth2ClientsResponse_Client::client_type_)
      - PROTOBUF_FIELD_OFFSET(GetOAuth2ClientsResponse_Client, created_at_)>(
          reinterpret_cast<char*>(&created_at_),
          reinterpret_cast<char*>(&other->created_at_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOAuth2ClientsResponse_Client::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetOAuth2ClientsResponse::InitAsDefaultInstance() {
}
class GetOAuth2ClientsResponse::_Internal {
 public:
};

GetOAuth2ClientsResponse::GetOAuth2ClientsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  clients_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse)
}
GetOAuth2ClientsResponse::GetOAuth2ClientsResponse(const GetOAuth2ClientsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      clients_(from.clients_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse)
}

void GetOAuth2ClientsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetOAuth2ClientsResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
}

GetOAuth2ClientsResponse::~GetOAuth2ClientsResponse() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetOAuth2ClientsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetOAuth2ClientsResponse::ArenaDtor(void* object) {
  GetOAuth2ClientsResponse* _this = reinterpret_cast< GetOAuth2ClientsResponse* >(object);
  (void)_this;
}
void GetOAuth2ClientsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetOAuth2ClientsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetOAuth2ClientsResponse& GetOAuth2ClientsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetOAuth2ClientsResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetOAuth2ClientsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clients_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOAuth2ClientsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client clients = 1[json_name = "clients"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_clients(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetOAuth2ClientsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client clients = 1[json_name = "clients"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_clients_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_clients(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse)
  return target;
}

size_t GetOAuth2ClientsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client clients = 1[json_name = "clients"];
  total_size += 1UL * this->_internal_clients_size();
  for (const auto& msg : this->clients_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetOAuth2ClientsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOAuth2ClientsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetOAuth2ClientsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse)
    MergeFrom(*source);
  }
}

void GetOAuth2ClientsResponse::MergeFrom(const GetOAuth2ClientsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  clients_.MergeFrom(from.clients_);
}

void GetOAuth2ClientsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOAuth2ClientsResponse::CopyFrom(const GetOAuth2ClientsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOAuth2ClientsResponse::IsInitialized() const {
  return true;
}

void GetOAuth2ClientsResponse::InternalSwap(GetOAuth2ClientsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  clients_.InternalSwap(&other->clients_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOAuth2ClientsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateOAuth2ClientRequest::InitAsDefaultInstance() {
  ::depot::devtools::auth::v0::identity::admin::_CreateOAuth2ClientRequest_default_instance_._instance.get_mutable()->jwks_ = const_cast< PROTOBUF_NAMESPACE_ID::Struct*>(
      PROTOBUF_NAMESPACE_ID::Struct::internal_default_instance());
  ::depot::devtools::auth::v0::identity::admin::_CreateOAuth2ClientRequest_default_instance_._instance.get_mutable()->metadata_ = const_cast< PROTOBUF_NAMESPACE_ID::Struct*>(
      PROTOBUF_NAMESPACE_ID::Struct::internal_default_instance());
}
class CreateOAuth2ClientRequest::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Struct& jwks(const CreateOAuth2ClientRequest* msg);
  static const PROTOBUF_NAMESPACE_ID::Struct& metadata(const CreateOAuth2ClientRequest* msg);
};

const PROTOBUF_NAMESPACE_ID::Struct&
CreateOAuth2ClientRequest::_Internal::jwks(const CreateOAuth2ClientRequest* msg) {
  return *msg->jwks_;
}
const PROTOBUF_NAMESPACE_ID::Struct&
CreateOAuth2ClientRequest::_Internal::metadata(const CreateOAuth2ClientRequest* msg) {
  return *msg->metadata_;
}
void CreateOAuth2ClientRequest::clear_jwks() {
  if (GetArena() == nullptr && jwks_ != nullptr) {
    delete jwks_;
  }
  jwks_ = nullptr;
}
void CreateOAuth2ClientRequest::clear_metadata() {
  if (GetArena() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
}
CreateOAuth2ClientRequest::CreateOAuth2ClientRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  allowed_cors_origins_(arena),
  audience_(arena),
  contacts_(arena),
  grant_types_(arena),
  post_logout_redirect_uris_(arena),
  redirect_uris_(arena),
  request_uris_(arena),
  response_types_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest)
}
CreateOAuth2ClientRequest::CreateOAuth2ClientRequest(const CreateOAuth2ClientRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      allowed_cors_origins_(from.allowed_cors_origins_),
      audience_(from.audience_),
      contacts_(from.contacts_),
      grant_types_(from.grant_types_),
      post_logout_redirect_uris_(from.post_logout_redirect_uris_),
      redirect_uris_(from.redirect_uris_),
      request_uris_(from.request_uris_),
      response_types_(from.response_types_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  backchannel_logout_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_backchannel_logout_uri().empty()) {
    backchannel_logout_uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_backchannel_logout_uri(),
      GetArena());
  }
  client_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_client_name().empty()) {
    client_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_client_name(),
      GetArena());
  }
  client_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_client_uri().empty()) {
    client_uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_client_uri(),
      GetArena());
  }
  frontchannel_logout_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_frontchannel_logout_uri().empty()) {
    frontchannel_logout_uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_frontchannel_logout_uri(),
      GetArena());
  }
  jwks_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_jwks_uri().empty()) {
    jwks_uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_jwks_uri(),
      GetArena());
  }
  logo_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_logo_uri().empty()) {
    logo_uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_logo_uri(),
      GetArena());
  }
  owner_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_owner().empty()) {
    owner_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_owner(),
      GetArena());
  }
  policy_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_policy_uri().empty()) {
    policy_uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_policy_uri(),
      GetArena());
  }
  scope_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_scope().empty()) {
    scope_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_scope(),
      GetArena());
  }
  sector_identifier_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sector_identifier_uri().empty()) {
    sector_identifier_uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_sector_identifier_uri(),
      GetArena());
  }
  tos_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tos_uri().empty()) {
    tos_uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_tos_uri(),
      GetArena());
  }
  client_secret_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_client_secret().empty()) {
    client_secret_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_client_secret(),
      GetArena());
  }
  if (from._internal_has_jwks()) {
    jwks_ = new PROTOBUF_NAMESPACE_ID::Struct(*from.jwks_);
  } else {
    jwks_ = nullptr;
  }
  if (from._internal_has_metadata()) {
    metadata_ = new PROTOBUF_NAMESPACE_ID::Struct(*from.metadata_);
  } else {
    metadata_ = nullptr;
  }
  ::memcpy(&backchannel_logout_session_required_, &from.backchannel_logout_session_required_,
    static_cast<size_t>(reinterpret_cast<char*>(&client_type_) -
    reinterpret_cast<char*>(&backchannel_logout_session_required_)) + sizeof(client_type_));
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest)
}

void CreateOAuth2ClientRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateOAuth2ClientRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  backchannel_logout_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  frontchannel_logout_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  jwks_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  logo_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  owner_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  policy_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scope_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sector_identifier_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tos_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_secret_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&jwks_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&client_type_) -
      reinterpret_cast<char*>(&jwks_)) + sizeof(client_type_));
}

CreateOAuth2ClientRequest::~CreateOAuth2ClientRequest() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateOAuth2ClientRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  backchannel_logout_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  frontchannel_logout_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  jwks_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  logo_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  owner_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  policy_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scope_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sector_identifier_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tos_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_secret_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete jwks_;
  if (this != internal_default_instance()) delete metadata_;
}

void CreateOAuth2ClientRequest::ArenaDtor(void* object) {
  CreateOAuth2ClientRequest* _this = reinterpret_cast< CreateOAuth2ClientRequest* >(object);
  (void)_this;
}
void CreateOAuth2ClientRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateOAuth2ClientRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateOAuth2ClientRequest& CreateOAuth2ClientRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateOAuth2ClientRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void CreateOAuth2ClientRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  allowed_cors_origins_.Clear();
  audience_.Clear();
  contacts_.Clear();
  grant_types_.Clear();
  post_logout_redirect_uris_.Clear();
  redirect_uris_.Clear();
  request_uris_.Clear();
  response_types_.Clear();
  backchannel_logout_uri_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  client_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  client_uri_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  frontchannel_logout_uri_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  jwks_uri_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  logo_uri_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  owner_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  policy_uri_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  scope_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sector_identifier_uri_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  tos_uri_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  client_secret_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && jwks_ != nullptr) {
    delete jwks_;
  }
  jwks_ = nullptr;
  if (GetArena() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
  ::memset(&backchannel_logout_session_required_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&client_type_) -
      reinterpret_cast<char*>(&backchannel_logout_session_required_)) + sizeof(client_type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateOAuth2ClientRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string allowed_cors_origins = 1[json_name = "allowedCorsOrigins"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_allowed_cors_origins();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.allowed_cors_origins"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string audience = 2[json_name = "audience"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_audience();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.audience"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // bool backchannel_logout_session_required = 3[json_name = "backchannelLogoutSessionRequired"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          backchannel_logout_session_required_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string backchannel_logout_uri = 4[json_name = "backchannelLogoutUri"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_backchannel_logout_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.backchannel_logout_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string client_name = 6[json_name = "clientName"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_client_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.client_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string client_uri = 8[json_name = "clientUri"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_client_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.client_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string contacts = 9[json_name = "contacts"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_contacts();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.contacts"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else goto handle_unusual;
        continue;
      // bool frontchannel_logout_session_required = 11[json_name = "frontchannelLogoutSessionRequired"];
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          frontchannel_logout_session_required_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string frontchannel_logout_uri = 12[json_name = "frontchannelLogoutUri"];
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_frontchannel_logout_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.frontchannel_logout_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .depot.devtools.auth.v0.identity.admin.GrantType grant_types = 13[json_name = "grantTypes"];
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_grant_types(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_grant_types(static_cast<::depot::devtools::auth::v0::identity::admin::GrantType>(val));
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Struct jwks = 14[json_name = "jwks"];
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_jwks(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string jwks_uri = 15[json_name = "jwksUri"];
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          auto str = _internal_mutable_jwks_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.jwks_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string logo_uri = 16[json_name = "logoUri"];
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          auto str = _internal_mutable_logo_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.logo_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Struct metadata = 17[json_name = "metadata"];
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_metadata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string owner = 18[json_name = "owner"];
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          auto str = _internal_mutable_owner();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.owner"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string policy_uri = 19[json_name = "policyUri"];
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          auto str = _internal_mutable_policy_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.policy_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string post_logout_redirect_uris = 20[json_name = "postLogoutRedirectUris"];
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          ptr -= 2;
          do {
            ptr += 2;
            auto str = _internal_add_post_logout_redirect_uris();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.post_logout_redirect_uris"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<162>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string redirect_uris = 21[json_name = "redirectUris"];
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr -= 2;
          do {
            ptr += 2;
            auto str = _internal_add_redirect_uris();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.redirect_uris"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<170>(ptr));
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.RequestObjectSigningAlg request_object_signing_alg = 22[json_name = "requestObjectSigningAlg"];
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_request_object_signing_alg(static_cast<::depot::devtools::auth::v0::identity::admin::RequestObjectSigningAlg>(val));
        } else goto handle_unusual;
        continue;
      // repeated string request_uris = 23[json_name = "requestUris"];
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr -= 2;
          do {
            ptr += 2;
            auto str = _internal_add_request_uris();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.request_uris"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<186>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .depot.devtools.auth.v0.identity.admin.ResponseType response_types = 24[json_name = "responseTypes"];
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 194)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_response_types(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_response_types(static_cast<::depot::devtools::auth::v0::identity::admin::ResponseType>(val));
        } else goto handle_unusual;
        continue;
      // string scope = 25[json_name = "scope"];
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          auto str = _internal_mutable_scope();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.scope"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string sector_identifier_uri = 26[json_name = "sectorIdentifierUri"];
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 210)) {
          auto str = _internal_mutable_sector_identifier_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.sector_identifier_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.SubjectType subject_type = 27[json_name = "subjectType"];
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 216)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_subject_type(static_cast<::depot::devtools::auth::v0::identity::admin::SubjectType>(val));
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.TokenEndpointAuthMethod token_endpoint_auth_method = 28[json_name = "tokenEndpointAuthMethod"];
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_token_endpoint_auth_method(static_cast<::depot::devtools::auth::v0::identity::admin::TokenEndpointAuthMethod>(val));
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.TokenEndpointAuthSigningAlg token_endpoint_auth_signing_alg = 29[json_name = "tokenEndpointAuthSigningAlg"];
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 232)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_token_endpoint_auth_signing_alg(static_cast<::depot::devtools::auth::v0::identity::admin::TokenEndpointAuthSigningAlg>(val));
        } else goto handle_unusual;
        continue;
      // string tos_uri = 30[json_name = "tosUri"];
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 242)) {
          auto str = _internal_mutable_tos_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.tos_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.UserinfoSignedResponseAlg userinfo_signed_response_alg = 31[json_name = "userinfoSignedResponseAlg"];
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 248)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_userinfo_signed_response_alg(static_cast<::depot::devtools::auth::v0::identity::admin::UserinfoSignedResponseAlg>(val));
        } else goto handle_unusual;
        continue;
      // string client_secret = 32[json_name = "clientSecret"];
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 2)) {
          auto str = _internal_mutable_client_secret();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.client_secret"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.ClientType client_type = 33[json_name = "clientType"];
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_client_type(static_cast<::depot::devtools::auth::v0::identity::admin::ClientType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateOAuth2ClientRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string allowed_cors_origins = 1[json_name = "allowedCorsOrigins"];
  for (int i = 0, n = this->_internal_allowed_cors_origins_size(); i < n; i++) {
    const auto& s = this->_internal_allowed_cors_origins(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.allowed_cors_origins");
    target = stream->WriteString(1, s, target);
  }

  // repeated string audience = 2[json_name = "audience"];
  for (int i = 0, n = this->_internal_audience_size(); i < n; i++) {
    const auto& s = this->_internal_audience(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.audience");
    target = stream->WriteString(2, s, target);
  }

  // bool backchannel_logout_session_required = 3[json_name = "backchannelLogoutSessionRequired"];
  if (this->backchannel_logout_session_required() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_backchannel_logout_session_required(), target);
  }

  // string backchannel_logout_uri = 4[json_name = "backchannelLogoutUri"];
  if (this->backchannel_logout_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_backchannel_logout_uri().data(), static_cast<int>(this->_internal_backchannel_logout_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.backchannel_logout_uri");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_backchannel_logout_uri(), target);
  }

  // string client_name = 6[json_name = "clientName"];
  if (this->client_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_name().data(), static_cast<int>(this->_internal_client_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.client_name");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_client_name(), target);
  }

  // string client_uri = 8[json_name = "clientUri"];
  if (this->client_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_uri().data(), static_cast<int>(this->_internal_client_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.client_uri");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_client_uri(), target);
  }

  // repeated string contacts = 9[json_name = "contacts"];
  for (int i = 0, n = this->_internal_contacts_size(); i < n; i++) {
    const auto& s = this->_internal_contacts(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.contacts");
    target = stream->WriteString(9, s, target);
  }

  // bool frontchannel_logout_session_required = 11[json_name = "frontchannelLogoutSessionRequired"];
  if (this->frontchannel_logout_session_required() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(11, this->_internal_frontchannel_logout_session_required(), target);
  }

  // string frontchannel_logout_uri = 12[json_name = "frontchannelLogoutUri"];
  if (this->frontchannel_logout_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_frontchannel_logout_uri().data(), static_cast<int>(this->_internal_frontchannel_logout_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.frontchannel_logout_uri");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_frontchannel_logout_uri(), target);
  }

  // repeated .depot.devtools.auth.v0.identity.admin.GrantType grant_types = 13[json_name = "grantTypes"];
  {
    int byte_size = _grant_types_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          13, grant_types_, byte_size, target);
    }
  }

  // .google.protobuf.Struct jwks = 14[json_name = "jwks"];
  if (this->has_jwks()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        14, _Internal::jwks(this), target, stream);
  }

  // string jwks_uri = 15[json_name = "jwksUri"];
  if (this->jwks_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_jwks_uri().data(), static_cast<int>(this->_internal_jwks_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.jwks_uri");
    target = stream->WriteStringMaybeAliased(
        15, this->_internal_jwks_uri(), target);
  }

  // string logo_uri = 16[json_name = "logoUri"];
  if (this->logo_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_logo_uri().data(), static_cast<int>(this->_internal_logo_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.logo_uri");
    target = stream->WriteStringMaybeAliased(
        16, this->_internal_logo_uri(), target);
  }

  // .google.protobuf.Struct metadata = 17[json_name = "metadata"];
  if (this->has_metadata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        17, _Internal::metadata(this), target, stream);
  }

  // string owner = 18[json_name = "owner"];
  if (this->owner().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_owner().data(), static_cast<int>(this->_internal_owner().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.owner");
    target = stream->WriteStringMaybeAliased(
        18, this->_internal_owner(), target);
  }

  // string policy_uri = 19[json_name = "policyUri"];
  if (this->policy_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_policy_uri().data(), static_cast<int>(this->_internal_policy_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.policy_uri");
    target = stream->WriteStringMaybeAliased(
        19, this->_internal_policy_uri(), target);
  }

  // repeated string post_logout_redirect_uris = 20[json_name = "postLogoutRedirectUris"];
  for (int i = 0, n = this->_internal_post_logout_redirect_uris_size(); i < n; i++) {
    const auto& s = this->_internal_post_logout_redirect_uris(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.post_logout_redirect_uris");
    target = stream->WriteString(20, s, target);
  }

  // repeated string redirect_uris = 21[json_name = "redirectUris"];
  for (int i = 0, n = this->_internal_redirect_uris_size(); i < n; i++) {
    const auto& s = this->_internal_redirect_uris(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.redirect_uris");
    target = stream->WriteString(21, s, target);
  }

  // .depot.devtools.auth.v0.identity.admin.RequestObjectSigningAlg request_object_signing_alg = 22[json_name = "requestObjectSigningAlg"];
  if (this->request_object_signing_alg() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      22, this->_internal_request_object_signing_alg(), target);
  }

  // repeated string request_uris = 23[json_name = "requestUris"];
  for (int i = 0, n = this->_internal_request_uris_size(); i < n; i++) {
    const auto& s = this->_internal_request_uris(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.request_uris");
    target = stream->WriteString(23, s, target);
  }

  // repeated .depot.devtools.auth.v0.identity.admin.ResponseType response_types = 24[json_name = "responseTypes"];
  {
    int byte_size = _response_types_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          24, response_types_, byte_size, target);
    }
  }

  // string scope = 25[json_name = "scope"];
  if (this->scope().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_scope().data(), static_cast<int>(this->_internal_scope().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.scope");
    target = stream->WriteStringMaybeAliased(
        25, this->_internal_scope(), target);
  }

  // string sector_identifier_uri = 26[json_name = "sectorIdentifierUri"];
  if (this->sector_identifier_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sector_identifier_uri().data(), static_cast<int>(this->_internal_sector_identifier_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.sector_identifier_uri");
    target = stream->WriteStringMaybeAliased(
        26, this->_internal_sector_identifier_uri(), target);
  }

  // .depot.devtools.auth.v0.identity.admin.SubjectType subject_type = 27[json_name = "subjectType"];
  if (this->subject_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      27, this->_internal_subject_type(), target);
  }

  // .depot.devtools.auth.v0.identity.admin.TokenEndpointAuthMethod token_endpoint_auth_method = 28[json_name = "tokenEndpointAuthMethod"];
  if (this->token_endpoint_auth_method() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      28, this->_internal_token_endpoint_auth_method(), target);
  }

  // .depot.devtools.auth.v0.identity.admin.TokenEndpointAuthSigningAlg token_endpoint_auth_signing_alg = 29[json_name = "tokenEndpointAuthSigningAlg"];
  if (this->token_endpoint_auth_signing_alg() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      29, this->_internal_token_endpoint_auth_signing_alg(), target);
  }

  // string tos_uri = 30[json_name = "tosUri"];
  if (this->tos_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tos_uri().data(), static_cast<int>(this->_internal_tos_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.tos_uri");
    target = stream->WriteStringMaybeAliased(
        30, this->_internal_tos_uri(), target);
  }

  // .depot.devtools.auth.v0.identity.admin.UserinfoSignedResponseAlg userinfo_signed_response_alg = 31[json_name = "userinfoSignedResponseAlg"];
  if (this->userinfo_signed_response_alg() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      31, this->_internal_userinfo_signed_response_alg(), target);
  }

  // string client_secret = 32[json_name = "clientSecret"];
  if (this->client_secret().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_secret().data(), static_cast<int>(this->_internal_client_secret().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.client_secret");
    target = stream->WriteStringMaybeAliased(
        32, this->_internal_client_secret(), target);
  }

  // .depot.devtools.auth.v0.identity.admin.ClientType client_type = 33[json_name = "clientType"];
  if (this->client_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      33, this->_internal_client_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest)
  return target;
}

size_t CreateOAuth2ClientRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string allowed_cors_origins = 1[json_name = "allowedCorsOrigins"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(allowed_cors_origins_.size());
  for (int i = 0, n = allowed_cors_origins_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      allowed_cors_origins_.Get(i));
  }

  // repeated string audience = 2[json_name = "audience"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(audience_.size());
  for (int i = 0, n = audience_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      audience_.Get(i));
  }

  // repeated string contacts = 9[json_name = "contacts"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(contacts_.size());
  for (int i = 0, n = contacts_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      contacts_.Get(i));
  }

  // repeated .depot.devtools.auth.v0.identity.admin.GrantType grant_types = 13[json_name = "grantTypes"];
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_grant_types_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->_internal_grant_types(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _grant_types_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated string post_logout_redirect_uris = 20[json_name = "postLogoutRedirectUris"];
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(post_logout_redirect_uris_.size());
  for (int i = 0, n = post_logout_redirect_uris_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      post_logout_redirect_uris_.Get(i));
  }

  // repeated string redirect_uris = 21[json_name = "redirectUris"];
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(redirect_uris_.size());
  for (int i = 0, n = redirect_uris_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      redirect_uris_.Get(i));
  }

  // repeated string request_uris = 23[json_name = "requestUris"];
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(request_uris_.size());
  for (int i = 0, n = request_uris_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      request_uris_.Get(i));
  }

  // repeated .depot.devtools.auth.v0.identity.admin.ResponseType response_types = 24[json_name = "responseTypes"];
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_response_types_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->_internal_response_types(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _response_types_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string backchannel_logout_uri = 4[json_name = "backchannelLogoutUri"];
  if (this->backchannel_logout_uri().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_backchannel_logout_uri());
  }

  // string client_name = 6[json_name = "clientName"];
  if (this->client_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_name());
  }

  // string client_uri = 8[json_name = "clientUri"];
  if (this->client_uri().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_uri());
  }

  // string frontchannel_logout_uri = 12[json_name = "frontchannelLogoutUri"];
  if (this->frontchannel_logout_uri().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_frontchannel_logout_uri());
  }

  // string jwks_uri = 15[json_name = "jwksUri"];
  if (this->jwks_uri().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_jwks_uri());
  }

  // string logo_uri = 16[json_name = "logoUri"];
  if (this->logo_uri().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_logo_uri());
  }

  // string owner = 18[json_name = "owner"];
  if (this->owner().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_owner());
  }

  // string policy_uri = 19[json_name = "policyUri"];
  if (this->policy_uri().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_policy_uri());
  }

  // string scope = 25[json_name = "scope"];
  if (this->scope().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_scope());
  }

  // string sector_identifier_uri = 26[json_name = "sectorIdentifierUri"];
  if (this->sector_identifier_uri().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sector_identifier_uri());
  }

  // string tos_uri = 30[json_name = "tosUri"];
  if (this->tos_uri().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tos_uri());
  }

  // string client_secret = 32[json_name = "clientSecret"];
  if (this->client_secret().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_secret());
  }

  // .google.protobuf.Struct jwks = 14[json_name = "jwks"];
  if (this->has_jwks()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *jwks_);
  }

  // .google.protobuf.Struct metadata = 17[json_name = "metadata"];
  if (this->has_metadata()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *metadata_);
  }

  // bool backchannel_logout_session_required = 3[json_name = "backchannelLogoutSessionRequired"];
  if (this->backchannel_logout_session_required() != 0) {
    total_size += 1 + 1;
  }

  // bool frontchannel_logout_session_required = 11[json_name = "frontchannelLogoutSessionRequired"];
  if (this->frontchannel_logout_session_required() != 0) {
    total_size += 1 + 1;
  }

  // .depot.devtools.auth.v0.identity.admin.RequestObjectSigningAlg request_object_signing_alg = 22[json_name = "requestObjectSigningAlg"];
  if (this->request_object_signing_alg() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_request_object_signing_alg());
  }

  // .depot.devtools.auth.v0.identity.admin.SubjectType subject_type = 27[json_name = "subjectType"];
  if (this->subject_type() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_subject_type());
  }

  // .depot.devtools.auth.v0.identity.admin.TokenEndpointAuthMethod token_endpoint_auth_method = 28[json_name = "tokenEndpointAuthMethod"];
  if (this->token_endpoint_auth_method() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_token_endpoint_auth_method());
  }

  // .depot.devtools.auth.v0.identity.admin.TokenEndpointAuthSigningAlg token_endpoint_auth_signing_alg = 29[json_name = "tokenEndpointAuthSigningAlg"];
  if (this->token_endpoint_auth_signing_alg() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_token_endpoint_auth_signing_alg());
  }

  // .depot.devtools.auth.v0.identity.admin.UserinfoSignedResponseAlg userinfo_signed_response_alg = 31[json_name = "userinfoSignedResponseAlg"];
  if (this->userinfo_signed_response_alg() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_userinfo_signed_response_alg());
  }

  // .depot.devtools.auth.v0.identity.admin.ClientType client_type = 33[json_name = "clientType"];
  if (this->client_type() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_client_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateOAuth2ClientRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateOAuth2ClientRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateOAuth2ClientRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest)
    MergeFrom(*source);
  }
}

void CreateOAuth2ClientRequest::MergeFrom(const CreateOAuth2ClientRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  allowed_cors_origins_.MergeFrom(from.allowed_cors_origins_);
  audience_.MergeFrom(from.audience_);
  contacts_.MergeFrom(from.contacts_);
  grant_types_.MergeFrom(from.grant_types_);
  post_logout_redirect_uris_.MergeFrom(from.post_logout_redirect_uris_);
  redirect_uris_.MergeFrom(from.redirect_uris_);
  request_uris_.MergeFrom(from.request_uris_);
  response_types_.MergeFrom(from.response_types_);
  if (from.backchannel_logout_uri().size() > 0) {
    _internal_set_backchannel_logout_uri(from._internal_backchannel_logout_uri());
  }
  if (from.client_name().size() > 0) {
    _internal_set_client_name(from._internal_client_name());
  }
  if (from.client_uri().size() > 0) {
    _internal_set_client_uri(from._internal_client_uri());
  }
  if (from.frontchannel_logout_uri().size() > 0) {
    _internal_set_frontchannel_logout_uri(from._internal_frontchannel_logout_uri());
  }
  if (from.jwks_uri().size() > 0) {
    _internal_set_jwks_uri(from._internal_jwks_uri());
  }
  if (from.logo_uri().size() > 0) {
    _internal_set_logo_uri(from._internal_logo_uri());
  }
  if (from.owner().size() > 0) {
    _internal_set_owner(from._internal_owner());
  }
  if (from.policy_uri().size() > 0) {
    _internal_set_policy_uri(from._internal_policy_uri());
  }
  if (from.scope().size() > 0) {
    _internal_set_scope(from._internal_scope());
  }
  if (from.sector_identifier_uri().size() > 0) {
    _internal_set_sector_identifier_uri(from._internal_sector_identifier_uri());
  }
  if (from.tos_uri().size() > 0) {
    _internal_set_tos_uri(from._internal_tos_uri());
  }
  if (from.client_secret().size() > 0) {
    _internal_set_client_secret(from._internal_client_secret());
  }
  if (from.has_jwks()) {
    _internal_mutable_jwks()->PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_jwks());
  }
  if (from.has_metadata()) {
    _internal_mutable_metadata()->PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_metadata());
  }
  if (from.backchannel_logout_session_required() != 0) {
    _internal_set_backchannel_logout_session_required(from._internal_backchannel_logout_session_required());
  }
  if (from.frontchannel_logout_session_required() != 0) {
    _internal_set_frontchannel_logout_session_required(from._internal_frontchannel_logout_session_required());
  }
  if (from.request_object_signing_alg() != 0) {
    _internal_set_request_object_signing_alg(from._internal_request_object_signing_alg());
  }
  if (from.subject_type() != 0) {
    _internal_set_subject_type(from._internal_subject_type());
  }
  if (from.token_endpoint_auth_method() != 0) {
    _internal_set_token_endpoint_auth_method(from._internal_token_endpoint_auth_method());
  }
  if (from.token_endpoint_auth_signing_alg() != 0) {
    _internal_set_token_endpoint_auth_signing_alg(from._internal_token_endpoint_auth_signing_alg());
  }
  if (from.userinfo_signed_response_alg() != 0) {
    _internal_set_userinfo_signed_response_alg(from._internal_userinfo_signed_response_alg());
  }
  if (from.client_type() != 0) {
    _internal_set_client_type(from._internal_client_type());
  }
}

void CreateOAuth2ClientRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateOAuth2ClientRequest::CopyFrom(const CreateOAuth2ClientRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateOAuth2ClientRequest::IsInitialized() const {
  return true;
}

void CreateOAuth2ClientRequest::InternalSwap(CreateOAuth2ClientRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  allowed_cors_origins_.InternalSwap(&other->allowed_cors_origins_);
  audience_.InternalSwap(&other->audience_);
  contacts_.InternalSwap(&other->contacts_);
  grant_types_.InternalSwap(&other->grant_types_);
  post_logout_redirect_uris_.InternalSwap(&other->post_logout_redirect_uris_);
  redirect_uris_.InternalSwap(&other->redirect_uris_);
  request_uris_.InternalSwap(&other->request_uris_);
  response_types_.InternalSwap(&other->response_types_);
  backchannel_logout_uri_.Swap(&other->backchannel_logout_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  client_name_.Swap(&other->client_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  client_uri_.Swap(&other->client_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  frontchannel_logout_uri_.Swap(&other->frontchannel_logout_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  jwks_uri_.Swap(&other->jwks_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  logo_uri_.Swap(&other->logo_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  owner_.Swap(&other->owner_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  policy_uri_.Swap(&other->policy_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  scope_.Swap(&other->scope_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sector_identifier_uri_.Swap(&other->sector_identifier_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  tos_uri_.Swap(&other->tos_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  client_secret_.Swap(&other->client_secret_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateOAuth2ClientRequest, client_type_)
      + sizeof(CreateOAuth2ClientRequest::client_type_)
      - PROTOBUF_FIELD_OFFSET(CreateOAuth2ClientRequest, jwks_)>(
          reinterpret_cast<char*>(&jwks_),
          reinterpret_cast<char*>(&other->jwks_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateOAuth2ClientRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateOAuth2ClientResponse::InitAsDefaultInstance() {
}
class CreateOAuth2ClientResponse::_Internal {
 public:
};

CreateOAuth2ClientResponse::CreateOAuth2ClientResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientResponse)
}
CreateOAuth2ClientResponse::CreateOAuth2ClientResponse(const CreateOAuth2ClientResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  client_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_client_id().empty()) {
    client_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_client_id(),
      GetArena());
  }
  client_secret_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_client_secret().empty()) {
    client_secret_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_client_secret(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientResponse)
}

void CreateOAuth2ClientResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateOAuth2ClientResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  client_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_secret_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CreateOAuth2ClientResponse::~CreateOAuth2ClientResponse() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateOAuth2ClientResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  client_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_secret_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateOAuth2ClientResponse::ArenaDtor(void* object) {
  CreateOAuth2ClientResponse* _this = reinterpret_cast< CreateOAuth2ClientResponse* >(object);
  (void)_this;
}
void CreateOAuth2ClientResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateOAuth2ClientResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateOAuth2ClientResponse& CreateOAuth2ClientResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateOAuth2ClientResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void CreateOAuth2ClientResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  client_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  client_secret_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateOAuth2ClientResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string client_id = 1[json_name = "clientId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_client_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientResponse.client_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string client_secret = 2[json_name = "clientSecret"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_client_secret();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientResponse.client_secret"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateOAuth2ClientResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string client_id = 1[json_name = "clientId"];
  if (this->client_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_id().data(), static_cast<int>(this->_internal_client_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientResponse.client_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_client_id(), target);
  }

  // string client_secret = 2[json_name = "clientSecret"];
  if (this->client_secret().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_secret().data(), static_cast<int>(this->_internal_client_secret().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientResponse.client_secret");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_client_secret(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientResponse)
  return target;
}

size_t CreateOAuth2ClientResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string client_id = 1[json_name = "clientId"];
  if (this->client_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_id());
  }

  // string client_secret = 2[json_name = "clientSecret"];
  if (this->client_secret().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_secret());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateOAuth2ClientResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateOAuth2ClientResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateOAuth2ClientResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientResponse)
    MergeFrom(*source);
  }
}

void CreateOAuth2ClientResponse::MergeFrom(const CreateOAuth2ClientResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.client_id().size() > 0) {
    _internal_set_client_id(from._internal_client_id());
  }
  if (from.client_secret().size() > 0) {
    _internal_set_client_secret(from._internal_client_secret());
  }
}

void CreateOAuth2ClientResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateOAuth2ClientResponse::CopyFrom(const CreateOAuth2ClientResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateOAuth2ClientResponse::IsInitialized() const {
  return true;
}

void CreateOAuth2ClientResponse::InternalSwap(CreateOAuth2ClientResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  client_id_.Swap(&other->client_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  client_secret_.Swap(&other->client_secret_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateOAuth2ClientResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateOAuth2ClientRequest::InitAsDefaultInstance() {
  ::depot::devtools::auth::v0::identity::admin::_UpdateOAuth2ClientRequest_default_instance_._instance.get_mutable()->jwks_ = const_cast< PROTOBUF_NAMESPACE_ID::Struct*>(
      PROTOBUF_NAMESPACE_ID::Struct::internal_default_instance());
  ::depot::devtools::auth::v0::identity::admin::_UpdateOAuth2ClientRequest_default_instance_._instance.get_mutable()->metadata_ = const_cast< PROTOBUF_NAMESPACE_ID::Struct*>(
      PROTOBUF_NAMESPACE_ID::Struct::internal_default_instance());
}
class UpdateOAuth2ClientRequest::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Struct& jwks(const UpdateOAuth2ClientRequest* msg);
  static const PROTOBUF_NAMESPACE_ID::Struct& metadata(const UpdateOAuth2ClientRequest* msg);
};

const PROTOBUF_NAMESPACE_ID::Struct&
UpdateOAuth2ClientRequest::_Internal::jwks(const UpdateOAuth2ClientRequest* msg) {
  return *msg->jwks_;
}
const PROTOBUF_NAMESPACE_ID::Struct&
UpdateOAuth2ClientRequest::_Internal::metadata(const UpdateOAuth2ClientRequest* msg) {
  return *msg->metadata_;
}
void UpdateOAuth2ClientRequest::clear_jwks() {
  if (GetArena() == nullptr && jwks_ != nullptr) {
    delete jwks_;
  }
  jwks_ = nullptr;
}
void UpdateOAuth2ClientRequest::clear_metadata() {
  if (GetArena() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
}
UpdateOAuth2ClientRequest::UpdateOAuth2ClientRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  allowed_cors_origins_(arena),
  audience_(arena),
  contacts_(arena),
  grant_types_(arena),
  post_logout_redirect_uris_(arena),
  redirect_uris_(arena),
  request_uris_(arena),
  response_types_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest)
}
UpdateOAuth2ClientRequest::UpdateOAuth2ClientRequest(const UpdateOAuth2ClientRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      allowed_cors_origins_(from.allowed_cors_origins_),
      audience_(from.audience_),
      contacts_(from.contacts_),
      grant_types_(from.grant_types_),
      post_logout_redirect_uris_(from.post_logout_redirect_uris_),
      redirect_uris_(from.redirect_uris_),
      request_uris_(from.request_uris_),
      response_types_(from.response_types_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  backchannel_logout_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_backchannel_logout_uri().empty()) {
    backchannel_logout_uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_backchannel_logout_uri(),
      GetArena());
  }
  client_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_client_name().empty()) {
    client_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_client_name(),
      GetArena());
  }
  client_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_client_uri().empty()) {
    client_uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_client_uri(),
      GetArena());
  }
  frontchannel_logout_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_frontchannel_logout_uri().empty()) {
    frontchannel_logout_uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_frontchannel_logout_uri(),
      GetArena());
  }
  jwks_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_jwks_uri().empty()) {
    jwks_uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_jwks_uri(),
      GetArena());
  }
  logo_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_logo_uri().empty()) {
    logo_uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_logo_uri(),
      GetArena());
  }
  owner_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_owner().empty()) {
    owner_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_owner(),
      GetArena());
  }
  policy_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_policy_uri().empty()) {
    policy_uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_policy_uri(),
      GetArena());
  }
  scope_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_scope().empty()) {
    scope_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_scope(),
      GetArena());
  }
  sector_identifier_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sector_identifier_uri().empty()) {
    sector_identifier_uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_sector_identifier_uri(),
      GetArena());
  }
  tos_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tos_uri().empty()) {
    tos_uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_tos_uri(),
      GetArena());
  }
  client_secret_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_client_secret().empty()) {
    client_secret_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_client_secret(),
      GetArena());
  }
  client_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_client_id().empty()) {
    client_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_client_id(),
      GetArena());
  }
  if (from._internal_has_jwks()) {
    jwks_ = new PROTOBUF_NAMESPACE_ID::Struct(*from.jwks_);
  } else {
    jwks_ = nullptr;
  }
  if (from._internal_has_metadata()) {
    metadata_ = new PROTOBUF_NAMESPACE_ID::Struct(*from.metadata_);
  } else {
    metadata_ = nullptr;
  }
  ::memcpy(&backchannel_logout_session_required_, &from.backchannel_logout_session_required_,
    static_cast<size_t>(reinterpret_cast<char*>(&userinfo_signed_response_alg_) -
    reinterpret_cast<char*>(&backchannel_logout_session_required_)) + sizeof(userinfo_signed_response_alg_));
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest)
}

void UpdateOAuth2ClientRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateOAuth2ClientRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  backchannel_logout_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  frontchannel_logout_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  jwks_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  logo_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  owner_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  policy_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scope_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sector_identifier_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tos_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_secret_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&jwks_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&userinfo_signed_response_alg_) -
      reinterpret_cast<char*>(&jwks_)) + sizeof(userinfo_signed_response_alg_));
}

UpdateOAuth2ClientRequest::~UpdateOAuth2ClientRequest() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateOAuth2ClientRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  backchannel_logout_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  frontchannel_logout_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  jwks_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  logo_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  owner_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  policy_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scope_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sector_identifier_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tos_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_secret_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete jwks_;
  if (this != internal_default_instance()) delete metadata_;
}

void UpdateOAuth2ClientRequest::ArenaDtor(void* object) {
  UpdateOAuth2ClientRequest* _this = reinterpret_cast< UpdateOAuth2ClientRequest* >(object);
  (void)_this;
}
void UpdateOAuth2ClientRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateOAuth2ClientRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateOAuth2ClientRequest& UpdateOAuth2ClientRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateOAuth2ClientRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void UpdateOAuth2ClientRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  allowed_cors_origins_.Clear();
  audience_.Clear();
  contacts_.Clear();
  grant_types_.Clear();
  post_logout_redirect_uris_.Clear();
  redirect_uris_.Clear();
  request_uris_.Clear();
  response_types_.Clear();
  backchannel_logout_uri_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  client_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  client_uri_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  frontchannel_logout_uri_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  jwks_uri_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  logo_uri_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  owner_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  policy_uri_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  scope_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sector_identifier_uri_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  tos_uri_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  client_secret_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  client_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && jwks_ != nullptr) {
    delete jwks_;
  }
  jwks_ = nullptr;
  if (GetArena() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
  ::memset(&backchannel_logout_session_required_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&userinfo_signed_response_alg_) -
      reinterpret_cast<char*>(&backchannel_logout_session_required_)) + sizeof(userinfo_signed_response_alg_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateOAuth2ClientRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string allowed_cors_origins = 1[json_name = "allowedCorsOrigins"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_allowed_cors_origins();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.allowed_cors_origins"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string audience = 2[json_name = "audience"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_audience();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.audience"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // bool backchannel_logout_session_required = 3[json_name = "backchannelLogoutSessionRequired"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          backchannel_logout_session_required_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string backchannel_logout_uri = 4[json_name = "backchannelLogoutUri"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_backchannel_logout_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.backchannel_logout_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string client_name = 6[json_name = "clientName"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_client_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.client_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string client_uri = 8[json_name = "clientUri"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_client_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.client_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string contacts = 9[json_name = "contacts"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_contacts();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.contacts"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else goto handle_unusual;
        continue;
      // bool frontchannel_logout_session_required = 11[json_name = "frontchannelLogoutSessionRequired"];
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          frontchannel_logout_session_required_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string frontchannel_logout_uri = 12[json_name = "frontchannelLogoutUri"];
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_frontchannel_logout_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.frontchannel_logout_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .depot.devtools.auth.v0.identity.admin.GrantType grant_types = 13[json_name = "grantTypes"];
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_grant_types(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_grant_types(static_cast<::depot::devtools::auth::v0::identity::admin::GrantType>(val));
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Struct jwks = 14[json_name = "jwks"];
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_jwks(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string jwks_uri = 15[json_name = "jwksUri"];
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          auto str = _internal_mutable_jwks_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.jwks_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string logo_uri = 16[json_name = "logoUri"];
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          auto str = _internal_mutable_logo_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.logo_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Struct metadata = 17[json_name = "metadata"];
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_metadata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string owner = 18[json_name = "owner"];
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          auto str = _internal_mutable_owner();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.owner"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string policy_uri = 19[json_name = "policyUri"];
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          auto str = _internal_mutable_policy_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.policy_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string post_logout_redirect_uris = 20[json_name = "postLogoutRedirectUris"];
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          ptr -= 2;
          do {
            ptr += 2;
            auto str = _internal_add_post_logout_redirect_uris();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.post_logout_redirect_uris"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<162>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string redirect_uris = 21[json_name = "redirectUris"];
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr -= 2;
          do {
            ptr += 2;
            auto str = _internal_add_redirect_uris();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.redirect_uris"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<170>(ptr));
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.RequestObjectSigningAlg request_object_signing_alg = 22[json_name = "requestObjectSigningAlg"];
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_request_object_signing_alg(static_cast<::depot::devtools::auth::v0::identity::admin::RequestObjectSigningAlg>(val));
        } else goto handle_unusual;
        continue;
      // repeated string request_uris = 23[json_name = "requestUris"];
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr -= 2;
          do {
            ptr += 2;
            auto str = _internal_add_request_uris();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.request_uris"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<186>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .depot.devtools.auth.v0.identity.admin.ResponseType response_types = 24[json_name = "responseTypes"];
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 194)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_response_types(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_response_types(static_cast<::depot::devtools::auth::v0::identity::admin::ResponseType>(val));
        } else goto handle_unusual;
        continue;
      // string scope = 25[json_name = "scope"];
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          auto str = _internal_mutable_scope();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.scope"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string sector_identifier_uri = 26[json_name = "sectorIdentifierUri"];
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 210)) {
          auto str = _internal_mutable_sector_identifier_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.sector_identifier_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.SubjectType subject_type = 27[json_name = "subjectType"];
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 216)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_subject_type(static_cast<::depot::devtools::auth::v0::identity::admin::SubjectType>(val));
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.TokenEndpointAuthMethod token_endpoint_auth_method = 28[json_name = "tokenEndpointAuthMethod"];
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_token_endpoint_auth_method(static_cast<::depot::devtools::auth::v0::identity::admin::TokenEndpointAuthMethod>(val));
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.TokenEndpointAuthSigningAlg token_endpoint_auth_signing_alg = 29[json_name = "tokenEndpointAuthSigningAlg"];
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 232)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_token_endpoint_auth_signing_alg(static_cast<::depot::devtools::auth::v0::identity::admin::TokenEndpointAuthSigningAlg>(val));
        } else goto handle_unusual;
        continue;
      // string tos_uri = 30[json_name = "tosUri"];
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 242)) {
          auto str = _internal_mutable_tos_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.tos_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.UserinfoSignedResponseAlg userinfo_signed_response_alg = 31[json_name = "userinfoSignedResponseAlg"];
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 248)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_userinfo_signed_response_alg(static_cast<::depot::devtools::auth::v0::identity::admin::UserinfoSignedResponseAlg>(val));
        } else goto handle_unusual;
        continue;
      // string client_secret = 32[json_name = "clientSecret"];
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 2)) {
          auto str = _internal_mutable_client_secret();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.client_secret"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string client_id = 33[json_name = "clientId"];
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_client_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.client_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateOAuth2ClientRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string allowed_cors_origins = 1[json_name = "allowedCorsOrigins"];
  for (int i = 0, n = this->_internal_allowed_cors_origins_size(); i < n; i++) {
    const auto& s = this->_internal_allowed_cors_origins(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.allowed_cors_origins");
    target = stream->WriteString(1, s, target);
  }

  // repeated string audience = 2[json_name = "audience"];
  for (int i = 0, n = this->_internal_audience_size(); i < n; i++) {
    const auto& s = this->_internal_audience(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.audience");
    target = stream->WriteString(2, s, target);
  }

  // bool backchannel_logout_session_required = 3[json_name = "backchannelLogoutSessionRequired"];
  if (this->backchannel_logout_session_required() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_backchannel_logout_session_required(), target);
  }

  // string backchannel_logout_uri = 4[json_name = "backchannelLogoutUri"];
  if (this->backchannel_logout_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_backchannel_logout_uri().data(), static_cast<int>(this->_internal_backchannel_logout_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.backchannel_logout_uri");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_backchannel_logout_uri(), target);
  }

  // string client_name = 6[json_name = "clientName"];
  if (this->client_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_name().data(), static_cast<int>(this->_internal_client_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.client_name");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_client_name(), target);
  }

  // string client_uri = 8[json_name = "clientUri"];
  if (this->client_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_uri().data(), static_cast<int>(this->_internal_client_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.client_uri");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_client_uri(), target);
  }

  // repeated string contacts = 9[json_name = "contacts"];
  for (int i = 0, n = this->_internal_contacts_size(); i < n; i++) {
    const auto& s = this->_internal_contacts(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.contacts");
    target = stream->WriteString(9, s, target);
  }

  // bool frontchannel_logout_session_required = 11[json_name = "frontchannelLogoutSessionRequired"];
  if (this->frontchannel_logout_session_required() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(11, this->_internal_frontchannel_logout_session_required(), target);
  }

  // string frontchannel_logout_uri = 12[json_name = "frontchannelLogoutUri"];
  if (this->frontchannel_logout_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_frontchannel_logout_uri().data(), static_cast<int>(this->_internal_frontchannel_logout_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.frontchannel_logout_uri");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_frontchannel_logout_uri(), target);
  }

  // repeated .depot.devtools.auth.v0.identity.admin.GrantType grant_types = 13[json_name = "grantTypes"];
  {
    int byte_size = _grant_types_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          13, grant_types_, byte_size, target);
    }
  }

  // .google.protobuf.Struct jwks = 14[json_name = "jwks"];
  if (this->has_jwks()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        14, _Internal::jwks(this), target, stream);
  }

  // string jwks_uri = 15[json_name = "jwksUri"];
  if (this->jwks_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_jwks_uri().data(), static_cast<int>(this->_internal_jwks_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.jwks_uri");
    target = stream->WriteStringMaybeAliased(
        15, this->_internal_jwks_uri(), target);
  }

  // string logo_uri = 16[json_name = "logoUri"];
  if (this->logo_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_logo_uri().data(), static_cast<int>(this->_internal_logo_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.logo_uri");
    target = stream->WriteStringMaybeAliased(
        16, this->_internal_logo_uri(), target);
  }

  // .google.protobuf.Struct metadata = 17[json_name = "metadata"];
  if (this->has_metadata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        17, _Internal::metadata(this), target, stream);
  }

  // string owner = 18[json_name = "owner"];
  if (this->owner().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_owner().data(), static_cast<int>(this->_internal_owner().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.owner");
    target = stream->WriteStringMaybeAliased(
        18, this->_internal_owner(), target);
  }

  // string policy_uri = 19[json_name = "policyUri"];
  if (this->policy_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_policy_uri().data(), static_cast<int>(this->_internal_policy_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.policy_uri");
    target = stream->WriteStringMaybeAliased(
        19, this->_internal_policy_uri(), target);
  }

  // repeated string post_logout_redirect_uris = 20[json_name = "postLogoutRedirectUris"];
  for (int i = 0, n = this->_internal_post_logout_redirect_uris_size(); i < n; i++) {
    const auto& s = this->_internal_post_logout_redirect_uris(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.post_logout_redirect_uris");
    target = stream->WriteString(20, s, target);
  }

  // repeated string redirect_uris = 21[json_name = "redirectUris"];
  for (int i = 0, n = this->_internal_redirect_uris_size(); i < n; i++) {
    const auto& s = this->_internal_redirect_uris(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.redirect_uris");
    target = stream->WriteString(21, s, target);
  }

  // .depot.devtools.auth.v0.identity.admin.RequestObjectSigningAlg request_object_signing_alg = 22[json_name = "requestObjectSigningAlg"];
  if (this->request_object_signing_alg() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      22, this->_internal_request_object_signing_alg(), target);
  }

  // repeated string request_uris = 23[json_name = "requestUris"];
  for (int i = 0, n = this->_internal_request_uris_size(); i < n; i++) {
    const auto& s = this->_internal_request_uris(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.request_uris");
    target = stream->WriteString(23, s, target);
  }

  // repeated .depot.devtools.auth.v0.identity.admin.ResponseType response_types = 24[json_name = "responseTypes"];
  {
    int byte_size = _response_types_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          24, response_types_, byte_size, target);
    }
  }

  // string scope = 25[json_name = "scope"];
  if (this->scope().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_scope().data(), static_cast<int>(this->_internal_scope().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.scope");
    target = stream->WriteStringMaybeAliased(
        25, this->_internal_scope(), target);
  }

  // string sector_identifier_uri = 26[json_name = "sectorIdentifierUri"];
  if (this->sector_identifier_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sector_identifier_uri().data(), static_cast<int>(this->_internal_sector_identifier_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.sector_identifier_uri");
    target = stream->WriteStringMaybeAliased(
        26, this->_internal_sector_identifier_uri(), target);
  }

  // .depot.devtools.auth.v0.identity.admin.SubjectType subject_type = 27[json_name = "subjectType"];
  if (this->subject_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      27, this->_internal_subject_type(), target);
  }

  // .depot.devtools.auth.v0.identity.admin.TokenEndpointAuthMethod token_endpoint_auth_method = 28[json_name = "tokenEndpointAuthMethod"];
  if (this->token_endpoint_auth_method() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      28, this->_internal_token_endpoint_auth_method(), target);
  }

  // .depot.devtools.auth.v0.identity.admin.TokenEndpointAuthSigningAlg token_endpoint_auth_signing_alg = 29[json_name = "tokenEndpointAuthSigningAlg"];
  if (this->token_endpoint_auth_signing_alg() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      29, this->_internal_token_endpoint_auth_signing_alg(), target);
  }

  // string tos_uri = 30[json_name = "tosUri"];
  if (this->tos_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tos_uri().data(), static_cast<int>(this->_internal_tos_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.tos_uri");
    target = stream->WriteStringMaybeAliased(
        30, this->_internal_tos_uri(), target);
  }

  // .depot.devtools.auth.v0.identity.admin.UserinfoSignedResponseAlg userinfo_signed_response_alg = 31[json_name = "userinfoSignedResponseAlg"];
  if (this->userinfo_signed_response_alg() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      31, this->_internal_userinfo_signed_response_alg(), target);
  }

  // string client_secret = 32[json_name = "clientSecret"];
  if (this->client_secret().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_secret().data(), static_cast<int>(this->_internal_client_secret().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.client_secret");
    target = stream->WriteStringMaybeAliased(
        32, this->_internal_client_secret(), target);
  }

  // string client_id = 33[json_name = "clientId"];
  if (this->client_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_id().data(), static_cast<int>(this->_internal_client_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.client_id");
    target = stream->WriteStringMaybeAliased(
        33, this->_internal_client_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest)
  return target;
}

size_t UpdateOAuth2ClientRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string allowed_cors_origins = 1[json_name = "allowedCorsOrigins"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(allowed_cors_origins_.size());
  for (int i = 0, n = allowed_cors_origins_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      allowed_cors_origins_.Get(i));
  }

  // repeated string audience = 2[json_name = "audience"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(audience_.size());
  for (int i = 0, n = audience_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      audience_.Get(i));
  }

  // repeated string contacts = 9[json_name = "contacts"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(contacts_.size());
  for (int i = 0, n = contacts_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      contacts_.Get(i));
  }

  // repeated .depot.devtools.auth.v0.identity.admin.GrantType grant_types = 13[json_name = "grantTypes"];
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_grant_types_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->_internal_grant_types(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _grant_types_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated string post_logout_redirect_uris = 20[json_name = "postLogoutRedirectUris"];
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(post_logout_redirect_uris_.size());
  for (int i = 0, n = post_logout_redirect_uris_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      post_logout_redirect_uris_.Get(i));
  }

  // repeated string redirect_uris = 21[json_name = "redirectUris"];
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(redirect_uris_.size());
  for (int i = 0, n = redirect_uris_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      redirect_uris_.Get(i));
  }

  // repeated string request_uris = 23[json_name = "requestUris"];
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(request_uris_.size());
  for (int i = 0, n = request_uris_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      request_uris_.Get(i));
  }

  // repeated .depot.devtools.auth.v0.identity.admin.ResponseType response_types = 24[json_name = "responseTypes"];
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_response_types_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->_internal_response_types(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _response_types_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string backchannel_logout_uri = 4[json_name = "backchannelLogoutUri"];
  if (this->backchannel_logout_uri().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_backchannel_logout_uri());
  }

  // string client_name = 6[json_name = "clientName"];
  if (this->client_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_name());
  }

  // string client_uri = 8[json_name = "clientUri"];
  if (this->client_uri().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_uri());
  }

  // string frontchannel_logout_uri = 12[json_name = "frontchannelLogoutUri"];
  if (this->frontchannel_logout_uri().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_frontchannel_logout_uri());
  }

  // string jwks_uri = 15[json_name = "jwksUri"];
  if (this->jwks_uri().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_jwks_uri());
  }

  // string logo_uri = 16[json_name = "logoUri"];
  if (this->logo_uri().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_logo_uri());
  }

  // string owner = 18[json_name = "owner"];
  if (this->owner().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_owner());
  }

  // string policy_uri = 19[json_name = "policyUri"];
  if (this->policy_uri().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_policy_uri());
  }

  // string scope = 25[json_name = "scope"];
  if (this->scope().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_scope());
  }

  // string sector_identifier_uri = 26[json_name = "sectorIdentifierUri"];
  if (this->sector_identifier_uri().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sector_identifier_uri());
  }

  // string tos_uri = 30[json_name = "tosUri"];
  if (this->tos_uri().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tos_uri());
  }

  // string client_secret = 32[json_name = "clientSecret"];
  if (this->client_secret().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_secret());
  }

  // string client_id = 33[json_name = "clientId"];
  if (this->client_id().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_id());
  }

  // .google.protobuf.Struct jwks = 14[json_name = "jwks"];
  if (this->has_jwks()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *jwks_);
  }

  // .google.protobuf.Struct metadata = 17[json_name = "metadata"];
  if (this->has_metadata()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *metadata_);
  }

  // bool backchannel_logout_session_required = 3[json_name = "backchannelLogoutSessionRequired"];
  if (this->backchannel_logout_session_required() != 0) {
    total_size += 1 + 1;
  }

  // bool frontchannel_logout_session_required = 11[json_name = "frontchannelLogoutSessionRequired"];
  if (this->frontchannel_logout_session_required() != 0) {
    total_size += 1 + 1;
  }

  // .depot.devtools.auth.v0.identity.admin.RequestObjectSigningAlg request_object_signing_alg = 22[json_name = "requestObjectSigningAlg"];
  if (this->request_object_signing_alg() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_request_object_signing_alg());
  }

  // .depot.devtools.auth.v0.identity.admin.SubjectType subject_type = 27[json_name = "subjectType"];
  if (this->subject_type() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_subject_type());
  }

  // .depot.devtools.auth.v0.identity.admin.TokenEndpointAuthMethod token_endpoint_auth_method = 28[json_name = "tokenEndpointAuthMethod"];
  if (this->token_endpoint_auth_method() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_token_endpoint_auth_method());
  }

  // .depot.devtools.auth.v0.identity.admin.TokenEndpointAuthSigningAlg token_endpoint_auth_signing_alg = 29[json_name = "tokenEndpointAuthSigningAlg"];
  if (this->token_endpoint_auth_signing_alg() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_token_endpoint_auth_signing_alg());
  }

  // .depot.devtools.auth.v0.identity.admin.UserinfoSignedResponseAlg userinfo_signed_response_alg = 31[json_name = "userinfoSignedResponseAlg"];
  if (this->userinfo_signed_response_alg() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_userinfo_signed_response_alg());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateOAuth2ClientRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateOAuth2ClientRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateOAuth2ClientRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest)
    MergeFrom(*source);
  }
}

void UpdateOAuth2ClientRequest::MergeFrom(const UpdateOAuth2ClientRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  allowed_cors_origins_.MergeFrom(from.allowed_cors_origins_);
  audience_.MergeFrom(from.audience_);
  contacts_.MergeFrom(from.contacts_);
  grant_types_.MergeFrom(from.grant_types_);
  post_logout_redirect_uris_.MergeFrom(from.post_logout_redirect_uris_);
  redirect_uris_.MergeFrom(from.redirect_uris_);
  request_uris_.MergeFrom(from.request_uris_);
  response_types_.MergeFrom(from.response_types_);
  if (from.backchannel_logout_uri().size() > 0) {
    _internal_set_backchannel_logout_uri(from._internal_backchannel_logout_uri());
  }
  if (from.client_name().size() > 0) {
    _internal_set_client_name(from._internal_client_name());
  }
  if (from.client_uri().size() > 0) {
    _internal_set_client_uri(from._internal_client_uri());
  }
  if (from.frontchannel_logout_uri().size() > 0) {
    _internal_set_frontchannel_logout_uri(from._internal_frontchannel_logout_uri());
  }
  if (from.jwks_uri().size() > 0) {
    _internal_set_jwks_uri(from._internal_jwks_uri());
  }
  if (from.logo_uri().size() > 0) {
    _internal_set_logo_uri(from._internal_logo_uri());
  }
  if (from.owner().size() > 0) {
    _internal_set_owner(from._internal_owner());
  }
  if (from.policy_uri().size() > 0) {
    _internal_set_policy_uri(from._internal_policy_uri());
  }
  if (from.scope().size() > 0) {
    _internal_set_scope(from._internal_scope());
  }
  if (from.sector_identifier_uri().size() > 0) {
    _internal_set_sector_identifier_uri(from._internal_sector_identifier_uri());
  }
  if (from.tos_uri().size() > 0) {
    _internal_set_tos_uri(from._internal_tos_uri());
  }
  if (from.client_secret().size() > 0) {
    _internal_set_client_secret(from._internal_client_secret());
  }
  if (from.client_id().size() > 0) {
    _internal_set_client_id(from._internal_client_id());
  }
  if (from.has_jwks()) {
    _internal_mutable_jwks()->PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_jwks());
  }
  if (from.has_metadata()) {
    _internal_mutable_metadata()->PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_metadata());
  }
  if (from.backchannel_logout_session_required() != 0) {
    _internal_set_backchannel_logout_session_required(from._internal_backchannel_logout_session_required());
  }
  if (from.frontchannel_logout_session_required() != 0) {
    _internal_set_frontchannel_logout_session_required(from._internal_frontchannel_logout_session_required());
  }
  if (from.request_object_signing_alg() != 0) {
    _internal_set_request_object_signing_alg(from._internal_request_object_signing_alg());
  }
  if (from.subject_type() != 0) {
    _internal_set_subject_type(from._internal_subject_type());
  }
  if (from.token_endpoint_auth_method() != 0) {
    _internal_set_token_endpoint_auth_method(from._internal_token_endpoint_auth_method());
  }
  if (from.token_endpoint_auth_signing_alg() != 0) {
    _internal_set_token_endpoint_auth_signing_alg(from._internal_token_endpoint_auth_signing_alg());
  }
  if (from.userinfo_signed_response_alg() != 0) {
    _internal_set_userinfo_signed_response_alg(from._internal_userinfo_signed_response_alg());
  }
}

void UpdateOAuth2ClientRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateOAuth2ClientRequest::CopyFrom(const UpdateOAuth2ClientRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateOAuth2ClientRequest::IsInitialized() const {
  return true;
}

void UpdateOAuth2ClientRequest::InternalSwap(UpdateOAuth2ClientRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  allowed_cors_origins_.InternalSwap(&other->allowed_cors_origins_);
  audience_.InternalSwap(&other->audience_);
  contacts_.InternalSwap(&other->contacts_);
  grant_types_.InternalSwap(&other->grant_types_);
  post_logout_redirect_uris_.InternalSwap(&other->post_logout_redirect_uris_);
  redirect_uris_.InternalSwap(&other->redirect_uris_);
  request_uris_.InternalSwap(&other->request_uris_);
  response_types_.InternalSwap(&other->response_types_);
  backchannel_logout_uri_.Swap(&other->backchannel_logout_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  client_name_.Swap(&other->client_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  client_uri_.Swap(&other->client_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  frontchannel_logout_uri_.Swap(&other->frontchannel_logout_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  jwks_uri_.Swap(&other->jwks_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  logo_uri_.Swap(&other->logo_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  owner_.Swap(&other->owner_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  policy_uri_.Swap(&other->policy_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  scope_.Swap(&other->scope_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sector_identifier_uri_.Swap(&other->sector_identifier_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  tos_uri_.Swap(&other->tos_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  client_secret_.Swap(&other->client_secret_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  client_id_.Swap(&other->client_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateOAuth2ClientRequest, userinfo_signed_response_alg_)
      + sizeof(UpdateOAuth2ClientRequest::userinfo_signed_response_alg_)
      - PROTOBUF_FIELD_OFFSET(UpdateOAuth2ClientRequest, jwks_)>(
          reinterpret_cast<char*>(&jwks_),
          reinterpret_cast<char*>(&other->jwks_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateOAuth2ClientRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateOAuth2ClientResponse::InitAsDefaultInstance() {
}
class UpdateOAuth2ClientResponse::_Internal {
 public:
};

UpdateOAuth2ClientResponse::UpdateOAuth2ClientResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientResponse)
}
UpdateOAuth2ClientResponse::UpdateOAuth2ClientResponse(const UpdateOAuth2ClientResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  client_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_client_id().empty()) {
    client_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_client_id(),
      GetArena());
  }
  client_secret_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_client_secret().empty()) {
    client_secret_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_client_secret(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientResponse)
}

void UpdateOAuth2ClientResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateOAuth2ClientResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  client_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_secret_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UpdateOAuth2ClientResponse::~UpdateOAuth2ClientResponse() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateOAuth2ClientResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  client_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_secret_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpdateOAuth2ClientResponse::ArenaDtor(void* object) {
  UpdateOAuth2ClientResponse* _this = reinterpret_cast< UpdateOAuth2ClientResponse* >(object);
  (void)_this;
}
void UpdateOAuth2ClientResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateOAuth2ClientResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateOAuth2ClientResponse& UpdateOAuth2ClientResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateOAuth2ClientResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void UpdateOAuth2ClientResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  client_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  client_secret_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateOAuth2ClientResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string client_id = 1[json_name = "clientId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_client_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientResponse.client_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string client_secret = 2[json_name = "clientSecret"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_client_secret();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientResponse.client_secret"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateOAuth2ClientResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string client_id = 1[json_name = "clientId"];
  if (this->client_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_id().data(), static_cast<int>(this->_internal_client_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientResponse.client_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_client_id(), target);
  }

  // string client_secret = 2[json_name = "clientSecret"];
  if (this->client_secret().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_secret().data(), static_cast<int>(this->_internal_client_secret().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientResponse.client_secret");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_client_secret(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientResponse)
  return target;
}

size_t UpdateOAuth2ClientResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string client_id = 1[json_name = "clientId"];
  if (this->client_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_id());
  }

  // string client_secret = 2[json_name = "clientSecret"];
  if (this->client_secret().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_secret());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateOAuth2ClientResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateOAuth2ClientResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateOAuth2ClientResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientResponse)
    MergeFrom(*source);
  }
}

void UpdateOAuth2ClientResponse::MergeFrom(const UpdateOAuth2ClientResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.client_id().size() > 0) {
    _internal_set_client_id(from._internal_client_id());
  }
  if (from.client_secret().size() > 0) {
    _internal_set_client_secret(from._internal_client_secret());
  }
}

void UpdateOAuth2ClientResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateOAuth2ClientResponse::CopyFrom(const UpdateOAuth2ClientResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateOAuth2ClientResponse::IsInitialized() const {
  return true;
}

void UpdateOAuth2ClientResponse::InternalSwap(UpdateOAuth2ClientResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  client_id_.Swap(&other->client_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  client_secret_.Swap(&other->client_secret_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateOAuth2ClientResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteOAuth2ClientRequest::InitAsDefaultInstance() {
}
class DeleteOAuth2ClientRequest::_Internal {
 public:
};

DeleteOAuth2ClientRequest::DeleteOAuth2ClientRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.DeleteOAuth2ClientRequest)
}
DeleteOAuth2ClientRequest::DeleteOAuth2ClientRequest(const DeleteOAuth2ClientRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  client_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_client_id().empty()) {
    client_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_client_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.DeleteOAuth2ClientRequest)
}

void DeleteOAuth2ClientRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteOAuth2ClientRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  client_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteOAuth2ClientRequest::~DeleteOAuth2ClientRequest() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.DeleteOAuth2ClientRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteOAuth2ClientRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  client_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteOAuth2ClientRequest::ArenaDtor(void* object) {
  DeleteOAuth2ClientRequest* _this = reinterpret_cast< DeleteOAuth2ClientRequest* >(object);
  (void)_this;
}
void DeleteOAuth2ClientRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteOAuth2ClientRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteOAuth2ClientRequest& DeleteOAuth2ClientRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteOAuth2ClientRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void DeleteOAuth2ClientRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.DeleteOAuth2ClientRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  client_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteOAuth2ClientRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string client_id = 1[json_name = "clientId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_client_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.DeleteOAuth2ClientRequest.client_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteOAuth2ClientRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.DeleteOAuth2ClientRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string client_id = 1[json_name = "clientId"];
  if (this->client_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_id().data(), static_cast<int>(this->_internal_client_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.DeleteOAuth2ClientRequest.client_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_client_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.DeleteOAuth2ClientRequest)
  return target;
}

size_t DeleteOAuth2ClientRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.DeleteOAuth2ClientRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string client_id = 1[json_name = "clientId"];
  if (this->client_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteOAuth2ClientRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.DeleteOAuth2ClientRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteOAuth2ClientRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteOAuth2ClientRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.DeleteOAuth2ClientRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.DeleteOAuth2ClientRequest)
    MergeFrom(*source);
  }
}

void DeleteOAuth2ClientRequest::MergeFrom(const DeleteOAuth2ClientRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.DeleteOAuth2ClientRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.client_id().size() > 0) {
    _internal_set_client_id(from._internal_client_id());
  }
}

void DeleteOAuth2ClientRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.DeleteOAuth2ClientRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteOAuth2ClientRequest::CopyFrom(const DeleteOAuth2ClientRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.DeleteOAuth2ClientRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteOAuth2ClientRequest::IsInitialized() const {
  return true;
}

void DeleteOAuth2ClientRequest::InternalSwap(DeleteOAuth2ClientRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  client_id_.Swap(&other->client_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteOAuth2ClientRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteOAuth2ClientResponse::InitAsDefaultInstance() {
}
class DeleteOAuth2ClientResponse::_Internal {
 public:
};

DeleteOAuth2ClientResponse::DeleteOAuth2ClientResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.DeleteOAuth2ClientResponse)
}
DeleteOAuth2ClientResponse::DeleteOAuth2ClientResponse(const DeleteOAuth2ClientResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.DeleteOAuth2ClientResponse)
}

void DeleteOAuth2ClientResponse::SharedCtor() {
}

DeleteOAuth2ClientResponse::~DeleteOAuth2ClientResponse() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.DeleteOAuth2ClientResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteOAuth2ClientResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteOAuth2ClientResponse::ArenaDtor(void* object) {
  DeleteOAuth2ClientResponse* _this = reinterpret_cast< DeleteOAuth2ClientResponse* >(object);
  (void)_this;
}
void DeleteOAuth2ClientResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteOAuth2ClientResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteOAuth2ClientResponse& DeleteOAuth2ClientResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteOAuth2ClientResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void DeleteOAuth2ClientResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.DeleteOAuth2ClientResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteOAuth2ClientResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteOAuth2ClientResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.DeleteOAuth2ClientResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.DeleteOAuth2ClientResponse)
  return target;
}

size_t DeleteOAuth2ClientResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.DeleteOAuth2ClientResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteOAuth2ClientResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.DeleteOAuth2ClientResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteOAuth2ClientResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteOAuth2ClientResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.DeleteOAuth2ClientResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.DeleteOAuth2ClientResponse)
    MergeFrom(*source);
  }
}

void DeleteOAuth2ClientResponse::MergeFrom(const DeleteOAuth2ClientResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.DeleteOAuth2ClientResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteOAuth2ClientResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.DeleteOAuth2ClientResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteOAuth2ClientResponse::CopyFrom(const DeleteOAuth2ClientResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.DeleteOAuth2ClientResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteOAuth2ClientResponse::IsInitialized() const {
  return true;
}

void DeleteOAuth2ClientResponse::InternalSwap(DeleteOAuth2ClientResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteOAuth2ClientResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAddressesRequest::InitAsDefaultInstance() {
}
class GetAddressesRequest::_Internal {
 public:
};

GetAddressesRequest::GetAddressesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetAddressesRequest)
}
GetAddressesRequest::GetAddressesRequest(const GetAddressesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  identity_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_identity_id().empty()) {
    identity_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_identity_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetAddressesRequest)
}

void GetAddressesRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetAddressesRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  identity_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetAddressesRequest::~GetAddressesRequest() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetAddressesRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetAddressesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  identity_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetAddressesRequest::ArenaDtor(void* object) {
  GetAddressesRequest* _this = reinterpret_cast< GetAddressesRequest* >(object);
  (void)_this;
}
void GetAddressesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetAddressesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAddressesRequest& GetAddressesRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAddressesRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetAddressesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetAddressesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  identity_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAddressesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string identity_id = 1[json_name = "identityId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_identity_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetAddressesRequest.identity_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAddressesRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetAddressesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string identity_id = 1[json_name = "identityId"];
  if (this->identity_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_identity_id().data(), static_cast<int>(this->_internal_identity_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetAddressesRequest.identity_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_identity_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetAddressesRequest)
  return target;
}

size_t GetAddressesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetAddressesRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string identity_id = 1[json_name = "identityId"];
  if (this->identity_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_identity_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAddressesRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetAddressesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAddressesRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAddressesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetAddressesRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetAddressesRequest)
    MergeFrom(*source);
  }
}

void GetAddressesRequest::MergeFrom(const GetAddressesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetAddressesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.identity_id().size() > 0) {
    _internal_set_identity_id(from._internal_identity_id());
  }
}

void GetAddressesRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetAddressesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAddressesRequest::CopyFrom(const GetAddressesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetAddressesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAddressesRequest::IsInitialized() const {
  return true;
}

void GetAddressesRequest::InternalSwap(GetAddressesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  identity_id_.Swap(&other->identity_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAddressesRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAddressesResponse_Address::InitAsDefaultInstance() {
}
class GetAddressesResponse_Address::_Internal {
 public:
};

GetAddressesResponse_Address::GetAddressesResponse_Address(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetAddressesResponse.Address)
}
GetAddressesResponse_Address::GetAddressesResponse_Address(const GetAddressesResponse_Address& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  identity_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_identity_id().empty()) {
    identity_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_identity_id(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_address().empty()) {
    address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_address(),
      GetArena());
  }
  id_schema_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id_schema_key().empty()) {
    id_schema_key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id_schema_key(),
      GetArena());
  }
  verified_ = from.verified_;
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetAddressesResponse.Address)
}

void GetAddressesResponse_Address::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetAddressesResponse_Address_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  identity_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_schema_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  verified_ = false;
}

GetAddressesResponse_Address::~GetAddressesResponse_Address() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetAddressesResponse.Address)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetAddressesResponse_Address::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  identity_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_schema_key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetAddressesResponse_Address::ArenaDtor(void* object) {
  GetAddressesResponse_Address* _this = reinterpret_cast< GetAddressesResponse_Address* >(object);
  (void)_this;
}
void GetAddressesResponse_Address::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetAddressesResponse_Address::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAddressesResponse_Address& GetAddressesResponse_Address::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAddressesResponse_Address_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetAddressesResponse_Address::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetAddressesResponse.Address)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  identity_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  address_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  id_schema_key_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  verified_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAddressesResponse_Address::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1[json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetAddressesResponse.Address.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string identity_id = 2[json_name = "identityId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_identity_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetAddressesResponse.Address.identity_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 3[json_name = "name"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetAddressesResponse.Address.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string address = 4[json_name = "address"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetAddressesResponse.Address.address"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool verified = 5[json_name = "verified"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          verified_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string id_schema_key = 6[json_name = "idSchemaKey"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_id_schema_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetAddressesResponse.Address.id_schema_key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAddressesResponse_Address::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetAddressesResponse.Address)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1[json_name = "id"];
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetAddressesResponse.Address.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string identity_id = 2[json_name = "identityId"];
  if (this->identity_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_identity_id().data(), static_cast<int>(this->_internal_identity_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetAddressesResponse.Address.identity_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_identity_id(), target);
  }

  // string name = 3[json_name = "name"];
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetAddressesResponse.Address.name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  // string address = 4[json_name = "address"];
  if (this->address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_address().data(), static_cast<int>(this->_internal_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetAddressesResponse.Address.address");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_address(), target);
  }

  // bool verified = 5[json_name = "verified"];
  if (this->verified() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_verified(), target);
  }

  // string id_schema_key = 6[json_name = "idSchemaKey"];
  if (this->id_schema_key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id_schema_key().data(), static_cast<int>(this->_internal_id_schema_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetAddressesResponse.Address.id_schema_key");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_id_schema_key(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetAddressesResponse.Address)
  return target;
}

size_t GetAddressesResponse_Address::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetAddressesResponse.Address)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1[json_name = "id"];
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string identity_id = 2[json_name = "identityId"];
  if (this->identity_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_identity_id());
  }

  // string name = 3[json_name = "name"];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string address = 4[json_name = "address"];
  if (this->address().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_address());
  }

  // string id_schema_key = 6[json_name = "idSchemaKey"];
  if (this->id_schema_key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id_schema_key());
  }

  // bool verified = 5[json_name = "verified"];
  if (this->verified() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAddressesResponse_Address::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetAddressesResponse.Address)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAddressesResponse_Address* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAddressesResponse_Address>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetAddressesResponse.Address)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetAddressesResponse.Address)
    MergeFrom(*source);
  }
}

void GetAddressesResponse_Address::MergeFrom(const GetAddressesResponse_Address& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetAddressesResponse.Address)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.identity_id().size() > 0) {
    _internal_set_identity_id(from._internal_identity_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.address().size() > 0) {
    _internal_set_address(from._internal_address());
  }
  if (from.id_schema_key().size() > 0) {
    _internal_set_id_schema_key(from._internal_id_schema_key());
  }
  if (from.verified() != 0) {
    _internal_set_verified(from._internal_verified());
  }
}

void GetAddressesResponse_Address::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetAddressesResponse.Address)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAddressesResponse_Address::CopyFrom(const GetAddressesResponse_Address& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetAddressesResponse.Address)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAddressesResponse_Address::IsInitialized() const {
  return true;
}

void GetAddressesResponse_Address::InternalSwap(GetAddressesResponse_Address* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  identity_id_.Swap(&other->identity_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  address_.Swap(&other->address_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  id_schema_key_.Swap(&other->id_schema_key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(verified_, other->verified_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAddressesResponse_Address::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAddressesResponse::InitAsDefaultInstance() {
}
class GetAddressesResponse::_Internal {
 public:
};

GetAddressesResponse::GetAddressesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  addresses_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetAddressesResponse)
}
GetAddressesResponse::GetAddressesResponse(const GetAddressesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      addresses_(from.addresses_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetAddressesResponse)
}

void GetAddressesResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetAddressesResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
}

GetAddressesResponse::~GetAddressesResponse() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetAddressesResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetAddressesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetAddressesResponse::ArenaDtor(void* object) {
  GetAddressesResponse* _this = reinterpret_cast< GetAddressesResponse* >(object);
  (void)_this;
}
void GetAddressesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetAddressesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAddressesResponse& GetAddressesResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAddressesResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetAddressesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetAddressesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  addresses_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAddressesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .depot.devtools.auth.v0.identity.admin.GetAddressesResponse.Address addresses = 1[json_name = "addresses"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_addresses(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAddressesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetAddressesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .depot.devtools.auth.v0.identity.admin.GetAddressesResponse.Address addresses = 1[json_name = "addresses"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_addresses_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_addresses(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetAddressesResponse)
  return target;
}

size_t GetAddressesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetAddressesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .depot.devtools.auth.v0.identity.admin.GetAddressesResponse.Address addresses = 1[json_name = "addresses"];
  total_size += 1UL * this->_internal_addresses_size();
  for (const auto& msg : this->addresses_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAddressesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetAddressesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAddressesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAddressesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetAddressesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetAddressesResponse)
    MergeFrom(*source);
  }
}

void GetAddressesResponse::MergeFrom(const GetAddressesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetAddressesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  addresses_.MergeFrom(from.addresses_);
}

void GetAddressesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetAddressesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAddressesResponse::CopyFrom(const GetAddressesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetAddressesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAddressesResponse::IsInitialized() const {
  return true;
}

void GetAddressesResponse::InternalSwap(GetAddressesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  addresses_.InternalSwap(&other->addresses_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAddressesResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAddressRequest::InitAsDefaultInstance() {
  ::depot::devtools::auth::v0::identity::admin::_GetAddressRequest_default_instance_.id_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::depot::devtools::auth::v0::identity::admin::_GetAddressRequest_default_instance_.verification_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
class GetAddressRequest::_Internal {
 public:
};

GetAddressRequest::GetAddressRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetAddressRequest)
}
GetAddressRequest::GetAddressRequest(const GetAddressRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_match();
  switch (from.match_case()) {
    case kId: {
      _internal_set_id(from._internal_id());
      break;
    }
    case kVerification: {
      _internal_set_verification(from._internal_verification());
      break;
    }
    case MATCH_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetAddressRequest)
}

void GetAddressRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetAddressRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  clear_has_match();
}

GetAddressRequest::~GetAddressRequest() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetAddressRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetAddressRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_match()) {
    clear_match();
  }
}

void GetAddressRequest::ArenaDtor(void* object) {
  GetAddressRequest* _this = reinterpret_cast< GetAddressRequest* >(object);
  (void)_this;
}
void GetAddressRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetAddressRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAddressRequest& GetAddressRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAddressRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetAddressRequest::clear_match() {
// @@protoc_insertion_point(one_of_clear_start:depot.devtools.auth.v0.identity.admin.GetAddressRequest)
  switch (match_case()) {
    case kId: {
      match_.id_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case kVerification: {
      match_.verification_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case MATCH_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MATCH_NOT_SET;
}


void GetAddressRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetAddressRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_match();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAddressRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1[json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetAddressRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string verification = 2[json_name = "verification"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_verification();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetAddressRequest.verification"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAddressRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetAddressRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1[json_name = "id"];
  if (_internal_has_id()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetAddressRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string verification = 2[json_name = "verification"];
  if (_internal_has_verification()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_verification().data(), static_cast<int>(this->_internal_verification().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetAddressRequest.verification");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_verification(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetAddressRequest)
  return target;
}

size_t GetAddressRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetAddressRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (match_case()) {
    // string id = 1[json_name = "id"];
    case kId: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_id());
      break;
    }
    // string verification = 2[json_name = "verification"];
    case kVerification: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_verification());
      break;
    }
    case MATCH_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAddressRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetAddressRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAddressRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAddressRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetAddressRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetAddressRequest)
    MergeFrom(*source);
  }
}

void GetAddressRequest::MergeFrom(const GetAddressRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetAddressRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.match_case()) {
    case kId: {
      _internal_set_id(from._internal_id());
      break;
    }
    case kVerification: {
      _internal_set_verification(from._internal_verification());
      break;
    }
    case MATCH_NOT_SET: {
      break;
    }
  }
}

void GetAddressRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetAddressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAddressRequest::CopyFrom(const GetAddressRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetAddressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAddressRequest::IsInitialized() const {
  return true;
}

void GetAddressRequest::InternalSwap(GetAddressRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(match_, other->match_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAddressRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAddressResponse::InitAsDefaultInstance() {
}
class GetAddressResponse::_Internal {
 public:
};

GetAddressResponse::GetAddressResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetAddressResponse)
}
GetAddressResponse::GetAddressResponse(const GetAddressResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  identity_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_identity_id().empty()) {
    identity_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_identity_id(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_address().empty()) {
    address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_address(),
      GetArena());
  }
  id_schema_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id_schema_key().empty()) {
    id_schema_key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id_schema_key(),
      GetArena());
  }
  verified_ = from.verified_;
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetAddressResponse)
}

void GetAddressResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetAddressResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  identity_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_schema_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  verified_ = false;
}

GetAddressResponse::~GetAddressResponse() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetAddressResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetAddressResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  identity_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_schema_key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetAddressResponse::ArenaDtor(void* object) {
  GetAddressResponse* _this = reinterpret_cast< GetAddressResponse* >(object);
  (void)_this;
}
void GetAddressResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetAddressResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAddressResponse& GetAddressResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAddressResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetAddressResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetAddressResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  identity_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  address_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  id_schema_key_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  verified_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAddressResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1[json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetAddressResponse.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string identity_id = 2[json_name = "identityId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_identity_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetAddressResponse.identity_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 3[json_name = "name"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetAddressResponse.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string address = 4[json_name = "address"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetAddressResponse.address"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool verified = 5[json_name = "verified"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          verified_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string id_schema_key = 6[json_name = "idSchemaKey"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_id_schema_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetAddressResponse.id_schema_key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAddressResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetAddressResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1[json_name = "id"];
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetAddressResponse.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string identity_id = 2[json_name = "identityId"];
  if (this->identity_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_identity_id().data(), static_cast<int>(this->_internal_identity_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetAddressResponse.identity_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_identity_id(), target);
  }

  // string name = 3[json_name = "name"];
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetAddressResponse.name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  // string address = 4[json_name = "address"];
  if (this->address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_address().data(), static_cast<int>(this->_internal_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetAddressResponse.address");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_address(), target);
  }

  // bool verified = 5[json_name = "verified"];
  if (this->verified() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_verified(), target);
  }

  // string id_schema_key = 6[json_name = "idSchemaKey"];
  if (this->id_schema_key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id_schema_key().data(), static_cast<int>(this->_internal_id_schema_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetAddressResponse.id_schema_key");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_id_schema_key(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetAddressResponse)
  return target;
}

size_t GetAddressResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetAddressResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1[json_name = "id"];
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string identity_id = 2[json_name = "identityId"];
  if (this->identity_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_identity_id());
  }

  // string name = 3[json_name = "name"];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string address = 4[json_name = "address"];
  if (this->address().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_address());
  }

  // string id_schema_key = 6[json_name = "idSchemaKey"];
  if (this->id_schema_key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id_schema_key());
  }

  // bool verified = 5[json_name = "verified"];
  if (this->verified() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAddressResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetAddressResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAddressResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAddressResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetAddressResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetAddressResponse)
    MergeFrom(*source);
  }
}

void GetAddressResponse::MergeFrom(const GetAddressResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetAddressResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.identity_id().size() > 0) {
    _internal_set_identity_id(from._internal_identity_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.address().size() > 0) {
    _internal_set_address(from._internal_address());
  }
  if (from.id_schema_key().size() > 0) {
    _internal_set_id_schema_key(from._internal_id_schema_key());
  }
  if (from.verified() != 0) {
    _internal_set_verified(from._internal_verified());
  }
}

void GetAddressResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAddressResponse::CopyFrom(const GetAddressResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAddressResponse::IsInitialized() const {
  return true;
}

void GetAddressResponse::InternalSwap(GetAddressResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  identity_id_.Swap(&other->identity_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  address_.Swap(&other->address_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  id_schema_key_.Swap(&other->id_schema_key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(verified_, other->verified_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAddressResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateAddressRequest::InitAsDefaultInstance() {
  ::depot::devtools::auth::v0::identity::admin::_UpdateAddressRequest_default_instance_.verified_ = false;
  ::depot::devtools::auth::v0::identity::admin::_UpdateAddressRequest_default_instance_.address_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
class UpdateAddressRequest::_Internal {
 public:
};

UpdateAddressRequest::UpdateAddressRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.UpdateAddressRequest)
}
UpdateAddressRequest::UpdateAddressRequest(const UpdateAddressRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  clear_has_attribute();
  switch (from.attribute_case()) {
    case kVerified: {
      _internal_set_verified(from._internal_verified());
      break;
    }
    case kAddress: {
      _internal_set_address(from._internal_address());
      break;
    }
    case ATTRIBUTE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.UpdateAddressRequest)
}

void UpdateAddressRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateAddressRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clear_has_attribute();
}

UpdateAddressRequest::~UpdateAddressRequest() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.UpdateAddressRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateAddressRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (has_attribute()) {
    clear_attribute();
  }
}

void UpdateAddressRequest::ArenaDtor(void* object) {
  UpdateAddressRequest* _this = reinterpret_cast< UpdateAddressRequest* >(object);
  (void)_this;
}
void UpdateAddressRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateAddressRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateAddressRequest& UpdateAddressRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateAddressRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void UpdateAddressRequest::clear_attribute() {
// @@protoc_insertion_point(one_of_clear_start:depot.devtools.auth.v0.identity.admin.UpdateAddressRequest)
  switch (attribute_case()) {
    case kVerified: {
      // No need to clear
      break;
    }
    case kAddress: {
      attribute_.address_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case ATTRIBUTE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ATTRIBUTE_NOT_SET;
}


void UpdateAddressRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.UpdateAddressRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  clear_attribute();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateAddressRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1[json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateAddressRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool verified = 2[json_name = "verified"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _internal_set_verified(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string address = 3[json_name = "address"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateAddressRequest.address"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateAddressRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.UpdateAddressRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1[json_name = "id"];
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateAddressRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // bool verified = 2[json_name = "verified"];
  if (_internal_has_verified()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_verified(), target);
  }

  // string address = 3[json_name = "address"];
  if (_internal_has_address()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_address().data(), static_cast<int>(this->_internal_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateAddressRequest.address");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_address(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.UpdateAddressRequest)
  return target;
}

size_t UpdateAddressRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.UpdateAddressRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1[json_name = "id"];
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  switch (attribute_case()) {
    // bool verified = 2[json_name = "verified"];
    case kVerified: {
      total_size += 1 + 1;
      break;
    }
    // string address = 3[json_name = "address"];
    case kAddress: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_address());
      break;
    }
    case ATTRIBUTE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateAddressRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.UpdateAddressRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateAddressRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateAddressRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.UpdateAddressRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.UpdateAddressRequest)
    MergeFrom(*source);
  }
}

void UpdateAddressRequest::MergeFrom(const UpdateAddressRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.UpdateAddressRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  switch (from.attribute_case()) {
    case kVerified: {
      _internal_set_verified(from._internal_verified());
      break;
    }
    case kAddress: {
      _internal_set_address(from._internal_address());
      break;
    }
    case ATTRIBUTE_NOT_SET: {
      break;
    }
  }
}

void UpdateAddressRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.UpdateAddressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateAddressRequest::CopyFrom(const UpdateAddressRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.UpdateAddressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateAddressRequest::IsInitialized() const {
  return true;
}

void UpdateAddressRequest::InternalSwap(UpdateAddressRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(attribute_, other->attribute_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateAddressRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateAddressResponse::InitAsDefaultInstance() {
}
class UpdateAddressResponse::_Internal {
 public:
};

UpdateAddressResponse::UpdateAddressResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.UpdateAddressResponse)
}
UpdateAddressResponse::UpdateAddressResponse(const UpdateAddressResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.UpdateAddressResponse)
}

void UpdateAddressResponse::SharedCtor() {
}

UpdateAddressResponse::~UpdateAddressResponse() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.UpdateAddressResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateAddressResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UpdateAddressResponse::ArenaDtor(void* object) {
  UpdateAddressResponse* _this = reinterpret_cast< UpdateAddressResponse* >(object);
  (void)_this;
}
void UpdateAddressResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateAddressResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateAddressResponse& UpdateAddressResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateAddressResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void UpdateAddressResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.UpdateAddressResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateAddressResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateAddressResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.UpdateAddressResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.UpdateAddressResponse)
  return target;
}

size_t UpdateAddressResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.UpdateAddressResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateAddressResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.UpdateAddressResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateAddressResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateAddressResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.UpdateAddressResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.UpdateAddressResponse)
    MergeFrom(*source);
  }
}

void UpdateAddressResponse::MergeFrom(const UpdateAddressResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.UpdateAddressResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UpdateAddressResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.UpdateAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateAddressResponse::CopyFrom(const UpdateAddressResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.UpdateAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateAddressResponse::IsInitialized() const {
  return true;
}

void UpdateAddressResponse::InternalSwap(UpdateAddressResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateAddressResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetProfileRequest::InitAsDefaultInstance() {
}
class GetProfileRequest::_Internal {
 public:
};

GetProfileRequest::GetProfileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetProfileRequest)
}
GetProfileRequest::GetProfileRequest(const GetProfileRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  identity_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_identity_id().empty()) {
    identity_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_identity_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetProfileRequest)
}

void GetProfileRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetProfileRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  identity_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetProfileRequest::~GetProfileRequest() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetProfileRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetProfileRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  identity_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetProfileRequest::ArenaDtor(void* object) {
  GetProfileRequest* _this = reinterpret_cast< GetProfileRequest* >(object);
  (void)_this;
}
void GetProfileRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetProfileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetProfileRequest& GetProfileRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetProfileRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetProfileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetProfileRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  identity_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetProfileRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string identity_id = 1[json_name = "identityId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_identity_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetProfileRequest.identity_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetProfileRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetProfileRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string identity_id = 1[json_name = "identityId"];
  if (this->identity_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_identity_id().data(), static_cast<int>(this->_internal_identity_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetProfileRequest.identity_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_identity_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetProfileRequest)
  return target;
}

size_t GetProfileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetProfileRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string identity_id = 1[json_name = "identityId"];
  if (this->identity_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_identity_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetProfileRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetProfileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetProfileRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetProfileRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetProfileRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetProfileRequest)
    MergeFrom(*source);
  }
}

void GetProfileRequest::MergeFrom(const GetProfileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetProfileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.identity_id().size() > 0) {
    _internal_set_identity_id(from._internal_identity_id());
  }
}

void GetProfileRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetProfileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetProfileRequest::CopyFrom(const GetProfileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetProfileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetProfileRequest::IsInitialized() const {
  return true;
}

void GetProfileRequest::InternalSwap(GetProfileRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  identity_id_.Swap(&other->identity_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetProfileRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetProfileResponse::InitAsDefaultInstance() {
}
class GetProfileResponse::_Internal {
 public:
};

GetProfileResponse::GetProfileResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetProfileResponse)
}
GetProfileResponse::GetProfileResponse(const GetProfileResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  profile_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_profile().empty()) {
    profile_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_profile(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetProfileResponse)
}

void GetProfileResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetProfileResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  profile_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetProfileResponse::~GetProfileResponse() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetProfileResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetProfileResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  profile_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetProfileResponse::ArenaDtor(void* object) {
  GetProfileResponse* _this = reinterpret_cast< GetProfileResponse* >(object);
  (void)_this;
}
void GetProfileResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetProfileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetProfileResponse& GetProfileResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetProfileResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetProfileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetProfileResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  profile_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetProfileResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string profile = 1[json_name = "profile"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_profile();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetProfileResponse.profile"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetProfileResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetProfileResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string profile = 1[json_name = "profile"];
  if (this->profile().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_profile().data(), static_cast<int>(this->_internal_profile().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetProfileResponse.profile");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_profile(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetProfileResponse)
  return target;
}

size_t GetProfileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetProfileResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string profile = 1[json_name = "profile"];
  if (this->profile().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_profile());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetProfileResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetProfileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetProfileResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetProfileResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetProfileResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetProfileResponse)
    MergeFrom(*source);
  }
}

void GetProfileResponse::MergeFrom(const GetProfileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetProfileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.profile().size() > 0) {
    _internal_set_profile(from._internal_profile());
  }
}

void GetProfileResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetProfileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetProfileResponse::CopyFrom(const GetProfileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetProfileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetProfileResponse::IsInitialized() const {
  return true;
}

void GetProfileResponse::InternalSwap(GetProfileResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  profile_.Swap(&other->profile_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetProfileResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateProfileRequest::InitAsDefaultInstance() {
}
class UpdateProfileRequest::_Internal {
 public:
};

UpdateProfileRequest::UpdateProfileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.UpdateProfileRequest)
}
UpdateProfileRequest::UpdateProfileRequest(const UpdateProfileRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  identity_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_identity_id().empty()) {
    identity_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_identity_id(),
      GetArena());
  }
  profile_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_profile().empty()) {
    profile_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_profile(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.UpdateProfileRequest)
}

void UpdateProfileRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateProfileRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  identity_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  profile_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UpdateProfileRequest::~UpdateProfileRequest() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.UpdateProfileRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateProfileRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  identity_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  profile_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpdateProfileRequest::ArenaDtor(void* object) {
  UpdateProfileRequest* _this = reinterpret_cast< UpdateProfileRequest* >(object);
  (void)_this;
}
void UpdateProfileRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateProfileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateProfileRequest& UpdateProfileRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateProfileRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void UpdateProfileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.UpdateProfileRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  identity_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  profile_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateProfileRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string identity_id = 1[json_name = "identityId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_identity_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateProfileRequest.identity_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string profile = 2[json_name = "profile"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_profile();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateProfileRequest.profile"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateProfileRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.UpdateProfileRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string identity_id = 1[json_name = "identityId"];
  if (this->identity_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_identity_id().data(), static_cast<int>(this->_internal_identity_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateProfileRequest.identity_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_identity_id(), target);
  }

  // string profile = 2[json_name = "profile"];
  if (this->profile().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_profile().data(), static_cast<int>(this->_internal_profile().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateProfileRequest.profile");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_profile(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.UpdateProfileRequest)
  return target;
}

size_t UpdateProfileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.UpdateProfileRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string identity_id = 1[json_name = "identityId"];
  if (this->identity_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_identity_id());
  }

  // string profile = 2[json_name = "profile"];
  if (this->profile().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_profile());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateProfileRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.UpdateProfileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateProfileRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateProfileRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.UpdateProfileRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.UpdateProfileRequest)
    MergeFrom(*source);
  }
}

void UpdateProfileRequest::MergeFrom(const UpdateProfileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.UpdateProfileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.identity_id().size() > 0) {
    _internal_set_identity_id(from._internal_identity_id());
  }
  if (from.profile().size() > 0) {
    _internal_set_profile(from._internal_profile());
  }
}

void UpdateProfileRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.UpdateProfileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateProfileRequest::CopyFrom(const UpdateProfileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.UpdateProfileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateProfileRequest::IsInitialized() const {
  return true;
}

void UpdateProfileRequest::InternalSwap(UpdateProfileRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  identity_id_.Swap(&other->identity_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  profile_.Swap(&other->profile_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateProfileRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateProfileResponse::InitAsDefaultInstance() {
}
class UpdateProfileResponse::_Internal {
 public:
};

UpdateProfileResponse::UpdateProfileResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.UpdateProfileResponse)
}
UpdateProfileResponse::UpdateProfileResponse(const UpdateProfileResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.UpdateProfileResponse)
}

void UpdateProfileResponse::SharedCtor() {
}

UpdateProfileResponse::~UpdateProfileResponse() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.UpdateProfileResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateProfileResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UpdateProfileResponse::ArenaDtor(void* object) {
  UpdateProfileResponse* _this = reinterpret_cast< UpdateProfileResponse* >(object);
  (void)_this;
}
void UpdateProfileResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateProfileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateProfileResponse& UpdateProfileResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateProfileResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void UpdateProfileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.UpdateProfileResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateProfileResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateProfileResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.UpdateProfileResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.UpdateProfileResponse)
  return target;
}

size_t UpdateProfileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.UpdateProfileResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateProfileResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.UpdateProfileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateProfileResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateProfileResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.UpdateProfileResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.UpdateProfileResponse)
    MergeFrom(*source);
  }
}

void UpdateProfileResponse::MergeFrom(const UpdateProfileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.UpdateProfileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UpdateProfileResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.UpdateProfileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateProfileResponse::CopyFrom(const UpdateProfileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.UpdateProfileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateProfileResponse::IsInitialized() const {
  return true;
}

void UpdateProfileResponse::InternalSwap(UpdateProfileResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateProfileResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetIdentityLoginAttemptsRequest::InitAsDefaultInstance() {
}
class GetIdentityLoginAttemptsRequest::_Internal {
 public:
};

GetIdentityLoginAttemptsRequest::GetIdentityLoginAttemptsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsRequest)
}
GetIdentityLoginAttemptsRequest::GetIdentityLoginAttemptsRequest(const GetIdentityLoginAttemptsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  identity_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_identity_id().empty()) {
    identity_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_identity_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsRequest)
}

void GetIdentityLoginAttemptsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetIdentityLoginAttemptsRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  identity_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetIdentityLoginAttemptsRequest::~GetIdentityLoginAttemptsRequest() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetIdentityLoginAttemptsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  identity_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetIdentityLoginAttemptsRequest::ArenaDtor(void* object) {
  GetIdentityLoginAttemptsRequest* _this = reinterpret_cast< GetIdentityLoginAttemptsRequest* >(object);
  (void)_this;
}
void GetIdentityLoginAttemptsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetIdentityLoginAttemptsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetIdentityLoginAttemptsRequest& GetIdentityLoginAttemptsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetIdentityLoginAttemptsRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetIdentityLoginAttemptsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  identity_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetIdentityLoginAttemptsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string identity_id = 1[json_name = "identityId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_identity_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsRequest.identity_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetIdentityLoginAttemptsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string identity_id = 1[json_name = "identityId"];
  if (this->identity_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_identity_id().data(), static_cast<int>(this->_internal_identity_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsRequest.identity_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_identity_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsRequest)
  return target;
}

size_t GetIdentityLoginAttemptsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string identity_id = 1[json_name = "identityId"];
  if (this->identity_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_identity_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetIdentityLoginAttemptsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetIdentityLoginAttemptsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetIdentityLoginAttemptsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsRequest)
    MergeFrom(*source);
  }
}

void GetIdentityLoginAttemptsRequest::MergeFrom(const GetIdentityLoginAttemptsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.identity_id().size() > 0) {
    _internal_set_identity_id(from._internal_identity_id());
  }
}

void GetIdentityLoginAttemptsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIdentityLoginAttemptsRequest::CopyFrom(const GetIdentityLoginAttemptsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIdentityLoginAttemptsRequest::IsInitialized() const {
  return true;
}

void GetIdentityLoginAttemptsRequest::InternalSwap(GetIdentityLoginAttemptsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  identity_id_.Swap(&other->identity_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetIdentityLoginAttemptsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetIdentityLoginAttemptsResponse_Attempt::InitAsDefaultInstance() {
  ::depot::devtools::auth::v0::identity::admin::_GetIdentityLoginAttemptsResponse_Attempt_default_instance_._instance.get_mutable()->created_at_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::depot::devtools::auth::v0::identity::admin::_GetIdentityLoginAttemptsResponse_Attempt_default_instance_._instance.get_mutable()->expires_at_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
}
class GetIdentityLoginAttemptsResponse_Attempt::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& created_at(const GetIdentityLoginAttemptsResponse_Attempt* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& expires_at(const GetIdentityLoginAttemptsResponse_Attempt* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
GetIdentityLoginAttemptsResponse_Attempt::_Internal::created_at(const GetIdentityLoginAttemptsResponse_Attempt* msg) {
  return *msg->created_at_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
GetIdentityLoginAttemptsResponse_Attempt::_Internal::expires_at(const GetIdentityLoginAttemptsResponse_Attempt* msg) {
  return *msg->expires_at_;
}
void GetIdentityLoginAttemptsResponse_Attempt::clear_created_at() {
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
}
void GetIdentityLoginAttemptsResponse_Attempt::clear_expires_at() {
  if (GetArena() == nullptr && expires_at_ != nullptr) {
    delete expires_at_;
  }
  expires_at_ = nullptr;
}
GetIdentityLoginAttemptsResponse_Attempt::GetIdentityLoginAttemptsResponse_Attempt(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  authentication_methods_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse.Attempt)
}
GetIdentityLoginAttemptsResponse_Attempt::GetIdentityLoginAttemptsResponse_Attempt(const GetIdentityLoginAttemptsResponse_Attempt& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      authentication_methods_(from.authentication_methods_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  identity_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_identity_id().empty()) {
    identity_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_identity_id(),
      GetArena());
  }
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_status(),
      GetArena());
  }
  if (from._internal_has_created_at()) {
    created_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_at_);
  } else {
    created_at_ = nullptr;
  }
  if (from._internal_has_expires_at()) {
    expires_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.expires_at_);
  } else {
    expires_at_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse.Attempt)
}

void GetIdentityLoginAttemptsResponse_Attempt::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetIdentityLoginAttemptsResponse_Attempt_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  identity_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&created_at_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expires_at_) -
      reinterpret_cast<char*>(&created_at_)) + sizeof(expires_at_));
}

GetIdentityLoginAttemptsResponse_Attempt::~GetIdentityLoginAttemptsResponse_Attempt() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse.Attempt)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetIdentityLoginAttemptsResponse_Attempt::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  identity_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete created_at_;
  if (this != internal_default_instance()) delete expires_at_;
}

void GetIdentityLoginAttemptsResponse_Attempt::ArenaDtor(void* object) {
  GetIdentityLoginAttemptsResponse_Attempt* _this = reinterpret_cast< GetIdentityLoginAttemptsResponse_Attempt* >(object);
  (void)_this;
}
void GetIdentityLoginAttemptsResponse_Attempt::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetIdentityLoginAttemptsResponse_Attempt::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetIdentityLoginAttemptsResponse_Attempt& GetIdentityLoginAttemptsResponse_Attempt::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetIdentityLoginAttemptsResponse_Attempt_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetIdentityLoginAttemptsResponse_Attempt::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse.Attempt)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  authentication_methods_.Clear();
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  identity_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  status_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
  if (GetArena() == nullptr && expires_at_ != nullptr) {
    delete expires_at_;
  }
  expires_at_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetIdentityLoginAttemptsResponse_Attempt::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1[json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse.Attempt.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string identity_id = 2[json_name = "identityId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_identity_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse.Attempt.identity_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 3[json_name = "status"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse.Attempt.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string authentication_methods = 4[json_name = "authenticationMethods"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_authentication_methods();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse.Attempt.authentication_methods"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_at = 5[json_name = "createdAt"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp expires_at = 6[json_name = "expiresAt"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_expires_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetIdentityLoginAttemptsResponse_Attempt::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse.Attempt)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1[json_name = "id"];
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse.Attempt.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string identity_id = 2[json_name = "identityId"];
  if (this->identity_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_identity_id().data(), static_cast<int>(this->_internal_identity_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse.Attempt.identity_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_identity_id(), target);
  }

  // string status = 3[json_name = "status"];
  if (this->status().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse.Attempt.status");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_status(), target);
  }

  // repeated string authentication_methods = 4[json_name = "authenticationMethods"];
  for (int i = 0, n = this->_internal_authentication_methods_size(); i < n; i++) {
    const auto& s = this->_internal_authentication_methods(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse.Attempt.authentication_methods");
    target = stream->WriteString(4, s, target);
  }

  // .google.protobuf.Timestamp created_at = 5[json_name = "createdAt"];
  if (this->has_created_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::created_at(this), target, stream);
  }

  // .google.protobuf.Timestamp expires_at = 6[json_name = "expiresAt"];
  if (this->has_expires_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::expires_at(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse.Attempt)
  return target;
}

size_t GetIdentityLoginAttemptsResponse_Attempt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse.Attempt)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string authentication_methods = 4[json_name = "authenticationMethods"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(authentication_methods_.size());
  for (int i = 0, n = authentication_methods_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      authentication_methods_.Get(i));
  }

  // string id = 1[json_name = "id"];
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string identity_id = 2[json_name = "identityId"];
  if (this->identity_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_identity_id());
  }

  // string status = 3[json_name = "status"];
  if (this->status().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // .google.protobuf.Timestamp created_at = 5[json_name = "createdAt"];
  if (this->has_created_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_at_);
  }

  // .google.protobuf.Timestamp expires_at = 6[json_name = "expiresAt"];
  if (this->has_expires_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *expires_at_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetIdentityLoginAttemptsResponse_Attempt::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse.Attempt)
  GOOGLE_DCHECK_NE(&from, this);
  const GetIdentityLoginAttemptsResponse_Attempt* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetIdentityLoginAttemptsResponse_Attempt>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse.Attempt)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse.Attempt)
    MergeFrom(*source);
  }
}

void GetIdentityLoginAttemptsResponse_Attempt::MergeFrom(const GetIdentityLoginAttemptsResponse_Attempt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse.Attempt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  authentication_methods_.MergeFrom(from.authentication_methods_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.identity_id().size() > 0) {
    _internal_set_identity_id(from._internal_identity_id());
  }
  if (from.status().size() > 0) {
    _internal_set_status(from._internal_status());
  }
  if (from.has_created_at()) {
    _internal_mutable_created_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_at());
  }
  if (from.has_expires_at()) {
    _internal_mutable_expires_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_expires_at());
  }
}

void GetIdentityLoginAttemptsResponse_Attempt::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse.Attempt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIdentityLoginAttemptsResponse_Attempt::CopyFrom(const GetIdentityLoginAttemptsResponse_Attempt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse.Attempt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIdentityLoginAttemptsResponse_Attempt::IsInitialized() const {
  return true;
}

void GetIdentityLoginAttemptsResponse_Attempt::InternalSwap(GetIdentityLoginAttemptsResponse_Attempt* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  authentication_methods_.InternalSwap(&other->authentication_methods_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  identity_id_.Swap(&other->identity_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  status_.Swap(&other->status_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetIdentityLoginAttemptsResponse_Attempt, expires_at_)
      + sizeof(GetIdentityLoginAttemptsResponse_Attempt::expires_at_)
      - PROTOBUF_FIELD_OFFSET(GetIdentityLoginAttemptsResponse_Attempt, created_at_)>(
          reinterpret_cast<char*>(&created_at_),
          reinterpret_cast<char*>(&other->created_at_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetIdentityLoginAttemptsResponse_Attempt::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetIdentityLoginAttemptsResponse::InitAsDefaultInstance() {
}
class GetIdentityLoginAttemptsResponse::_Internal {
 public:
};

GetIdentityLoginAttemptsResponse::GetIdentityLoginAttemptsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  attempts_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse)
}
GetIdentityLoginAttemptsResponse::GetIdentityLoginAttemptsResponse(const GetIdentityLoginAttemptsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      attempts_(from.attempts_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse)
}

void GetIdentityLoginAttemptsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetIdentityLoginAttemptsResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
}

GetIdentityLoginAttemptsResponse::~GetIdentityLoginAttemptsResponse() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetIdentityLoginAttemptsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetIdentityLoginAttemptsResponse::ArenaDtor(void* object) {
  GetIdentityLoginAttemptsResponse* _this = reinterpret_cast< GetIdentityLoginAttemptsResponse* >(object);
  (void)_this;
}
void GetIdentityLoginAttemptsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetIdentityLoginAttemptsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetIdentityLoginAttemptsResponse& GetIdentityLoginAttemptsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetIdentityLoginAttemptsResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetIdentityLoginAttemptsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attempts_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetIdentityLoginAttemptsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse.Attempt attempts = 1[json_name = "attempts"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_attempts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetIdentityLoginAttemptsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse.Attempt attempts = 1[json_name = "attempts"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_attempts_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_attempts(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse)
  return target;
}

size_t GetIdentityLoginAttemptsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse.Attempt attempts = 1[json_name = "attempts"];
  total_size += 1UL * this->_internal_attempts_size();
  for (const auto& msg : this->attempts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetIdentityLoginAttemptsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetIdentityLoginAttemptsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetIdentityLoginAttemptsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse)
    MergeFrom(*source);
  }
}

void GetIdentityLoginAttemptsResponse::MergeFrom(const GetIdentityLoginAttemptsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attempts_.MergeFrom(from.attempts_);
}

void GetIdentityLoginAttemptsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIdentityLoginAttemptsResponse::CopyFrom(const GetIdentityLoginAttemptsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIdentityLoginAttemptsResponse::IsInitialized() const {
  return true;
}

void GetIdentityLoginAttemptsResponse::InternalSwap(GetIdentityLoginAttemptsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  attempts_.InternalSwap(&other->attempts_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetIdentityLoginAttemptsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateIdSchemaRequest::InitAsDefaultInstance() {
  ::depot::devtools::auth::v0::identity::admin::_CreateIdSchemaRequest_default_instance_._instance.get_mutable()->content_ = const_cast< PROTOBUF_NAMESPACE_ID::Struct*>(
      PROTOBUF_NAMESPACE_ID::Struct::internal_default_instance());
}
class CreateIdSchemaRequest::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Struct& content(const CreateIdSchemaRequest* msg);
};

const PROTOBUF_NAMESPACE_ID::Struct&
CreateIdSchemaRequest::_Internal::content(const CreateIdSchemaRequest* msg) {
  return *msg->content_;
}
void CreateIdSchemaRequest::clear_content() {
  if (GetArena() == nullptr && content_ != nullptr) {
    delete content_;
  }
  content_ = nullptr;
}
CreateIdSchemaRequest::CreateIdSchemaRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.CreateIdSchemaRequest)
}
CreateIdSchemaRequest::CreateIdSchemaRequest(const CreateIdSchemaRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  if (from._internal_has_content()) {
    content_ = new PROTOBUF_NAMESPACE_ID::Struct(*from.content_);
  } else {
    content_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.CreateIdSchemaRequest)
}

void CreateIdSchemaRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateIdSchemaRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  content_ = nullptr;
}

CreateIdSchemaRequest::~CreateIdSchemaRequest() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.CreateIdSchemaRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateIdSchemaRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete content_;
}

void CreateIdSchemaRequest::ArenaDtor(void* object) {
  CreateIdSchemaRequest* _this = reinterpret_cast< CreateIdSchemaRequest* >(object);
  (void)_this;
}
void CreateIdSchemaRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateIdSchemaRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateIdSchemaRequest& CreateIdSchemaRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateIdSchemaRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void CreateIdSchemaRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.CreateIdSchemaRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && content_ != nullptr) {
    delete content_;
  }
  content_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateIdSchemaRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1[json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.CreateIdSchemaRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Struct content = 2[json_name = "content"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_content(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateIdSchemaRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.CreateIdSchemaRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1[json_name = "name"];
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.CreateIdSchemaRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .google.protobuf.Struct content = 2[json_name = "content"];
  if (this->has_content()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::content(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.CreateIdSchemaRequest)
  return target;
}

size_t CreateIdSchemaRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.CreateIdSchemaRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1[json_name = "name"];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Struct content = 2[json_name = "content"];
  if (this->has_content()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *content_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateIdSchemaRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.CreateIdSchemaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateIdSchemaRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateIdSchemaRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.CreateIdSchemaRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.CreateIdSchemaRequest)
    MergeFrom(*source);
  }
}

void CreateIdSchemaRequest::MergeFrom(const CreateIdSchemaRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.CreateIdSchemaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_content()) {
    _internal_mutable_content()->PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_content());
  }
}

void CreateIdSchemaRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.CreateIdSchemaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateIdSchemaRequest::CopyFrom(const CreateIdSchemaRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.CreateIdSchemaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateIdSchemaRequest::IsInitialized() const {
  return true;
}

void CreateIdSchemaRequest::InternalSwap(CreateIdSchemaRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(content_, other->content_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateIdSchemaRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateIdSchemaResponse::InitAsDefaultInstance() {
}
class CreateIdSchemaResponse::_Internal {
 public:
};

CreateIdSchemaResponse::CreateIdSchemaResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.CreateIdSchemaResponse)
}
CreateIdSchemaResponse::CreateIdSchemaResponse(const CreateIdSchemaResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.CreateIdSchemaResponse)
}

void CreateIdSchemaResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateIdSchemaResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CreateIdSchemaResponse::~CreateIdSchemaResponse() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.CreateIdSchemaResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateIdSchemaResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateIdSchemaResponse::ArenaDtor(void* object) {
  CreateIdSchemaResponse* _this = reinterpret_cast< CreateIdSchemaResponse* >(object);
  (void)_this;
}
void CreateIdSchemaResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateIdSchemaResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateIdSchemaResponse& CreateIdSchemaResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateIdSchemaResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void CreateIdSchemaResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.CreateIdSchemaResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateIdSchemaResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 2[json_name = "id"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.CreateIdSchemaResponse.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateIdSchemaResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.CreateIdSchemaResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 2[json_name = "id"];
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.CreateIdSchemaResponse.id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.CreateIdSchemaResponse)
  return target;
}

size_t CreateIdSchemaResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.CreateIdSchemaResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 2[json_name = "id"];
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateIdSchemaResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.CreateIdSchemaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateIdSchemaResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateIdSchemaResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.CreateIdSchemaResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.CreateIdSchemaResponse)
    MergeFrom(*source);
  }
}

void CreateIdSchemaResponse::MergeFrom(const CreateIdSchemaResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.CreateIdSchemaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void CreateIdSchemaResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.CreateIdSchemaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateIdSchemaResponse::CopyFrom(const CreateIdSchemaResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.CreateIdSchemaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateIdSchemaResponse::IsInitialized() const {
  return true;
}

void CreateIdSchemaResponse::InternalSwap(CreateIdSchemaResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateIdSchemaResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetIdSchemasRequest::InitAsDefaultInstance() {
}
class GetIdSchemasRequest::_Internal {
 public:
};

GetIdSchemasRequest::GetIdSchemasRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetIdSchemasRequest)
}
GetIdSchemasRequest::GetIdSchemasRequest(const GetIdSchemasRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetIdSchemasRequest)
}

void GetIdSchemasRequest::SharedCtor() {
}

GetIdSchemasRequest::~GetIdSchemasRequest() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetIdSchemasRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetIdSchemasRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetIdSchemasRequest::ArenaDtor(void* object) {
  GetIdSchemasRequest* _this = reinterpret_cast< GetIdSchemasRequest* >(object);
  (void)_this;
}
void GetIdSchemasRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetIdSchemasRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetIdSchemasRequest& GetIdSchemasRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetIdSchemasRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetIdSchemasRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetIdSchemasRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetIdSchemasRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetIdSchemasRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetIdSchemasRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetIdSchemasRequest)
  return target;
}

size_t GetIdSchemasRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetIdSchemasRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetIdSchemasRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetIdSchemasRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetIdSchemasRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetIdSchemasRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetIdSchemasRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetIdSchemasRequest)
    MergeFrom(*source);
  }
}

void GetIdSchemasRequest::MergeFrom(const GetIdSchemasRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetIdSchemasRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetIdSchemasRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetIdSchemasRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIdSchemasRequest::CopyFrom(const GetIdSchemasRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetIdSchemasRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIdSchemasRequest::IsInitialized() const {
  return true;
}

void GetIdSchemasRequest::InternalSwap(GetIdSchemasRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetIdSchemasRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetIdSchemasResponse_JsonSchema::InitAsDefaultInstance() {
  ::depot::devtools::auth::v0::identity::admin::_GetIdSchemasResponse_JsonSchema_default_instance_._instance.get_mutable()->content_ = const_cast< PROTOBUF_NAMESPACE_ID::Struct*>(
      PROTOBUF_NAMESPACE_ID::Struct::internal_default_instance());
  ::depot::devtools::auth::v0::identity::admin::_GetIdSchemasResponse_JsonSchema_default_instance_._instance.get_mutable()->created_at_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::depot::devtools::auth::v0::identity::admin::_GetIdSchemasResponse_JsonSchema_default_instance_._instance.get_mutable()->updated_at_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
}
class GetIdSchemasResponse_JsonSchema::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Struct& content(const GetIdSchemasResponse_JsonSchema* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& created_at(const GetIdSchemasResponse_JsonSchema* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& updated_at(const GetIdSchemasResponse_JsonSchema* msg);
};

const PROTOBUF_NAMESPACE_ID::Struct&
GetIdSchemasResponse_JsonSchema::_Internal::content(const GetIdSchemasResponse_JsonSchema* msg) {
  return *msg->content_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
GetIdSchemasResponse_JsonSchema::_Internal::created_at(const GetIdSchemasResponse_JsonSchema* msg) {
  return *msg->created_at_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
GetIdSchemasResponse_JsonSchema::_Internal::updated_at(const GetIdSchemasResponse_JsonSchema* msg) {
  return *msg->updated_at_;
}
void GetIdSchemasResponse_JsonSchema::clear_content() {
  if (GetArena() == nullptr && content_ != nullptr) {
    delete content_;
  }
  content_ = nullptr;
}
void GetIdSchemasResponse_JsonSchema::clear_created_at() {
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
}
void GetIdSchemasResponse_JsonSchema::clear_updated_at() {
  if (GetArena() == nullptr && updated_at_ != nullptr) {
    delete updated_at_;
  }
  updated_at_ = nullptr;
}
GetIdSchemasResponse_JsonSchema::GetIdSchemasResponse_JsonSchema(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse.JsonSchema)
}
GetIdSchemasResponse_JsonSchema::GetIdSchemasResponse_JsonSchema(const GetIdSchemasResponse_JsonSchema& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  if (from._internal_has_content()) {
    content_ = new PROTOBUF_NAMESPACE_ID::Struct(*from.content_);
  } else {
    content_ = nullptr;
  }
  if (from._internal_has_created_at()) {
    created_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_at_);
  } else {
    created_at_ = nullptr;
  }
  if (from._internal_has_updated_at()) {
    updated_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.updated_at_);
  } else {
    updated_at_ = nullptr;
  }
  is_default_ = from.is_default_;
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse.JsonSchema)
}

void GetIdSchemasResponse_JsonSchema::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetIdSchemasResponse_JsonSchema_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&content_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_default_) -
      reinterpret_cast<char*>(&content_)) + sizeof(is_default_));
}

GetIdSchemasResponse_JsonSchema::~GetIdSchemasResponse_JsonSchema() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse.JsonSchema)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetIdSchemasResponse_JsonSchema::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete content_;
  if (this != internal_default_instance()) delete created_at_;
  if (this != internal_default_instance()) delete updated_at_;
}

void GetIdSchemasResponse_JsonSchema::ArenaDtor(void* object) {
  GetIdSchemasResponse_JsonSchema* _this = reinterpret_cast< GetIdSchemasResponse_JsonSchema* >(object);
  (void)_this;
}
void GetIdSchemasResponse_JsonSchema::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetIdSchemasResponse_JsonSchema::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetIdSchemasResponse_JsonSchema& GetIdSchemasResponse_JsonSchema::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetIdSchemasResponse_JsonSchema_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetIdSchemasResponse_JsonSchema::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse.JsonSchema)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && content_ != nullptr) {
    delete content_;
  }
  content_ = nullptr;
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
  if (GetArena() == nullptr && updated_at_ != nullptr) {
    delete updated_at_;
  }
  updated_at_ = nullptr;
  is_default_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetIdSchemasResponse_JsonSchema::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1[json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse.JsonSchema.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2[json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse.JsonSchema.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Struct content = 3[json_name = "content"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_content(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_at = 4[json_name = "createdAt"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp updated_at = 5[json_name = "updatedAt"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_updated_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool is_default = 6[json_name = "isDefault"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          is_default_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetIdSchemasResponse_JsonSchema::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse.JsonSchema)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1[json_name = "id"];
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse.JsonSchema.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2[json_name = "name"];
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse.JsonSchema.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // .google.protobuf.Struct content = 3[json_name = "content"];
  if (this->has_content()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::content(this), target, stream);
  }

  // .google.protobuf.Timestamp created_at = 4[json_name = "createdAt"];
  if (this->has_created_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::created_at(this), target, stream);
  }

  // .google.protobuf.Timestamp updated_at = 5[json_name = "updatedAt"];
  if (this->has_updated_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::updated_at(this), target, stream);
  }

  // bool is_default = 6[json_name = "isDefault"];
  if (this->is_default() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_is_default(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse.JsonSchema)
  return target;
}

size_t GetIdSchemasResponse_JsonSchema::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse.JsonSchema)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1[json_name = "id"];
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2[json_name = "name"];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Struct content = 3[json_name = "content"];
  if (this->has_content()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *content_);
  }

  // .google.protobuf.Timestamp created_at = 4[json_name = "createdAt"];
  if (this->has_created_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_at_);
  }

  // .google.protobuf.Timestamp updated_at = 5[json_name = "updatedAt"];
  if (this->has_updated_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *updated_at_);
  }

  // bool is_default = 6[json_name = "isDefault"];
  if (this->is_default() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetIdSchemasResponse_JsonSchema::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse.JsonSchema)
  GOOGLE_DCHECK_NE(&from, this);
  const GetIdSchemasResponse_JsonSchema* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetIdSchemasResponse_JsonSchema>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse.JsonSchema)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse.JsonSchema)
    MergeFrom(*source);
  }
}

void GetIdSchemasResponse_JsonSchema::MergeFrom(const GetIdSchemasResponse_JsonSchema& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse.JsonSchema)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_content()) {
    _internal_mutable_content()->PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_content());
  }
  if (from.has_created_at()) {
    _internal_mutable_created_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_at());
  }
  if (from.has_updated_at()) {
    _internal_mutable_updated_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_updated_at());
  }
  if (from.is_default() != 0) {
    _internal_set_is_default(from._internal_is_default());
  }
}

void GetIdSchemasResponse_JsonSchema::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse.JsonSchema)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIdSchemasResponse_JsonSchema::CopyFrom(const GetIdSchemasResponse_JsonSchema& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse.JsonSchema)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIdSchemasResponse_JsonSchema::IsInitialized() const {
  return true;
}

void GetIdSchemasResponse_JsonSchema::InternalSwap(GetIdSchemasResponse_JsonSchema* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetIdSchemasResponse_JsonSchema, is_default_)
      + sizeof(GetIdSchemasResponse_JsonSchema::is_default_)
      - PROTOBUF_FIELD_OFFSET(GetIdSchemasResponse_JsonSchema, content_)>(
          reinterpret_cast<char*>(&content_),
          reinterpret_cast<char*>(&other->content_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetIdSchemasResponse_JsonSchema::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetIdSchemasResponse::InitAsDefaultInstance() {
}
class GetIdSchemasResponse::_Internal {
 public:
};

GetIdSchemasResponse::GetIdSchemasResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  jsonschemas_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse)
}
GetIdSchemasResponse::GetIdSchemasResponse(const GetIdSchemasResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      jsonschemas_(from.jsonschemas_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse)
}

void GetIdSchemasResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetIdSchemasResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
}

GetIdSchemasResponse::~GetIdSchemasResponse() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetIdSchemasResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetIdSchemasResponse::ArenaDtor(void* object) {
  GetIdSchemasResponse* _this = reinterpret_cast< GetIdSchemasResponse* >(object);
  (void)_this;
}
void GetIdSchemasResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetIdSchemasResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetIdSchemasResponse& GetIdSchemasResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetIdSchemasResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetIdSchemasResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  jsonschemas_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetIdSchemasResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse.JsonSchema jsonschemas = 1[json_name = "jsonschemas"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_jsonschemas(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetIdSchemasResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse.JsonSchema jsonschemas = 1[json_name = "jsonschemas"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_jsonschemas_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_jsonschemas(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse)
  return target;
}

size_t GetIdSchemasResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse.JsonSchema jsonschemas = 1[json_name = "jsonschemas"];
  total_size += 1UL * this->_internal_jsonschemas_size();
  for (const auto& msg : this->jsonschemas_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetIdSchemasResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetIdSchemasResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetIdSchemasResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse)
    MergeFrom(*source);
  }
}

void GetIdSchemasResponse::MergeFrom(const GetIdSchemasResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  jsonschemas_.MergeFrom(from.jsonschemas_);
}

void GetIdSchemasResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIdSchemasResponse::CopyFrom(const GetIdSchemasResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIdSchemasResponse::IsInitialized() const {
  return true;
}

void GetIdSchemasResponse::InternalSwap(GetIdSchemasResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  jsonschemas_.InternalSwap(&other->jsonschemas_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetIdSchemasResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetIdSchemaRequest::InitAsDefaultInstance() {
}
class GetIdSchemaRequest::_Internal {
 public:
};

GetIdSchemaRequest::GetIdSchemaRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetIdSchemaRequest)
}
GetIdSchemaRequest::GetIdSchemaRequest(const GetIdSchemaRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetIdSchemaRequest)
}

void GetIdSchemaRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetIdSchemaRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetIdSchemaRequest::~GetIdSchemaRequest() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetIdSchemaRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetIdSchemaRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetIdSchemaRequest::ArenaDtor(void* object) {
  GetIdSchemaRequest* _this = reinterpret_cast< GetIdSchemaRequest* >(object);
  (void)_this;
}
void GetIdSchemaRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetIdSchemaRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetIdSchemaRequest& GetIdSchemaRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetIdSchemaRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetIdSchemaRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetIdSchemaRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetIdSchemaRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1[json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetIdSchemaRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetIdSchemaRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetIdSchemaRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1[json_name = "id"];
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetIdSchemaRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetIdSchemaRequest)
  return target;
}

size_t GetIdSchemaRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetIdSchemaRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1[json_name = "id"];
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetIdSchemaRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetIdSchemaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetIdSchemaRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetIdSchemaRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetIdSchemaRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetIdSchemaRequest)
    MergeFrom(*source);
  }
}

void GetIdSchemaRequest::MergeFrom(const GetIdSchemaRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetIdSchemaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void GetIdSchemaRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetIdSchemaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIdSchemaRequest::CopyFrom(const GetIdSchemaRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetIdSchemaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIdSchemaRequest::IsInitialized() const {
  return true;
}

void GetIdSchemaRequest::InternalSwap(GetIdSchemaRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetIdSchemaRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetIdSchemaResponse::InitAsDefaultInstance() {
  ::depot::devtools::auth::v0::identity::admin::_GetIdSchemaResponse_default_instance_._instance.get_mutable()->content_ = const_cast< PROTOBUF_NAMESPACE_ID::Struct*>(
      PROTOBUF_NAMESPACE_ID::Struct::internal_default_instance());
  ::depot::devtools::auth::v0::identity::admin::_GetIdSchemaResponse_default_instance_._instance.get_mutable()->created_at_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::depot::devtools::auth::v0::identity::admin::_GetIdSchemaResponse_default_instance_._instance.get_mutable()->updated_at_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
}
class GetIdSchemaResponse::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Struct& content(const GetIdSchemaResponse* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& created_at(const GetIdSchemaResponse* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& updated_at(const GetIdSchemaResponse* msg);
};

const PROTOBUF_NAMESPACE_ID::Struct&
GetIdSchemaResponse::_Internal::content(const GetIdSchemaResponse* msg) {
  return *msg->content_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
GetIdSchemaResponse::_Internal::created_at(const GetIdSchemaResponse* msg) {
  return *msg->created_at_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
GetIdSchemaResponse::_Internal::updated_at(const GetIdSchemaResponse* msg) {
  return *msg->updated_at_;
}
void GetIdSchemaResponse::clear_content() {
  if (GetArena() == nullptr && content_ != nullptr) {
    delete content_;
  }
  content_ = nullptr;
}
void GetIdSchemaResponse::clear_created_at() {
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
}
void GetIdSchemaResponse::clear_updated_at() {
  if (GetArena() == nullptr && updated_at_ != nullptr) {
    delete updated_at_;
  }
  updated_at_ = nullptr;
}
GetIdSchemaResponse::GetIdSchemaResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetIdSchemaResponse)
}
GetIdSchemaResponse::GetIdSchemaResponse(const GetIdSchemaResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  if (from._internal_has_content()) {
    content_ = new PROTOBUF_NAMESPACE_ID::Struct(*from.content_);
  } else {
    content_ = nullptr;
  }
  if (from._internal_has_created_at()) {
    created_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_at_);
  } else {
    created_at_ = nullptr;
  }
  if (from._internal_has_updated_at()) {
    updated_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.updated_at_);
  } else {
    updated_at_ = nullptr;
  }
  is_default_ = from.is_default_;
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetIdSchemaResponse)
}

void GetIdSchemaResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetIdSchemaResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&content_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_default_) -
      reinterpret_cast<char*>(&content_)) + sizeof(is_default_));
}

GetIdSchemaResponse::~GetIdSchemaResponse() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetIdSchemaResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetIdSchemaResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete content_;
  if (this != internal_default_instance()) delete created_at_;
  if (this != internal_default_instance()) delete updated_at_;
}

void GetIdSchemaResponse::ArenaDtor(void* object) {
  GetIdSchemaResponse* _this = reinterpret_cast< GetIdSchemaResponse* >(object);
  (void)_this;
}
void GetIdSchemaResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetIdSchemaResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetIdSchemaResponse& GetIdSchemaResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetIdSchemaResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetIdSchemaResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetIdSchemaResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && content_ != nullptr) {
    delete content_;
  }
  content_ = nullptr;
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
  if (GetArena() == nullptr && updated_at_ != nullptr) {
    delete updated_at_;
  }
  updated_at_ = nullptr;
  is_default_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetIdSchemaResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1[json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetIdSchemaResponse.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2[json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetIdSchemaResponse.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Struct content = 3[json_name = "content"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_content(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_at = 4[json_name = "createdAt"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp updated_at = 5[json_name = "updatedAt"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_updated_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool is_default = 6[json_name = "isDefault"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          is_default_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetIdSchemaResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetIdSchemaResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1[json_name = "id"];
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetIdSchemaResponse.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2[json_name = "name"];
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetIdSchemaResponse.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // .google.protobuf.Struct content = 3[json_name = "content"];
  if (this->has_content()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::content(this), target, stream);
  }

  // .google.protobuf.Timestamp created_at = 4[json_name = "createdAt"];
  if (this->has_created_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::created_at(this), target, stream);
  }

  // .google.protobuf.Timestamp updated_at = 5[json_name = "updatedAt"];
  if (this->has_updated_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::updated_at(this), target, stream);
  }

  // bool is_default = 6[json_name = "isDefault"];
  if (this->is_default() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_is_default(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetIdSchemaResponse)
  return target;
}

size_t GetIdSchemaResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetIdSchemaResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1[json_name = "id"];
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2[json_name = "name"];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Struct content = 3[json_name = "content"];
  if (this->has_content()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *content_);
  }

  // .google.protobuf.Timestamp created_at = 4[json_name = "createdAt"];
  if (this->has_created_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_at_);
  }

  // .google.protobuf.Timestamp updated_at = 5[json_name = "updatedAt"];
  if (this->has_updated_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *updated_at_);
  }

  // bool is_default = 6[json_name = "isDefault"];
  if (this->is_default() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetIdSchemaResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetIdSchemaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetIdSchemaResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetIdSchemaResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetIdSchemaResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetIdSchemaResponse)
    MergeFrom(*source);
  }
}

void GetIdSchemaResponse::MergeFrom(const GetIdSchemaResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetIdSchemaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_content()) {
    _internal_mutable_content()->PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_content());
  }
  if (from.has_created_at()) {
    _internal_mutable_created_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_at());
  }
  if (from.has_updated_at()) {
    _internal_mutable_updated_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_updated_at());
  }
  if (from.is_default() != 0) {
    _internal_set_is_default(from._internal_is_default());
  }
}

void GetIdSchemaResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetIdSchemaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIdSchemaResponse::CopyFrom(const GetIdSchemaResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetIdSchemaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIdSchemaResponse::IsInitialized() const {
  return true;
}

void GetIdSchemaResponse::InternalSwap(GetIdSchemaResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetIdSchemaResponse, is_default_)
      + sizeof(GetIdSchemaResponse::is_default_)
      - PROTOBUF_FIELD_OFFSET(GetIdSchemaResponse, content_)>(
          reinterpret_cast<char*>(&content_),
          reinterpret_cast<char*>(&other->content_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetIdSchemaResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetDefaultIdSchemaRequest::InitAsDefaultInstance() {
}
class GetDefaultIdSchemaRequest::_Internal {
 public:
};

GetDefaultIdSchemaRequest::GetDefaultIdSchemaRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetDefaultIdSchemaRequest)
}
GetDefaultIdSchemaRequest::GetDefaultIdSchemaRequest(const GetDefaultIdSchemaRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetDefaultIdSchemaRequest)
}

void GetDefaultIdSchemaRequest::SharedCtor() {
}

GetDefaultIdSchemaRequest::~GetDefaultIdSchemaRequest() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetDefaultIdSchemaRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetDefaultIdSchemaRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetDefaultIdSchemaRequest::ArenaDtor(void* object) {
  GetDefaultIdSchemaRequest* _this = reinterpret_cast< GetDefaultIdSchemaRequest* >(object);
  (void)_this;
}
void GetDefaultIdSchemaRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetDefaultIdSchemaRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetDefaultIdSchemaRequest& GetDefaultIdSchemaRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetDefaultIdSchemaRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetDefaultIdSchemaRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetDefaultIdSchemaRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetDefaultIdSchemaRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetDefaultIdSchemaRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetDefaultIdSchemaRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetDefaultIdSchemaRequest)
  return target;
}

size_t GetDefaultIdSchemaRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetDefaultIdSchemaRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetDefaultIdSchemaRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetDefaultIdSchemaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDefaultIdSchemaRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetDefaultIdSchemaRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetDefaultIdSchemaRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetDefaultIdSchemaRequest)
    MergeFrom(*source);
  }
}

void GetDefaultIdSchemaRequest::MergeFrom(const GetDefaultIdSchemaRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetDefaultIdSchemaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetDefaultIdSchemaRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetDefaultIdSchemaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDefaultIdSchemaRequest::CopyFrom(const GetDefaultIdSchemaRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetDefaultIdSchemaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDefaultIdSchemaRequest::IsInitialized() const {
  return true;
}

void GetDefaultIdSchemaRequest::InternalSwap(GetDefaultIdSchemaRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetDefaultIdSchemaRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetDefaultIdSchemaResponse::InitAsDefaultInstance() {
  ::depot::devtools::auth::v0::identity::admin::_GetDefaultIdSchemaResponse_default_instance_._instance.get_mutable()->content_ = const_cast< PROTOBUF_NAMESPACE_ID::Struct*>(
      PROTOBUF_NAMESPACE_ID::Struct::internal_default_instance());
  ::depot::devtools::auth::v0::identity::admin::_GetDefaultIdSchemaResponse_default_instance_._instance.get_mutable()->created_at_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::depot::devtools::auth::v0::identity::admin::_GetDefaultIdSchemaResponse_default_instance_._instance.get_mutable()->updated_at_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
}
class GetDefaultIdSchemaResponse::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Struct& content(const GetDefaultIdSchemaResponse* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& created_at(const GetDefaultIdSchemaResponse* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& updated_at(const GetDefaultIdSchemaResponse* msg);
};

const PROTOBUF_NAMESPACE_ID::Struct&
GetDefaultIdSchemaResponse::_Internal::content(const GetDefaultIdSchemaResponse* msg) {
  return *msg->content_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
GetDefaultIdSchemaResponse::_Internal::created_at(const GetDefaultIdSchemaResponse* msg) {
  return *msg->created_at_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
GetDefaultIdSchemaResponse::_Internal::updated_at(const GetDefaultIdSchemaResponse* msg) {
  return *msg->updated_at_;
}
void GetDefaultIdSchemaResponse::clear_content() {
  if (GetArena() == nullptr && content_ != nullptr) {
    delete content_;
  }
  content_ = nullptr;
}
void GetDefaultIdSchemaResponse::clear_created_at() {
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
}
void GetDefaultIdSchemaResponse::clear_updated_at() {
  if (GetArena() == nullptr && updated_at_ != nullptr) {
    delete updated_at_;
  }
  updated_at_ = nullptr;
}
GetDefaultIdSchemaResponse::GetDefaultIdSchemaResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetDefaultIdSchemaResponse)
}
GetDefaultIdSchemaResponse::GetDefaultIdSchemaResponse(const GetDefaultIdSchemaResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  if (from._internal_has_content()) {
    content_ = new PROTOBUF_NAMESPACE_ID::Struct(*from.content_);
  } else {
    content_ = nullptr;
  }
  if (from._internal_has_created_at()) {
    created_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_at_);
  } else {
    created_at_ = nullptr;
  }
  if (from._internal_has_updated_at()) {
    updated_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.updated_at_);
  } else {
    updated_at_ = nullptr;
  }
  is_default_ = from.is_default_;
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetDefaultIdSchemaResponse)
}

void GetDefaultIdSchemaResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetDefaultIdSchemaResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&content_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_default_) -
      reinterpret_cast<char*>(&content_)) + sizeof(is_default_));
}

GetDefaultIdSchemaResponse::~GetDefaultIdSchemaResponse() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetDefaultIdSchemaResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetDefaultIdSchemaResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete content_;
  if (this != internal_default_instance()) delete created_at_;
  if (this != internal_default_instance()) delete updated_at_;
}

void GetDefaultIdSchemaResponse::ArenaDtor(void* object) {
  GetDefaultIdSchemaResponse* _this = reinterpret_cast< GetDefaultIdSchemaResponse* >(object);
  (void)_this;
}
void GetDefaultIdSchemaResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetDefaultIdSchemaResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetDefaultIdSchemaResponse& GetDefaultIdSchemaResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetDefaultIdSchemaResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetDefaultIdSchemaResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetDefaultIdSchemaResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && content_ != nullptr) {
    delete content_;
  }
  content_ = nullptr;
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
  if (GetArena() == nullptr && updated_at_ != nullptr) {
    delete updated_at_;
  }
  updated_at_ = nullptr;
  is_default_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetDefaultIdSchemaResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1[json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetDefaultIdSchemaResponse.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2[json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetDefaultIdSchemaResponse.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Struct content = 3[json_name = "content"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_content(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_at = 4[json_name = "createdAt"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp updated_at = 5[json_name = "updatedAt"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_updated_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool is_default = 6[json_name = "isDefault"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          is_default_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetDefaultIdSchemaResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetDefaultIdSchemaResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1[json_name = "id"];
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetDefaultIdSchemaResponse.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2[json_name = "name"];
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetDefaultIdSchemaResponse.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // .google.protobuf.Struct content = 3[json_name = "content"];
  if (this->has_content()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::content(this), target, stream);
  }

  // .google.protobuf.Timestamp created_at = 4[json_name = "createdAt"];
  if (this->has_created_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::created_at(this), target, stream);
  }

  // .google.protobuf.Timestamp updated_at = 5[json_name = "updatedAt"];
  if (this->has_updated_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::updated_at(this), target, stream);
  }

  // bool is_default = 6[json_name = "isDefault"];
  if (this->is_default() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_is_default(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetDefaultIdSchemaResponse)
  return target;
}

size_t GetDefaultIdSchemaResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetDefaultIdSchemaResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1[json_name = "id"];
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2[json_name = "name"];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Struct content = 3[json_name = "content"];
  if (this->has_content()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *content_);
  }

  // .google.protobuf.Timestamp created_at = 4[json_name = "createdAt"];
  if (this->has_created_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_at_);
  }

  // .google.protobuf.Timestamp updated_at = 5[json_name = "updatedAt"];
  if (this->has_updated_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *updated_at_);
  }

  // bool is_default = 6[json_name = "isDefault"];
  if (this->is_default() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetDefaultIdSchemaResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetDefaultIdSchemaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDefaultIdSchemaResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetDefaultIdSchemaResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetDefaultIdSchemaResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetDefaultIdSchemaResponse)
    MergeFrom(*source);
  }
}

void GetDefaultIdSchemaResponse::MergeFrom(const GetDefaultIdSchemaResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetDefaultIdSchemaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_content()) {
    _internal_mutable_content()->PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_content());
  }
  if (from.has_created_at()) {
    _internal_mutable_created_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_at());
  }
  if (from.has_updated_at()) {
    _internal_mutable_updated_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_updated_at());
  }
  if (from.is_default() != 0) {
    _internal_set_is_default(from._internal_is_default());
  }
}

void GetDefaultIdSchemaResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetDefaultIdSchemaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDefaultIdSchemaResponse::CopyFrom(const GetDefaultIdSchemaResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetDefaultIdSchemaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDefaultIdSchemaResponse::IsInitialized() const {
  return true;
}

void GetDefaultIdSchemaResponse::InternalSwap(GetDefaultIdSchemaResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetDefaultIdSchemaResponse, is_default_)
      + sizeof(GetDefaultIdSchemaResponse::is_default_)
      - PROTOBUF_FIELD_OFFSET(GetDefaultIdSchemaResponse, content_)>(
          reinterpret_cast<char*>(&content_),
          reinterpret_cast<char*>(&other->content_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetDefaultIdSchemaResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateIdSchemaRequest::InitAsDefaultInstance() {
  ::depot::devtools::auth::v0::identity::admin::_UpdateIdSchemaRequest_default_instance_._instance.get_mutable()->content_ = const_cast< PROTOBUF_NAMESPACE_ID::Struct*>(
      PROTOBUF_NAMESPACE_ID::Struct::internal_default_instance());
}
class UpdateIdSchemaRequest::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Struct& content(const UpdateIdSchemaRequest* msg);
};

const PROTOBUF_NAMESPACE_ID::Struct&
UpdateIdSchemaRequest::_Internal::content(const UpdateIdSchemaRequest* msg) {
  return *msg->content_;
}
void UpdateIdSchemaRequest::clear_content() {
  if (GetArena() == nullptr && content_ != nullptr) {
    delete content_;
  }
  content_ = nullptr;
}
UpdateIdSchemaRequest::UpdateIdSchemaRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.UpdateIdSchemaRequest)
}
UpdateIdSchemaRequest::UpdateIdSchemaRequest(const UpdateIdSchemaRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  if (from._internal_has_content()) {
    content_ = new PROTOBUF_NAMESPACE_ID::Struct(*from.content_);
  } else {
    content_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.UpdateIdSchemaRequest)
}

void UpdateIdSchemaRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateIdSchemaRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  content_ = nullptr;
}

UpdateIdSchemaRequest::~UpdateIdSchemaRequest() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.UpdateIdSchemaRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateIdSchemaRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete content_;
}

void UpdateIdSchemaRequest::ArenaDtor(void* object) {
  UpdateIdSchemaRequest* _this = reinterpret_cast< UpdateIdSchemaRequest* >(object);
  (void)_this;
}
void UpdateIdSchemaRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateIdSchemaRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateIdSchemaRequest& UpdateIdSchemaRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateIdSchemaRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void UpdateIdSchemaRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.UpdateIdSchemaRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && content_ != nullptr) {
    delete content_;
  }
  content_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateIdSchemaRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1[json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateIdSchemaRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2[json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateIdSchemaRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Struct content = 3[json_name = "content"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_content(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateIdSchemaRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.UpdateIdSchemaRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1[json_name = "id"];
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateIdSchemaRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2[json_name = "name"];
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateIdSchemaRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // .google.protobuf.Struct content = 3[json_name = "content"];
  if (this->has_content()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::content(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.UpdateIdSchemaRequest)
  return target;
}

size_t UpdateIdSchemaRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.UpdateIdSchemaRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1[json_name = "id"];
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2[json_name = "name"];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Struct content = 3[json_name = "content"];
  if (this->has_content()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *content_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateIdSchemaRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.UpdateIdSchemaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateIdSchemaRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateIdSchemaRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.UpdateIdSchemaRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.UpdateIdSchemaRequest)
    MergeFrom(*source);
  }
}

void UpdateIdSchemaRequest::MergeFrom(const UpdateIdSchemaRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.UpdateIdSchemaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_content()) {
    _internal_mutable_content()->PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_content());
  }
}

void UpdateIdSchemaRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.UpdateIdSchemaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateIdSchemaRequest::CopyFrom(const UpdateIdSchemaRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.UpdateIdSchemaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateIdSchemaRequest::IsInitialized() const {
  return true;
}

void UpdateIdSchemaRequest::InternalSwap(UpdateIdSchemaRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(content_, other->content_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateIdSchemaRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateIdSchemaResponse::InitAsDefaultInstance() {
}
class UpdateIdSchemaResponse::_Internal {
 public:
};

UpdateIdSchemaResponse::UpdateIdSchemaResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.UpdateIdSchemaResponse)
}
UpdateIdSchemaResponse::UpdateIdSchemaResponse(const UpdateIdSchemaResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.UpdateIdSchemaResponse)
}

void UpdateIdSchemaResponse::SharedCtor() {
}

UpdateIdSchemaResponse::~UpdateIdSchemaResponse() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.UpdateIdSchemaResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateIdSchemaResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UpdateIdSchemaResponse::ArenaDtor(void* object) {
  UpdateIdSchemaResponse* _this = reinterpret_cast< UpdateIdSchemaResponse* >(object);
  (void)_this;
}
void UpdateIdSchemaResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateIdSchemaResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateIdSchemaResponse& UpdateIdSchemaResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateIdSchemaResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void UpdateIdSchemaResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.UpdateIdSchemaResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateIdSchemaResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateIdSchemaResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.UpdateIdSchemaResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.UpdateIdSchemaResponse)
  return target;
}

size_t UpdateIdSchemaResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.UpdateIdSchemaResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateIdSchemaResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.UpdateIdSchemaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateIdSchemaResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateIdSchemaResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.UpdateIdSchemaResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.UpdateIdSchemaResponse)
    MergeFrom(*source);
  }
}

void UpdateIdSchemaResponse::MergeFrom(const UpdateIdSchemaResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.UpdateIdSchemaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UpdateIdSchemaResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.UpdateIdSchemaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateIdSchemaResponse::CopyFrom(const UpdateIdSchemaResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.UpdateIdSchemaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateIdSchemaResponse::IsInitialized() const {
  return true;
}

void UpdateIdSchemaResponse::InternalSwap(UpdateIdSchemaResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateIdSchemaResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MarkDefaultIdSchemaRequest::InitAsDefaultInstance() {
}
class MarkDefaultIdSchemaRequest::_Internal {
 public:
};

MarkDefaultIdSchemaRequest::MarkDefaultIdSchemaRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.MarkDefaultIdSchemaRequest)
}
MarkDefaultIdSchemaRequest::MarkDefaultIdSchemaRequest(const MarkDefaultIdSchemaRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.MarkDefaultIdSchemaRequest)
}

void MarkDefaultIdSchemaRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MarkDefaultIdSchemaRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

MarkDefaultIdSchemaRequest::~MarkDefaultIdSchemaRequest() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.MarkDefaultIdSchemaRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MarkDefaultIdSchemaRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MarkDefaultIdSchemaRequest::ArenaDtor(void* object) {
  MarkDefaultIdSchemaRequest* _this = reinterpret_cast< MarkDefaultIdSchemaRequest* >(object);
  (void)_this;
}
void MarkDefaultIdSchemaRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MarkDefaultIdSchemaRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MarkDefaultIdSchemaRequest& MarkDefaultIdSchemaRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MarkDefaultIdSchemaRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void MarkDefaultIdSchemaRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.MarkDefaultIdSchemaRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MarkDefaultIdSchemaRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1[json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.MarkDefaultIdSchemaRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MarkDefaultIdSchemaRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.MarkDefaultIdSchemaRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1[json_name = "id"];
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.MarkDefaultIdSchemaRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.MarkDefaultIdSchemaRequest)
  return target;
}

size_t MarkDefaultIdSchemaRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.MarkDefaultIdSchemaRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1[json_name = "id"];
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MarkDefaultIdSchemaRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.MarkDefaultIdSchemaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MarkDefaultIdSchemaRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MarkDefaultIdSchemaRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.MarkDefaultIdSchemaRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.MarkDefaultIdSchemaRequest)
    MergeFrom(*source);
  }
}

void MarkDefaultIdSchemaRequest::MergeFrom(const MarkDefaultIdSchemaRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.MarkDefaultIdSchemaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void MarkDefaultIdSchemaRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.MarkDefaultIdSchemaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MarkDefaultIdSchemaRequest::CopyFrom(const MarkDefaultIdSchemaRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.MarkDefaultIdSchemaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MarkDefaultIdSchemaRequest::IsInitialized() const {
  return true;
}

void MarkDefaultIdSchemaRequest::InternalSwap(MarkDefaultIdSchemaRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata MarkDefaultIdSchemaRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MarkDefaultIdSchemaResponse::InitAsDefaultInstance() {
}
class MarkDefaultIdSchemaResponse::_Internal {
 public:
};

MarkDefaultIdSchemaResponse::MarkDefaultIdSchemaResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.MarkDefaultIdSchemaResponse)
}
MarkDefaultIdSchemaResponse::MarkDefaultIdSchemaResponse(const MarkDefaultIdSchemaResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.MarkDefaultIdSchemaResponse)
}

void MarkDefaultIdSchemaResponse::SharedCtor() {
}

MarkDefaultIdSchemaResponse::~MarkDefaultIdSchemaResponse() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.MarkDefaultIdSchemaResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MarkDefaultIdSchemaResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void MarkDefaultIdSchemaResponse::ArenaDtor(void* object) {
  MarkDefaultIdSchemaResponse* _this = reinterpret_cast< MarkDefaultIdSchemaResponse* >(object);
  (void)_this;
}
void MarkDefaultIdSchemaResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MarkDefaultIdSchemaResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MarkDefaultIdSchemaResponse& MarkDefaultIdSchemaResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MarkDefaultIdSchemaResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void MarkDefaultIdSchemaResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.MarkDefaultIdSchemaResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MarkDefaultIdSchemaResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MarkDefaultIdSchemaResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.MarkDefaultIdSchemaResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.MarkDefaultIdSchemaResponse)
  return target;
}

size_t MarkDefaultIdSchemaResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.MarkDefaultIdSchemaResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MarkDefaultIdSchemaResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.MarkDefaultIdSchemaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MarkDefaultIdSchemaResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MarkDefaultIdSchemaResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.MarkDefaultIdSchemaResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.MarkDefaultIdSchemaResponse)
    MergeFrom(*source);
  }
}

void MarkDefaultIdSchemaResponse::MergeFrom(const MarkDefaultIdSchemaResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.MarkDefaultIdSchemaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MarkDefaultIdSchemaResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.MarkDefaultIdSchemaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MarkDefaultIdSchemaResponse::CopyFrom(const MarkDefaultIdSchemaResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.MarkDefaultIdSchemaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MarkDefaultIdSchemaResponse::IsInitialized() const {
  return true;
}

void MarkDefaultIdSchemaResponse::InternalSwap(MarkDefaultIdSchemaResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MarkDefaultIdSchemaResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteIdSchemaRequest::InitAsDefaultInstance() {
}
class DeleteIdSchemaRequest::_Internal {
 public:
};

DeleteIdSchemaRequest::DeleteIdSchemaRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.DeleteIdSchemaRequest)
}
DeleteIdSchemaRequest::DeleteIdSchemaRequest(const DeleteIdSchemaRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.DeleteIdSchemaRequest)
}

void DeleteIdSchemaRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteIdSchemaRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteIdSchemaRequest::~DeleteIdSchemaRequest() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.DeleteIdSchemaRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteIdSchemaRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteIdSchemaRequest::ArenaDtor(void* object) {
  DeleteIdSchemaRequest* _this = reinterpret_cast< DeleteIdSchemaRequest* >(object);
  (void)_this;
}
void DeleteIdSchemaRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteIdSchemaRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteIdSchemaRequest& DeleteIdSchemaRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteIdSchemaRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void DeleteIdSchemaRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.DeleteIdSchemaRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteIdSchemaRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1[json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.DeleteIdSchemaRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteIdSchemaRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.DeleteIdSchemaRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1[json_name = "id"];
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.DeleteIdSchemaRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.DeleteIdSchemaRequest)
  return target;
}

size_t DeleteIdSchemaRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.DeleteIdSchemaRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1[json_name = "id"];
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteIdSchemaRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.DeleteIdSchemaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteIdSchemaRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteIdSchemaRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.DeleteIdSchemaRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.DeleteIdSchemaRequest)
    MergeFrom(*source);
  }
}

void DeleteIdSchemaRequest::MergeFrom(const DeleteIdSchemaRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.DeleteIdSchemaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void DeleteIdSchemaRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.DeleteIdSchemaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteIdSchemaRequest::CopyFrom(const DeleteIdSchemaRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.DeleteIdSchemaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteIdSchemaRequest::IsInitialized() const {
  return true;
}

void DeleteIdSchemaRequest::InternalSwap(DeleteIdSchemaRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteIdSchemaRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteIdSchemaResponse::InitAsDefaultInstance() {
}
class DeleteIdSchemaResponse::_Internal {
 public:
};

DeleteIdSchemaResponse::DeleteIdSchemaResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.DeleteIdSchemaResponse)
}
DeleteIdSchemaResponse::DeleteIdSchemaResponse(const DeleteIdSchemaResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.DeleteIdSchemaResponse)
}

void DeleteIdSchemaResponse::SharedCtor() {
}

DeleteIdSchemaResponse::~DeleteIdSchemaResponse() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.DeleteIdSchemaResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteIdSchemaResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteIdSchemaResponse::ArenaDtor(void* object) {
  DeleteIdSchemaResponse* _this = reinterpret_cast< DeleteIdSchemaResponse* >(object);
  (void)_this;
}
void DeleteIdSchemaResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteIdSchemaResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteIdSchemaResponse& DeleteIdSchemaResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteIdSchemaResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void DeleteIdSchemaResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.DeleteIdSchemaResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteIdSchemaResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteIdSchemaResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.DeleteIdSchemaResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.DeleteIdSchemaResponse)
  return target;
}

size_t DeleteIdSchemaResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.DeleteIdSchemaResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteIdSchemaResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.DeleteIdSchemaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteIdSchemaResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteIdSchemaResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.DeleteIdSchemaResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.DeleteIdSchemaResponse)
    MergeFrom(*source);
  }
}

void DeleteIdSchemaResponse::MergeFrom(const DeleteIdSchemaResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.DeleteIdSchemaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteIdSchemaResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.DeleteIdSchemaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteIdSchemaResponse::CopyFrom(const DeleteIdSchemaResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.DeleteIdSchemaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteIdSchemaResponse::IsInitialized() const {
  return true;
}

void DeleteIdSchemaResponse::InternalSwap(DeleteIdSchemaResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteIdSchemaResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetEmailsSetupRequest::InitAsDefaultInstance() {
}
class GetEmailsSetupRequest::_Internal {
 public:
};

GetEmailsSetupRequest::GetEmailsSetupRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetEmailsSetupRequest)
}
GetEmailsSetupRequest::GetEmailsSetupRequest(const GetEmailsSetupRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetEmailsSetupRequest)
}

void GetEmailsSetupRequest::SharedCtor() {
}

GetEmailsSetupRequest::~GetEmailsSetupRequest() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetEmailsSetupRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetEmailsSetupRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetEmailsSetupRequest::ArenaDtor(void* object) {
  GetEmailsSetupRequest* _this = reinterpret_cast< GetEmailsSetupRequest* >(object);
  (void)_this;
}
void GetEmailsSetupRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetEmailsSetupRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetEmailsSetupRequest& GetEmailsSetupRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetEmailsSetupRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetEmailsSetupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetEmailsSetupRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetEmailsSetupRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetEmailsSetupRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetEmailsSetupRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetEmailsSetupRequest)
  return target;
}

size_t GetEmailsSetupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetEmailsSetupRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetEmailsSetupRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetEmailsSetupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetEmailsSetupRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetEmailsSetupRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetEmailsSetupRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetEmailsSetupRequest)
    MergeFrom(*source);
  }
}

void GetEmailsSetupRequest::MergeFrom(const GetEmailsSetupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetEmailsSetupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetEmailsSetupRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetEmailsSetupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetEmailsSetupRequest::CopyFrom(const GetEmailsSetupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetEmailsSetupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEmailsSetupRequest::IsInitialized() const {
  return true;
}

void GetEmailsSetupRequest::InternalSwap(GetEmailsSetupRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetEmailsSetupRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetEmailsSetupResponse_EmailTemplate::InitAsDefaultInstance() {
}
class GetEmailsSetupResponse_EmailTemplate::_Internal {
 public:
};

GetEmailsSetupResponse_EmailTemplate::GetEmailsSetupResponse_EmailTemplate(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailTemplate)
}
GetEmailsSetupResponse_EmailTemplate::GetEmailsSetupResponse_EmailTemplate(const GetEmailsSetupResponse_EmailTemplate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_content().empty()) {
    content_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_content(),
      GetArena());
  }
  subject_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subject().empty()) {
    subject_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subject(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailTemplate)
}

void GetEmailsSetupResponse_EmailTemplate::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetEmailsSetupResponse_EmailTemplate_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subject_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetEmailsSetupResponse_EmailTemplate::~GetEmailsSetupResponse_EmailTemplate() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailTemplate)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetEmailsSetupResponse_EmailTemplate::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  content_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subject_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetEmailsSetupResponse_EmailTemplate::ArenaDtor(void* object) {
  GetEmailsSetupResponse_EmailTemplate* _this = reinterpret_cast< GetEmailsSetupResponse_EmailTemplate* >(object);
  (void)_this;
}
void GetEmailsSetupResponse_EmailTemplate::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetEmailsSetupResponse_EmailTemplate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetEmailsSetupResponse_EmailTemplate& GetEmailsSetupResponse_EmailTemplate::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetEmailsSetupResponse_EmailTemplate_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetEmailsSetupResponse_EmailTemplate::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailTemplate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subject_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetEmailsSetupResponse_EmailTemplate::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string content = 3[json_name = "content"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_content();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailTemplate.content"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subject = 4[json_name = "subject"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_subject();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailTemplate.subject"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetEmailsSetupResponse_EmailTemplate::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailTemplate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string content = 3[json_name = "content"];
  if (this->content().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content().data(), static_cast<int>(this->_internal_content().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailTemplate.content");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_content(), target);
  }

  // string subject = 4[json_name = "subject"];
  if (this->subject().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subject().data(), static_cast<int>(this->_internal_subject().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailTemplate.subject");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_subject(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailTemplate)
  return target;
}

size_t GetEmailsSetupResponse_EmailTemplate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailTemplate)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string content = 3[json_name = "content"];
  if (this->content().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_content());
  }

  // string subject = 4[json_name = "subject"];
  if (this->subject().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subject());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetEmailsSetupResponse_EmailTemplate::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailTemplate)
  GOOGLE_DCHECK_NE(&from, this);
  const GetEmailsSetupResponse_EmailTemplate* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetEmailsSetupResponse_EmailTemplate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailTemplate)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailTemplate)
    MergeFrom(*source);
  }
}

void GetEmailsSetupResponse_EmailTemplate::MergeFrom(const GetEmailsSetupResponse_EmailTemplate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailTemplate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content().size() > 0) {
    _internal_set_content(from._internal_content());
  }
  if (from.subject().size() > 0) {
    _internal_set_subject(from._internal_subject());
  }
}

void GetEmailsSetupResponse_EmailTemplate::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetEmailsSetupResponse_EmailTemplate::CopyFrom(const GetEmailsSetupResponse_EmailTemplate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEmailsSetupResponse_EmailTemplate::IsInitialized() const {
  return true;
}

void GetEmailsSetupResponse_EmailTemplate::InternalSwap(GetEmailsSetupResponse_EmailTemplate* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  content_.Swap(&other->content_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subject_.Swap(&other->subject_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetEmailsSetupResponse_EmailTemplate::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetEmailsSetupResponse_EmailSender::InitAsDefaultInstance() {
}
class GetEmailsSetupResponse_EmailSender::_Internal {
 public:
};

GetEmailsSetupResponse_EmailSender::GetEmailsSetupResponse_EmailSender(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailSender)
}
GetEmailsSetupResponse_EmailSender::GetEmailsSetupResponse_EmailSender(const GetEmailsSetupResponse_EmailSender& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  email_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_email_address().empty()) {
    email_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_email_address(),
      GetArena());
  }
  smtp_host_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_smtp_host().empty()) {
    smtp_host_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_smtp_host(),
      GetArena());
  }
  smtp_username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_smtp_username().empty()) {
    smtp_username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_smtp_username(),
      GetArena());
  }
  smtp_password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_smtp_password().empty()) {
    smtp_password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_smtp_password(),
      GetArena());
  }
  smtp_port_ = from.smtp_port_;
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailSender)
}

void GetEmailsSetupResponse_EmailSender::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetEmailsSetupResponse_EmailSender_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  email_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  smtp_host_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  smtp_username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  smtp_password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  smtp_port_ = 0u;
}

GetEmailsSetupResponse_EmailSender::~GetEmailsSetupResponse_EmailSender() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailSender)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetEmailsSetupResponse_EmailSender::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  email_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  smtp_host_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  smtp_username_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  smtp_password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetEmailsSetupResponse_EmailSender::ArenaDtor(void* object) {
  GetEmailsSetupResponse_EmailSender* _this = reinterpret_cast< GetEmailsSetupResponse_EmailSender* >(object);
  (void)_this;
}
void GetEmailsSetupResponse_EmailSender::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetEmailsSetupResponse_EmailSender::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetEmailsSetupResponse_EmailSender& GetEmailsSetupResponse_EmailSender::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetEmailsSetupResponse_EmailSender_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetEmailsSetupResponse_EmailSender::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailSender)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  email_address_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  smtp_host_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  smtp_username_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  smtp_password_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  smtp_port_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetEmailsSetupResponse_EmailSender::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string email_address = 1[json_name = "emailAddress"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_email_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailSender.email_address"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string smtp_host = 2[json_name = "smtpHost"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_smtp_host();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailSender.smtp_host"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 smtp_port = 3[json_name = "smtpPort"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          smtp_port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string smtp_username = 4[json_name = "smtpUsername"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_smtp_username();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailSender.smtp_username"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string smtp_password = 5[json_name = "smtpPassword"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_smtp_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailSender.smtp_password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetEmailsSetupResponse_EmailSender::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailSender)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string email_address = 1[json_name = "emailAddress"];
  if (this->email_address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email_address().data(), static_cast<int>(this->_internal_email_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailSender.email_address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_email_address(), target);
  }

  // string smtp_host = 2[json_name = "smtpHost"];
  if (this->smtp_host().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_smtp_host().data(), static_cast<int>(this->_internal_smtp_host().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailSender.smtp_host");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_smtp_host(), target);
  }

  // uint32 smtp_port = 3[json_name = "smtpPort"];
  if (this->smtp_port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_smtp_port(), target);
  }

  // string smtp_username = 4[json_name = "smtpUsername"];
  if (this->smtp_username().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_smtp_username().data(), static_cast<int>(this->_internal_smtp_username().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailSender.smtp_username");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_smtp_username(), target);
  }

  // string smtp_password = 5[json_name = "smtpPassword"];
  if (this->smtp_password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_smtp_password().data(), static_cast<int>(this->_internal_smtp_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailSender.smtp_password");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_smtp_password(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailSender)
  return target;
}

size_t GetEmailsSetupResponse_EmailSender::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailSender)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string email_address = 1[json_name = "emailAddress"];
  if (this->email_address().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email_address());
  }

  // string smtp_host = 2[json_name = "smtpHost"];
  if (this->smtp_host().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_smtp_host());
  }

  // string smtp_username = 4[json_name = "smtpUsername"];
  if (this->smtp_username().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_smtp_username());
  }

  // string smtp_password = 5[json_name = "smtpPassword"];
  if (this->smtp_password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_smtp_password());
  }

  // uint32 smtp_port = 3[json_name = "smtpPort"];
  if (this->smtp_port() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_smtp_port());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetEmailsSetupResponse_EmailSender::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailSender)
  GOOGLE_DCHECK_NE(&from, this);
  const GetEmailsSetupResponse_EmailSender* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetEmailsSetupResponse_EmailSender>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailSender)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailSender)
    MergeFrom(*source);
  }
}

void GetEmailsSetupResponse_EmailSender::MergeFrom(const GetEmailsSetupResponse_EmailSender& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailSender)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.email_address().size() > 0) {
    _internal_set_email_address(from._internal_email_address());
  }
  if (from.smtp_host().size() > 0) {
    _internal_set_smtp_host(from._internal_smtp_host());
  }
  if (from.smtp_username().size() > 0) {
    _internal_set_smtp_username(from._internal_smtp_username());
  }
  if (from.smtp_password().size() > 0) {
    _internal_set_smtp_password(from._internal_smtp_password());
  }
  if (from.smtp_port() != 0) {
    _internal_set_smtp_port(from._internal_smtp_port());
  }
}

void GetEmailsSetupResponse_EmailSender::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailSender)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetEmailsSetupResponse_EmailSender::CopyFrom(const GetEmailsSetupResponse_EmailSender& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailSender)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEmailsSetupResponse_EmailSender::IsInitialized() const {
  return true;
}

void GetEmailsSetupResponse_EmailSender::InternalSwap(GetEmailsSetupResponse_EmailSender* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  email_address_.Swap(&other->email_address_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  smtp_host_.Swap(&other->smtp_host_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  smtp_username_.Swap(&other->smtp_username_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  smtp_password_.Swap(&other->smtp_password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(smtp_port_, other->smtp_port_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetEmailsSetupResponse_EmailSender::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetEmailsSetupResponse::InitAsDefaultInstance() {
  ::depot::devtools::auth::v0::identity::admin::_GetEmailsSetupResponse_default_instance_._instance.get_mutable()->welcome_ = const_cast< ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate*>(
      ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate::internal_default_instance());
  ::depot::devtools::auth::v0::identity::admin::_GetEmailsSetupResponse_default_instance_._instance.get_mutable()->account_verification_ = const_cast< ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate*>(
      ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate::internal_default_instance());
  ::depot::devtools::auth::v0::identity::admin::_GetEmailsSetupResponse_default_instance_._instance.get_mutable()->account_recovery_ = const_cast< ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate*>(
      ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate::internal_default_instance());
  ::depot::devtools::auth::v0::identity::admin::_GetEmailsSetupResponse_default_instance_._instance.get_mutable()->account_recovered_ = const_cast< ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate*>(
      ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate::internal_default_instance());
  ::depot::devtools::auth::v0::identity::admin::_GetEmailsSetupResponse_default_instance_._instance.get_mutable()->otp_ = const_cast< ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate*>(
      ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate::internal_default_instance());
  ::depot::devtools::auth::v0::identity::admin::_GetEmailsSetupResponse_default_instance_._instance.get_mutable()->smtp_ = const_cast< ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailSender*>(
      ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailSender::internal_default_instance());
}
class GetEmailsSetupResponse::_Internal {
 public:
  static const ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate& welcome(const GetEmailsSetupResponse* msg);
  static const ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate& account_verification(const GetEmailsSetupResponse* msg);
  static const ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate& account_recovery(const GetEmailsSetupResponse* msg);
  static const ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate& account_recovered(const GetEmailsSetupResponse* msg);
  static const ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate& otp(const GetEmailsSetupResponse* msg);
  static const ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailSender& smtp(const GetEmailsSetupResponse* msg);
};

const ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate&
GetEmailsSetupResponse::_Internal::welcome(const GetEmailsSetupResponse* msg) {
  return *msg->welcome_;
}
const ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate&
GetEmailsSetupResponse::_Internal::account_verification(const GetEmailsSetupResponse* msg) {
  return *msg->account_verification_;
}
const ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate&
GetEmailsSetupResponse::_Internal::account_recovery(const GetEmailsSetupResponse* msg) {
  return *msg->account_recovery_;
}
const ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate&
GetEmailsSetupResponse::_Internal::account_recovered(const GetEmailsSetupResponse* msg) {
  return *msg->account_recovered_;
}
const ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate&
GetEmailsSetupResponse::_Internal::otp(const GetEmailsSetupResponse* msg) {
  return *msg->otp_;
}
const ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailSender&
GetEmailsSetupResponse::_Internal::smtp(const GetEmailsSetupResponse* msg) {
  return *msg->smtp_;
}
GetEmailsSetupResponse::GetEmailsSetupResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse)
}
GetEmailsSetupResponse::GetEmailsSetupResponse(const GetEmailsSetupResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_project_id().empty()) {
    project_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_project_id(),
      GetArena());
  }
  if (from._internal_has_welcome()) {
    welcome_ = new ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate(*from.welcome_);
  } else {
    welcome_ = nullptr;
  }
  if (from._internal_has_account_verification()) {
    account_verification_ = new ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate(*from.account_verification_);
  } else {
    account_verification_ = nullptr;
  }
  if (from._internal_has_account_recovery()) {
    account_recovery_ = new ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate(*from.account_recovery_);
  } else {
    account_recovery_ = nullptr;
  }
  if (from._internal_has_account_recovered()) {
    account_recovered_ = new ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate(*from.account_recovered_);
  } else {
    account_recovered_ = nullptr;
  }
  if (from._internal_has_otp()) {
    otp_ = new ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate(*from.otp_);
  } else {
    otp_ = nullptr;
  }
  if (from._internal_has_smtp()) {
    smtp_ = new ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailSender(*from.smtp_);
  } else {
    smtp_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse)
}

void GetEmailsSetupResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetEmailsSetupResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  project_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&welcome_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&smtp_) -
      reinterpret_cast<char*>(&welcome_)) + sizeof(smtp_));
}

GetEmailsSetupResponse::~GetEmailsSetupResponse() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetEmailsSetupResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  project_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete welcome_;
  if (this != internal_default_instance()) delete account_verification_;
  if (this != internal_default_instance()) delete account_recovery_;
  if (this != internal_default_instance()) delete account_recovered_;
  if (this != internal_default_instance()) delete otp_;
  if (this != internal_default_instance()) delete smtp_;
}

void GetEmailsSetupResponse::ArenaDtor(void* object) {
  GetEmailsSetupResponse* _this = reinterpret_cast< GetEmailsSetupResponse* >(object);
  (void)_this;
}
void GetEmailsSetupResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetEmailsSetupResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetEmailsSetupResponse& GetEmailsSetupResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetEmailsSetupResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetEmailsSetupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && welcome_ != nullptr) {
    delete welcome_;
  }
  welcome_ = nullptr;
  if (GetArena() == nullptr && account_verification_ != nullptr) {
    delete account_verification_;
  }
  account_verification_ = nullptr;
  if (GetArena() == nullptr && account_recovery_ != nullptr) {
    delete account_recovery_;
  }
  account_recovery_ = nullptr;
  if (GetArena() == nullptr && account_recovered_ != nullptr) {
    delete account_recovered_;
  }
  account_recovered_ = nullptr;
  if (GetArena() == nullptr && otp_ != nullptr) {
    delete otp_;
  }
  otp_ = nullptr;
  if (GetArena() == nullptr && smtp_ != nullptr) {
    delete smtp_;
  }
  smtp_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetEmailsSetupResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailTemplate welcome = 1[json_name = "welcome"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_welcome(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailTemplate account_verification = 2[json_name = "accountVerification"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_account_verification(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailTemplate account_recovery = 3[json_name = "accountRecovery"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_account_recovery(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailTemplate account_recovered = 4[json_name = "accountRecovered"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_account_recovered(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailTemplate otp = 5[json_name = "otp"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_otp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailSender smtp = 6[json_name = "smtp"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_smtp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string project_id = 7[json_name = "projectId"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_project_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.project_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetEmailsSetupResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailTemplate welcome = 1[json_name = "welcome"];
  if (this->has_welcome()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::welcome(this), target, stream);
  }

  // .depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailTemplate account_verification = 2[json_name = "accountVerification"];
  if (this->has_account_verification()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::account_verification(this), target, stream);
  }

  // .depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailTemplate account_recovery = 3[json_name = "accountRecovery"];
  if (this->has_account_recovery()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::account_recovery(this), target, stream);
  }

  // .depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailTemplate account_recovered = 4[json_name = "accountRecovered"];
  if (this->has_account_recovered()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::account_recovered(this), target, stream);
  }

  // .depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailTemplate otp = 5[json_name = "otp"];
  if (this->has_otp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::otp(this), target, stream);
  }

  // .depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailSender smtp = 6[json_name = "smtp"];
  if (this->has_smtp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::smtp(this), target, stream);
  }

  // string project_id = 7[json_name = "projectId"];
  if (this->project_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_project_id().data(), static_cast<int>(this->_internal_project_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.project_id");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_project_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse)
  return target;
}

size_t GetEmailsSetupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 7[json_name = "projectId"];
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_project_id());
  }

  // .depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailTemplate welcome = 1[json_name = "welcome"];
  if (this->has_welcome()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *welcome_);
  }

  // .depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailTemplate account_verification = 2[json_name = "accountVerification"];
  if (this->has_account_verification()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *account_verification_);
  }

  // .depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailTemplate account_recovery = 3[json_name = "accountRecovery"];
  if (this->has_account_recovery()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *account_recovery_);
  }

  // .depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailTemplate account_recovered = 4[json_name = "accountRecovered"];
  if (this->has_account_recovered()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *account_recovered_);
  }

  // .depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailTemplate otp = 5[json_name = "otp"];
  if (this->has_otp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *otp_);
  }

  // .depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailSender smtp = 6[json_name = "smtp"];
  if (this->has_smtp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *smtp_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetEmailsSetupResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetEmailsSetupResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetEmailsSetupResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse)
    MergeFrom(*source);
  }
}

void GetEmailsSetupResponse::MergeFrom(const GetEmailsSetupResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {
    _internal_set_project_id(from._internal_project_id());
  }
  if (from.has_welcome()) {
    _internal_mutable_welcome()->::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate::MergeFrom(from._internal_welcome());
  }
  if (from.has_account_verification()) {
    _internal_mutable_account_verification()->::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate::MergeFrom(from._internal_account_verification());
  }
  if (from.has_account_recovery()) {
    _internal_mutable_account_recovery()->::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate::MergeFrom(from._internal_account_recovery());
  }
  if (from.has_account_recovered()) {
    _internal_mutable_account_recovered()->::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate::MergeFrom(from._internal_account_recovered());
  }
  if (from.has_otp()) {
    _internal_mutable_otp()->::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate::MergeFrom(from._internal_otp());
  }
  if (from.has_smtp()) {
    _internal_mutable_smtp()->::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailSender::MergeFrom(from._internal_smtp());
  }
}

void GetEmailsSetupResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetEmailsSetupResponse::CopyFrom(const GetEmailsSetupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEmailsSetupResponse::IsInitialized() const {
  return true;
}

void GetEmailsSetupResponse::InternalSwap(GetEmailsSetupResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  project_id_.Swap(&other->project_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetEmailsSetupResponse, smtp_)
      + sizeof(GetEmailsSetupResponse::smtp_)
      - PROTOBUF_FIELD_OFFSET(GetEmailsSetupResponse, welcome_)>(
          reinterpret_cast<char*>(&welcome_),
          reinterpret_cast<char*>(&other->welcome_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetEmailsSetupResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateEmailsSetupRequest_EmailTemplate::InitAsDefaultInstance() {
}
class UpdateEmailsSetupRequest_EmailTemplate::_Internal {
 public:
};

UpdateEmailsSetupRequest_EmailTemplate::UpdateEmailsSetupRequest_EmailTemplate(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailTemplate)
}
UpdateEmailsSetupRequest_EmailTemplate::UpdateEmailsSetupRequest_EmailTemplate(const UpdateEmailsSetupRequest_EmailTemplate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_content().empty()) {
    content_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_content(),
      GetArena());
  }
  subject_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subject().empty()) {
    subject_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subject(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailTemplate)
}

void UpdateEmailsSetupRequest_EmailTemplate::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateEmailsSetupRequest_EmailTemplate_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subject_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UpdateEmailsSetupRequest_EmailTemplate::~UpdateEmailsSetupRequest_EmailTemplate() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailTemplate)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateEmailsSetupRequest_EmailTemplate::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  content_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subject_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpdateEmailsSetupRequest_EmailTemplate::ArenaDtor(void* object) {
  UpdateEmailsSetupRequest_EmailTemplate* _this = reinterpret_cast< UpdateEmailsSetupRequest_EmailTemplate* >(object);
  (void)_this;
}
void UpdateEmailsSetupRequest_EmailTemplate::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateEmailsSetupRequest_EmailTemplate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateEmailsSetupRequest_EmailTemplate& UpdateEmailsSetupRequest_EmailTemplate::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateEmailsSetupRequest_EmailTemplate_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void UpdateEmailsSetupRequest_EmailTemplate::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailTemplate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subject_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateEmailsSetupRequest_EmailTemplate::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string content = 1[json_name = "content"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_content();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailTemplate.content"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subject = 2[json_name = "subject"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_subject();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailTemplate.subject"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateEmailsSetupRequest_EmailTemplate::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailTemplate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string content = 1[json_name = "content"];
  if (this->content().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content().data(), static_cast<int>(this->_internal_content().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailTemplate.content");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_content(), target);
  }

  // string subject = 2[json_name = "subject"];
  if (this->subject().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subject().data(), static_cast<int>(this->_internal_subject().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailTemplate.subject");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subject(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailTemplate)
  return target;
}

size_t UpdateEmailsSetupRequest_EmailTemplate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailTemplate)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string content = 1[json_name = "content"];
  if (this->content().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_content());
  }

  // string subject = 2[json_name = "subject"];
  if (this->subject().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subject());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateEmailsSetupRequest_EmailTemplate::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailTemplate)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateEmailsSetupRequest_EmailTemplate* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateEmailsSetupRequest_EmailTemplate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailTemplate)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailTemplate)
    MergeFrom(*source);
  }
}

void UpdateEmailsSetupRequest_EmailTemplate::MergeFrom(const UpdateEmailsSetupRequest_EmailTemplate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailTemplate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content().size() > 0) {
    _internal_set_content(from._internal_content());
  }
  if (from.subject().size() > 0) {
    _internal_set_subject(from._internal_subject());
  }
}

void UpdateEmailsSetupRequest_EmailTemplate::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateEmailsSetupRequest_EmailTemplate::CopyFrom(const UpdateEmailsSetupRequest_EmailTemplate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateEmailsSetupRequest_EmailTemplate::IsInitialized() const {
  return true;
}

void UpdateEmailsSetupRequest_EmailTemplate::InternalSwap(UpdateEmailsSetupRequest_EmailTemplate* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  content_.Swap(&other->content_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subject_.Swap(&other->subject_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateEmailsSetupRequest_EmailTemplate::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateEmailsSetupRequest_EmailSender::InitAsDefaultInstance() {
}
class UpdateEmailsSetupRequest_EmailSender::_Internal {
 public:
};

UpdateEmailsSetupRequest_EmailSender::UpdateEmailsSetupRequest_EmailSender(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailSender)
}
UpdateEmailsSetupRequest_EmailSender::UpdateEmailsSetupRequest_EmailSender(const UpdateEmailsSetupRequest_EmailSender& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  email_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_email_address().empty()) {
    email_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_email_address(),
      GetArena());
  }
  smtp_host_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_smtp_host().empty()) {
    smtp_host_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_smtp_host(),
      GetArena());
  }
  smtp_username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_smtp_username().empty()) {
    smtp_username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_smtp_username(),
      GetArena());
  }
  smtp_password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_smtp_password().empty()) {
    smtp_password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_smtp_password(),
      GetArena());
  }
  smtp_port_ = from.smtp_port_;
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailSender)
}

void UpdateEmailsSetupRequest_EmailSender::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateEmailsSetupRequest_EmailSender_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  email_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  smtp_host_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  smtp_username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  smtp_password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  smtp_port_ = 0u;
}

UpdateEmailsSetupRequest_EmailSender::~UpdateEmailsSetupRequest_EmailSender() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailSender)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateEmailsSetupRequest_EmailSender::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  email_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  smtp_host_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  smtp_username_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  smtp_password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpdateEmailsSetupRequest_EmailSender::ArenaDtor(void* object) {
  UpdateEmailsSetupRequest_EmailSender* _this = reinterpret_cast< UpdateEmailsSetupRequest_EmailSender* >(object);
  (void)_this;
}
void UpdateEmailsSetupRequest_EmailSender::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateEmailsSetupRequest_EmailSender::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateEmailsSetupRequest_EmailSender& UpdateEmailsSetupRequest_EmailSender::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateEmailsSetupRequest_EmailSender_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void UpdateEmailsSetupRequest_EmailSender::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailSender)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  email_address_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  smtp_host_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  smtp_username_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  smtp_password_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  smtp_port_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateEmailsSetupRequest_EmailSender::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string email_address = 1[json_name = "emailAddress"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_email_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailSender.email_address"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string smtp_host = 2[json_name = "smtpHost"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_smtp_host();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailSender.smtp_host"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 smtp_port = 3[json_name = "smtpPort"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          smtp_port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string smtp_username = 4[json_name = "smtpUsername"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_smtp_username();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailSender.smtp_username"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string smtp_password = 5[json_name = "smtpPassword"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_smtp_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailSender.smtp_password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateEmailsSetupRequest_EmailSender::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailSender)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string email_address = 1[json_name = "emailAddress"];
  if (this->email_address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email_address().data(), static_cast<int>(this->_internal_email_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailSender.email_address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_email_address(), target);
  }

  // string smtp_host = 2[json_name = "smtpHost"];
  if (this->smtp_host().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_smtp_host().data(), static_cast<int>(this->_internal_smtp_host().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailSender.smtp_host");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_smtp_host(), target);
  }

  // uint32 smtp_port = 3[json_name = "smtpPort"];
  if (this->smtp_port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_smtp_port(), target);
  }

  // string smtp_username = 4[json_name = "smtpUsername"];
  if (this->smtp_username().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_smtp_username().data(), static_cast<int>(this->_internal_smtp_username().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailSender.smtp_username");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_smtp_username(), target);
  }

  // string smtp_password = 5[json_name = "smtpPassword"];
  if (this->smtp_password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_smtp_password().data(), static_cast<int>(this->_internal_smtp_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailSender.smtp_password");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_smtp_password(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailSender)
  return target;
}

size_t UpdateEmailsSetupRequest_EmailSender::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailSender)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string email_address = 1[json_name = "emailAddress"];
  if (this->email_address().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email_address());
  }

  // string smtp_host = 2[json_name = "smtpHost"];
  if (this->smtp_host().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_smtp_host());
  }

  // string smtp_username = 4[json_name = "smtpUsername"];
  if (this->smtp_username().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_smtp_username());
  }

  // string smtp_password = 5[json_name = "smtpPassword"];
  if (this->smtp_password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_smtp_password());
  }

  // uint32 smtp_port = 3[json_name = "smtpPort"];
  if (this->smtp_port() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_smtp_port());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateEmailsSetupRequest_EmailSender::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailSender)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateEmailsSetupRequest_EmailSender* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateEmailsSetupRequest_EmailSender>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailSender)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailSender)
    MergeFrom(*source);
  }
}

void UpdateEmailsSetupRequest_EmailSender::MergeFrom(const UpdateEmailsSetupRequest_EmailSender& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailSender)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.email_address().size() > 0) {
    _internal_set_email_address(from._internal_email_address());
  }
  if (from.smtp_host().size() > 0) {
    _internal_set_smtp_host(from._internal_smtp_host());
  }
  if (from.smtp_username().size() > 0) {
    _internal_set_smtp_username(from._internal_smtp_username());
  }
  if (from.smtp_password().size() > 0) {
    _internal_set_smtp_password(from._internal_smtp_password());
  }
  if (from.smtp_port() != 0) {
    _internal_set_smtp_port(from._internal_smtp_port());
  }
}

void UpdateEmailsSetupRequest_EmailSender::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailSender)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateEmailsSetupRequest_EmailSender::CopyFrom(const UpdateEmailsSetupRequest_EmailSender& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailSender)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateEmailsSetupRequest_EmailSender::IsInitialized() const {
  return true;
}

void UpdateEmailsSetupRequest_EmailSender::InternalSwap(UpdateEmailsSetupRequest_EmailSender* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  email_address_.Swap(&other->email_address_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  smtp_host_.Swap(&other->smtp_host_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  smtp_username_.Swap(&other->smtp_username_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  smtp_password_.Swap(&other->smtp_password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(smtp_port_, other->smtp_port_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateEmailsSetupRequest_EmailSender::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateEmailsSetupRequest::InitAsDefaultInstance() {
  ::depot::devtools::auth::v0::identity::admin::_UpdateEmailsSetupRequest_default_instance_._instance.get_mutable()->welcome_ = const_cast< ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate*>(
      ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate::internal_default_instance());
  ::depot::devtools::auth::v0::identity::admin::_UpdateEmailsSetupRequest_default_instance_._instance.get_mutable()->account_verification_ = const_cast< ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate*>(
      ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate::internal_default_instance());
  ::depot::devtools::auth::v0::identity::admin::_UpdateEmailsSetupRequest_default_instance_._instance.get_mutable()->account_recovery_ = const_cast< ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate*>(
      ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate::internal_default_instance());
  ::depot::devtools::auth::v0::identity::admin::_UpdateEmailsSetupRequest_default_instance_._instance.get_mutable()->account_recovered_ = const_cast< ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate*>(
      ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate::internal_default_instance());
  ::depot::devtools::auth::v0::identity::admin::_UpdateEmailsSetupRequest_default_instance_._instance.get_mutable()->otp_ = const_cast< ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate*>(
      ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate::internal_default_instance());
  ::depot::devtools::auth::v0::identity::admin::_UpdateEmailsSetupRequest_default_instance_._instance.get_mutable()->smtp_ = const_cast< ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailSender*>(
      ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailSender::internal_default_instance());
}
class UpdateEmailsSetupRequest::_Internal {
 public:
  static const ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate& welcome(const UpdateEmailsSetupRequest* msg);
  static const ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate& account_verification(const UpdateEmailsSetupRequest* msg);
  static const ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate& account_recovery(const UpdateEmailsSetupRequest* msg);
  static const ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate& account_recovered(const UpdateEmailsSetupRequest* msg);
  static const ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate& otp(const UpdateEmailsSetupRequest* msg);
  static const ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailSender& smtp(const UpdateEmailsSetupRequest* msg);
};

const ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate&
UpdateEmailsSetupRequest::_Internal::welcome(const UpdateEmailsSetupRequest* msg) {
  return *msg->welcome_;
}
const ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate&
UpdateEmailsSetupRequest::_Internal::account_verification(const UpdateEmailsSetupRequest* msg) {
  return *msg->account_verification_;
}
const ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate&
UpdateEmailsSetupRequest::_Internal::account_recovery(const UpdateEmailsSetupRequest* msg) {
  return *msg->account_recovery_;
}
const ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate&
UpdateEmailsSetupRequest::_Internal::account_recovered(const UpdateEmailsSetupRequest* msg) {
  return *msg->account_recovered_;
}
const ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate&
UpdateEmailsSetupRequest::_Internal::otp(const UpdateEmailsSetupRequest* msg) {
  return *msg->otp_;
}
const ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailSender&
UpdateEmailsSetupRequest::_Internal::smtp(const UpdateEmailsSetupRequest* msg) {
  return *msg->smtp_;
}
UpdateEmailsSetupRequest::UpdateEmailsSetupRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest)
}
UpdateEmailsSetupRequest::UpdateEmailsSetupRequest(const UpdateEmailsSetupRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_welcome()) {
    welcome_ = new ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate(*from.welcome_);
  } else {
    welcome_ = nullptr;
  }
  if (from._internal_has_account_verification()) {
    account_verification_ = new ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate(*from.account_verification_);
  } else {
    account_verification_ = nullptr;
  }
  if (from._internal_has_account_recovery()) {
    account_recovery_ = new ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate(*from.account_recovery_);
  } else {
    account_recovery_ = nullptr;
  }
  if (from._internal_has_account_recovered()) {
    account_recovered_ = new ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate(*from.account_recovered_);
  } else {
    account_recovered_ = nullptr;
  }
  if (from._internal_has_otp()) {
    otp_ = new ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate(*from.otp_);
  } else {
    otp_ = nullptr;
  }
  if (from._internal_has_smtp()) {
    smtp_ = new ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailSender(*from.smtp_);
  } else {
    smtp_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest)
}

void UpdateEmailsSetupRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateEmailsSetupRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  ::memset(&welcome_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&smtp_) -
      reinterpret_cast<char*>(&welcome_)) + sizeof(smtp_));
}

UpdateEmailsSetupRequest::~UpdateEmailsSetupRequest() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateEmailsSetupRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete welcome_;
  if (this != internal_default_instance()) delete account_verification_;
  if (this != internal_default_instance()) delete account_recovery_;
  if (this != internal_default_instance()) delete account_recovered_;
  if (this != internal_default_instance()) delete otp_;
  if (this != internal_default_instance()) delete smtp_;
}

void UpdateEmailsSetupRequest::ArenaDtor(void* object) {
  UpdateEmailsSetupRequest* _this = reinterpret_cast< UpdateEmailsSetupRequest* >(object);
  (void)_this;
}
void UpdateEmailsSetupRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateEmailsSetupRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateEmailsSetupRequest& UpdateEmailsSetupRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateEmailsSetupRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void UpdateEmailsSetupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && welcome_ != nullptr) {
    delete welcome_;
  }
  welcome_ = nullptr;
  if (GetArena() == nullptr && account_verification_ != nullptr) {
    delete account_verification_;
  }
  account_verification_ = nullptr;
  if (GetArena() == nullptr && account_recovery_ != nullptr) {
    delete account_recovery_;
  }
  account_recovery_ = nullptr;
  if (GetArena() == nullptr && account_recovered_ != nullptr) {
    delete account_recovered_;
  }
  account_recovered_ = nullptr;
  if (GetArena() == nullptr && otp_ != nullptr) {
    delete otp_;
  }
  otp_ = nullptr;
  if (GetArena() == nullptr && smtp_ != nullptr) {
    delete smtp_;
  }
  smtp_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateEmailsSetupRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailTemplate welcome = 1[json_name = "welcome"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_welcome(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailTemplate account_verification = 2[json_name = "accountVerification"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_account_verification(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailTemplate account_recovery = 3[json_name = "accountRecovery"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_account_recovery(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailTemplate account_recovered = 4[json_name = "accountRecovered"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_account_recovered(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailTemplate otp = 5[json_name = "otp"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_otp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailSender smtp = 6[json_name = "smtp"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_smtp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateEmailsSetupRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailTemplate welcome = 1[json_name = "welcome"];
  if (this->has_welcome()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::welcome(this), target, stream);
  }

  // .depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailTemplate account_verification = 2[json_name = "accountVerification"];
  if (this->has_account_verification()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::account_verification(this), target, stream);
  }

  // .depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailTemplate account_recovery = 3[json_name = "accountRecovery"];
  if (this->has_account_recovery()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::account_recovery(this), target, stream);
  }

  // .depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailTemplate account_recovered = 4[json_name = "accountRecovered"];
  if (this->has_account_recovered()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::account_recovered(this), target, stream);
  }

  // .depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailTemplate otp = 5[json_name = "otp"];
  if (this->has_otp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::otp(this), target, stream);
  }

  // .depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailSender smtp = 6[json_name = "smtp"];
  if (this->has_smtp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::smtp(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest)
  return target;
}

size_t UpdateEmailsSetupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailTemplate welcome = 1[json_name = "welcome"];
  if (this->has_welcome()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *welcome_);
  }

  // .depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailTemplate account_verification = 2[json_name = "accountVerification"];
  if (this->has_account_verification()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *account_verification_);
  }

  // .depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailTemplate account_recovery = 3[json_name = "accountRecovery"];
  if (this->has_account_recovery()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *account_recovery_);
  }

  // .depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailTemplate account_recovered = 4[json_name = "accountRecovered"];
  if (this->has_account_recovered()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *account_recovered_);
  }

  // .depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailTemplate otp = 5[json_name = "otp"];
  if (this->has_otp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *otp_);
  }

  // .depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailSender smtp = 6[json_name = "smtp"];
  if (this->has_smtp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *smtp_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateEmailsSetupRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateEmailsSetupRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateEmailsSetupRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest)
    MergeFrom(*source);
  }
}

void UpdateEmailsSetupRequest::MergeFrom(const UpdateEmailsSetupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_welcome()) {
    _internal_mutable_welcome()->::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate::MergeFrom(from._internal_welcome());
  }
  if (from.has_account_verification()) {
    _internal_mutable_account_verification()->::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate::MergeFrom(from._internal_account_verification());
  }
  if (from.has_account_recovery()) {
    _internal_mutable_account_recovery()->::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate::MergeFrom(from._internal_account_recovery());
  }
  if (from.has_account_recovered()) {
    _internal_mutable_account_recovered()->::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate::MergeFrom(from._internal_account_recovered());
  }
  if (from.has_otp()) {
    _internal_mutable_otp()->::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate::MergeFrom(from._internal_otp());
  }
  if (from.has_smtp()) {
    _internal_mutable_smtp()->::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailSender::MergeFrom(from._internal_smtp());
  }
}

void UpdateEmailsSetupRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateEmailsSetupRequest::CopyFrom(const UpdateEmailsSetupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateEmailsSetupRequest::IsInitialized() const {
  return true;
}

void UpdateEmailsSetupRequest::InternalSwap(UpdateEmailsSetupRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateEmailsSetupRequest, smtp_)
      + sizeof(UpdateEmailsSetupRequest::smtp_)
      - PROTOBUF_FIELD_OFFSET(UpdateEmailsSetupRequest, welcome_)>(
          reinterpret_cast<char*>(&welcome_),
          reinterpret_cast<char*>(&other->welcome_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateEmailsSetupRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateEmailsSetupResponse::InitAsDefaultInstance() {
}
class UpdateEmailsSetupResponse::_Internal {
 public:
};

UpdateEmailsSetupResponse::UpdateEmailsSetupResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupResponse)
}
UpdateEmailsSetupResponse::UpdateEmailsSetupResponse(const UpdateEmailsSetupResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupResponse)
}

void UpdateEmailsSetupResponse::SharedCtor() {
}

UpdateEmailsSetupResponse::~UpdateEmailsSetupResponse() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateEmailsSetupResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UpdateEmailsSetupResponse::ArenaDtor(void* object) {
  UpdateEmailsSetupResponse* _this = reinterpret_cast< UpdateEmailsSetupResponse* >(object);
  (void)_this;
}
void UpdateEmailsSetupResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateEmailsSetupResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateEmailsSetupResponse& UpdateEmailsSetupResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateEmailsSetupResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void UpdateEmailsSetupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateEmailsSetupResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateEmailsSetupResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupResponse)
  return target;
}

size_t UpdateEmailsSetupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateEmailsSetupResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateEmailsSetupResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateEmailsSetupResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupResponse)
    MergeFrom(*source);
  }
}

void UpdateEmailsSetupResponse::MergeFrom(const UpdateEmailsSetupResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UpdateEmailsSetupResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateEmailsSetupResponse::CopyFrom(const UpdateEmailsSetupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateEmailsSetupResponse::IsInitialized() const {
  return true;
}

void UpdateEmailsSetupResponse::InternalSwap(UpdateEmailsSetupResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateEmailsSetupResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetUserBaseStatisticsRequest::InitAsDefaultInstance() {
  ::depot::devtools::auth::v0::identity::admin::_GetUserBaseStatisticsRequest_default_instance_._instance.get_mutable()->lifetime_start_at_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::depot::devtools::auth::v0::identity::admin::_GetUserBaseStatisticsRequest_default_instance_._instance.get_mutable()->lifetime_end_at_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
}
class GetUserBaseStatisticsRequest::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& lifetime_start_at(const GetUserBaseStatisticsRequest* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& lifetime_end_at(const GetUserBaseStatisticsRequest* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
GetUserBaseStatisticsRequest::_Internal::lifetime_start_at(const GetUserBaseStatisticsRequest* msg) {
  return *msg->lifetime_start_at_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
GetUserBaseStatisticsRequest::_Internal::lifetime_end_at(const GetUserBaseStatisticsRequest* msg) {
  return *msg->lifetime_end_at_;
}
void GetUserBaseStatisticsRequest::clear_lifetime_start_at() {
  if (GetArena() == nullptr && lifetime_start_at_ != nullptr) {
    delete lifetime_start_at_;
  }
  lifetime_start_at_ = nullptr;
}
void GetUserBaseStatisticsRequest::clear_lifetime_end_at() {
  if (GetArena() == nullptr && lifetime_end_at_ != nullptr) {
    delete lifetime_end_at_;
  }
  lifetime_end_at_ = nullptr;
}
GetUserBaseStatisticsRequest::GetUserBaseStatisticsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsRequest)
}
GetUserBaseStatisticsRequest::GetUserBaseStatisticsRequest(const GetUserBaseStatisticsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_lifetime_start_at()) {
    lifetime_start_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.lifetime_start_at_);
  } else {
    lifetime_start_at_ = nullptr;
  }
  if (from._internal_has_lifetime_end_at()) {
    lifetime_end_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.lifetime_end_at_);
  } else {
    lifetime_end_at_ = nullptr;
  }
  days_before_ = from.days_before_;
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsRequest)
}

void GetUserBaseStatisticsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetUserBaseStatisticsRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  ::memset(&lifetime_start_at_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&days_before_) -
      reinterpret_cast<char*>(&lifetime_start_at_)) + sizeof(days_before_));
}

GetUserBaseStatisticsRequest::~GetUserBaseStatisticsRequest() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetUserBaseStatisticsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete lifetime_start_at_;
  if (this != internal_default_instance()) delete lifetime_end_at_;
}

void GetUserBaseStatisticsRequest::ArenaDtor(void* object) {
  GetUserBaseStatisticsRequest* _this = reinterpret_cast< GetUserBaseStatisticsRequest* >(object);
  (void)_this;
}
void GetUserBaseStatisticsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetUserBaseStatisticsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetUserBaseStatisticsRequest& GetUserBaseStatisticsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetUserBaseStatisticsRequest_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetUserBaseStatisticsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && lifetime_start_at_ != nullptr) {
    delete lifetime_start_at_;
  }
  lifetime_start_at_ = nullptr;
  if (GetArena() == nullptr && lifetime_end_at_ != nullptr) {
    delete lifetime_end_at_;
  }
  lifetime_end_at_ = nullptr;
  days_before_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetUserBaseStatisticsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 days_before = 1[json_name = "daysBefore"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          days_before_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp lifetime_start_at = 2[json_name = "lifetimeStartAt"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_lifetime_start_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp lifetime_end_at = 3[json_name = "lifetimeEndAt"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_lifetime_end_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetUserBaseStatisticsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 days_before = 1[json_name = "daysBefore"];
  if (this->days_before() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_days_before(), target);
  }

  // .google.protobuf.Timestamp lifetime_start_at = 2[json_name = "lifetimeStartAt"];
  if (this->has_lifetime_start_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::lifetime_start_at(this), target, stream);
  }

  // .google.protobuf.Timestamp lifetime_end_at = 3[json_name = "lifetimeEndAt"];
  if (this->has_lifetime_end_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::lifetime_end_at(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsRequest)
  return target;
}

size_t GetUserBaseStatisticsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Timestamp lifetime_start_at = 2[json_name = "lifetimeStartAt"];
  if (this->has_lifetime_start_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *lifetime_start_at_);
  }

  // .google.protobuf.Timestamp lifetime_end_at = 3[json_name = "lifetimeEndAt"];
  if (this->has_lifetime_end_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *lifetime_end_at_);
  }

  // uint32 days_before = 1[json_name = "daysBefore"];
  if (this->days_before() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_days_before());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetUserBaseStatisticsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetUserBaseStatisticsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetUserBaseStatisticsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsRequest)
    MergeFrom(*source);
  }
}

void GetUserBaseStatisticsRequest::MergeFrom(const GetUserBaseStatisticsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_lifetime_start_at()) {
    _internal_mutable_lifetime_start_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_lifetime_start_at());
  }
  if (from.has_lifetime_end_at()) {
    _internal_mutable_lifetime_end_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_lifetime_end_at());
  }
  if (from.days_before() != 0) {
    _internal_set_days_before(from._internal_days_before());
  }
}

void GetUserBaseStatisticsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetUserBaseStatisticsRequest::CopyFrom(const GetUserBaseStatisticsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUserBaseStatisticsRequest::IsInitialized() const {
  return true;
}

void GetUserBaseStatisticsRequest::InternalSwap(GetUserBaseStatisticsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetUserBaseStatisticsRequest, days_before_)
      + sizeof(GetUserBaseStatisticsRequest::days_before_)
      - PROTOBUF_FIELD_OFFSET(GetUserBaseStatisticsRequest, lifetime_start_at_)>(
          reinterpret_cast<char*>(&lifetime_start_at_),
          reinterpret_cast<char*>(&other->lifetime_start_at_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetUserBaseStatisticsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

GetUserBaseStatisticsResponse_UsersPerDayEntry_DoNotUse::GetUserBaseStatisticsResponse_UsersPerDayEntry_DoNotUse() {}
GetUserBaseStatisticsResponse_UsersPerDayEntry_DoNotUse::GetUserBaseStatisticsResponse_UsersPerDayEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetUserBaseStatisticsResponse_UsersPerDayEntry_DoNotUse::MergeFrom(const GetUserBaseStatisticsResponse_UsersPerDayEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetUserBaseStatisticsResponse_UsersPerDayEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void GetUserBaseStatisticsResponse_UsersPerDayEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

GetUserBaseStatisticsResponse_SessionsPerDayEntry_DoNotUse::GetUserBaseStatisticsResponse_SessionsPerDayEntry_DoNotUse() {}
GetUserBaseStatisticsResponse_SessionsPerDayEntry_DoNotUse::GetUserBaseStatisticsResponse_SessionsPerDayEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetUserBaseStatisticsResponse_SessionsPerDayEntry_DoNotUse::MergeFrom(const GetUserBaseStatisticsResponse_SessionsPerDayEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetUserBaseStatisticsResponse_SessionsPerDayEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void GetUserBaseStatisticsResponse_SessionsPerDayEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void GetUserBaseStatisticsResponse::InitAsDefaultInstance() {
}
class GetUserBaseStatisticsResponse::_Internal {
 public:
};

GetUserBaseStatisticsResponse::GetUserBaseStatisticsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  users_per_day_(arena),
  sessions_per_day_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsResponse)
}
GetUserBaseStatisticsResponse::GetUserBaseStatisticsResponse(const GetUserBaseStatisticsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  users_per_day_.MergeFrom(from.users_per_day_);
  sessions_per_day_.MergeFrom(from.sessions_per_day_);
  ::memcpy(&total_users_, &from.total_users_,
    static_cast<size_t>(reinterpret_cast<char*>(&total_lifetime_used_) -
    reinterpret_cast<char*>(&total_users_)) + sizeof(total_lifetime_used_));
  // @@protoc_insertion_point(copy_constructor:depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsResponse)
}

void GetUserBaseStatisticsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetUserBaseStatisticsResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  ::memset(&total_users_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_lifetime_used_) -
      reinterpret_cast<char*>(&total_users_)) + sizeof(total_lifetime_used_));
}

GetUserBaseStatisticsResponse::~GetUserBaseStatisticsResponse() {
  // @@protoc_insertion_point(destructor:depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetUserBaseStatisticsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetUserBaseStatisticsResponse::ArenaDtor(void* object) {
  GetUserBaseStatisticsResponse* _this = reinterpret_cast< GetUserBaseStatisticsResponse* >(object);
  (void)_this;
}
void GetUserBaseStatisticsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetUserBaseStatisticsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetUserBaseStatisticsResponse& GetUserBaseStatisticsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetUserBaseStatisticsResponse_devtools_2fauth_2fv0_2fproto_2fidentity_2fadmin_2fadmin_2eproto.base);
  return *internal_default_instance();
}


void GetUserBaseStatisticsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  users_per_day_.Clear();
  sessions_per_day_.Clear();
  ::memset(&total_users_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_lifetime_used_) -
      reinterpret_cast<char*>(&total_users_)) + sizeof(total_lifetime_used_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetUserBaseStatisticsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 total_users = 1[json_name = "totalUsers"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          total_users_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, int32> users_per_day = 2[json_name = "usersPerDay"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&users_per_day_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // map<string, int32> sessions_per_day = 3[json_name = "sessionsPerDay"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&sessions_per_day_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 total_active_users = 4[json_name = "totalActiveUsers"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          total_active_users_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double total_lifetime_used = 5[json_name = "totalLifetimeUsed"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 41)) {
          total_lifetime_used_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetUserBaseStatisticsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 total_users = 1[json_name = "totalUsers"];
  if (this->total_users() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_total_users(), target);
  }

  // map<string, int32> users_per_day = 2[json_name = "usersPerDay"];
  if (!this->_internal_users_per_day().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::int32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsResponse.UsersPerDayEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_users_per_day().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_users_per_day().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::int32 >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::int32 >::const_iterator
          it = this->_internal_users_per_day().begin();
          it != this->_internal_users_per_day().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetUserBaseStatisticsResponse_UsersPerDayEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::int32 >::const_iterator
          it = this->_internal_users_per_day().begin();
          it != this->_internal_users_per_day().end(); ++it) {
        target = GetUserBaseStatisticsResponse_UsersPerDayEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // map<string, int32> sessions_per_day = 3[json_name = "sessionsPerDay"];
  if (!this->_internal_sessions_per_day().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::int32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsResponse.SessionsPerDayEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_sessions_per_day().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_sessions_per_day().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::int32 >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::int32 >::const_iterator
          it = this->_internal_sessions_per_day().begin();
          it != this->_internal_sessions_per_day().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetUserBaseStatisticsResponse_SessionsPerDayEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::int32 >::const_iterator
          it = this->_internal_sessions_per_day().begin();
          it != this->_internal_sessions_per_day().end(); ++it) {
        target = GetUserBaseStatisticsResponse_SessionsPerDayEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // int32 total_active_users = 4[json_name = "totalActiveUsers"];
  if (this->total_active_users() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_total_active_users(), target);
  }

  // double total_lifetime_used = 5[json_name = "totalLifetimeUsed"];
  if (!(this->total_lifetime_used() <= 0 && this->total_lifetime_used() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(5, this->_internal_total_lifetime_used(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsResponse)
  return target;
}

size_t GetUserBaseStatisticsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, int32> users_per_day = 2[json_name = "usersPerDay"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_users_per_day_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::int32 >::const_iterator
      it = this->_internal_users_per_day().begin();
      it != this->_internal_users_per_day().end(); ++it) {
    total_size += GetUserBaseStatisticsResponse_UsersPerDayEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, int32> sessions_per_day = 3[json_name = "sessionsPerDay"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_sessions_per_day_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::int32 >::const_iterator
      it = this->_internal_sessions_per_day().begin();
      it != this->_internal_sessions_per_day().end(); ++it) {
    total_size += GetUserBaseStatisticsResponse_SessionsPerDayEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // int32 total_users = 1[json_name = "totalUsers"];
  if (this->total_users() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_total_users());
  }

  // int32 total_active_users = 4[json_name = "totalActiveUsers"];
  if (this->total_active_users() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_total_active_users());
  }

  // double total_lifetime_used = 5[json_name = "totalLifetimeUsed"];
  if (!(this->total_lifetime_used() <= 0 && this->total_lifetime_used() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetUserBaseStatisticsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetUserBaseStatisticsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetUserBaseStatisticsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsResponse)
    MergeFrom(*source);
  }
}

void GetUserBaseStatisticsResponse::MergeFrom(const GetUserBaseStatisticsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  users_per_day_.MergeFrom(from.users_per_day_);
  sessions_per_day_.MergeFrom(from.sessions_per_day_);
  if (from.total_users() != 0) {
    _internal_set_total_users(from._internal_total_users());
  }
  if (from.total_active_users() != 0) {
    _internal_set_total_active_users(from._internal_total_active_users());
  }
  if (!(from.total_lifetime_used() <= 0 && from.total_lifetime_used() >= 0)) {
    _internal_set_total_lifetime_used(from._internal_total_lifetime_used());
  }
}

void GetUserBaseStatisticsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetUserBaseStatisticsResponse::CopyFrom(const GetUserBaseStatisticsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUserBaseStatisticsResponse::IsInitialized() const {
  return true;
}

void GetUserBaseStatisticsResponse::InternalSwap(GetUserBaseStatisticsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  users_per_day_.Swap(&other->users_per_day_);
  sessions_per_day_.Swap(&other->sessions_per_day_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetUserBaseStatisticsResponse, total_lifetime_used_)
      + sizeof(GetUserBaseStatisticsResponse::total_lifetime_used_)
      - PROTOBUF_FIELD_OFFSET(GetUserBaseStatisticsResponse, total_users_)>(
          reinterpret_cast<char*>(&total_users_),
          reinterpret_cast<char*>(&other->total_users_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetUserBaseStatisticsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace admin
}  // namespace identity
}  // namespace v0
}  // namespace auth
}  // namespace devtools
}  // namespace depot
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::CreateIdentityRequest* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::CreateIdentityRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::CreateIdentityRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::CreateIdentityResponse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::CreateIdentityResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::CreateIdentityResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetIdentitiesRequest* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetIdentitiesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetIdentitiesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetIdentitiesResponse_Identity* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetIdentitiesResponse_Identity >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetIdentitiesResponse_Identity >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetIdentitiesResponse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetIdentitiesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetIdentitiesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetIdentityRequest* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetIdentityRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetIdentityRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetIdentityResponse_CredentialsIdsEntry_DoNotUse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetIdentityResponse_CredentialsIdsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetIdentityResponse_CredentialsIdsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetIdentityResponse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetIdentityResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetIdentityResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierRequest* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse_Identity_CredentialsIdsEntry_DoNotUse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse_Identity_CredentialsIdsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse_Identity_CredentialsIdsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse_Identity* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse_Identity >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse_Identity >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeRequest* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse_Identity_CredentialsIdsEntry_DoNotUse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse_Identity_CredentialsIdsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse_Identity_CredentialsIdsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse_Identity* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse_Identity >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse_Identity >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::UpdateIdentityRequest* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::UpdateIdentityRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::UpdateIdentityRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::UpdateIdentityResponse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::UpdateIdentityResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::UpdateIdentityResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::DeleteIdentityRequest* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::DeleteIdentityRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::DeleteIdentityRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::DeleteIdentityResponse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::DeleteIdentityResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::DeleteIdentityResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetCredentialsRequest* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetCredentialsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetCredentialsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse_Credential* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse_Credential >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse_Credential >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse_CredentialsEntry_DoNotUse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse_CredentialsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse_CredentialsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::UpdateCredentialRequest* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::UpdateCredentialRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::UpdateCredentialRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::UpdateCredentialResponse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::UpdateCredentialResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::UpdateCredentialResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::CreateConnectionRequest* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::CreateConnectionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::CreateConnectionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::CreateConnectionResponse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::CreateConnectionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::CreateConnectionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetConnectionsRequest* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetConnectionsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetConnectionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse_Connection* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse_Connection >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse_Connection >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::UpdateConnectionRequest* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::UpdateConnectionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::UpdateConnectionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::UpdateConnectionResponse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::UpdateConnectionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::UpdateConnectionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::DeleteConnectionRequest* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::DeleteConnectionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::DeleteConnectionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::DeleteConnectionResponse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::DeleteConnectionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::DeleteConnectionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsRequest* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse_Client >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientResponse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientResponse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::DeleteOAuth2ClientRequest* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::DeleteOAuth2ClientRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::DeleteOAuth2ClientRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::DeleteOAuth2ClientResponse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::DeleteOAuth2ClientResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::DeleteOAuth2ClientResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetAddressesRequest* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetAddressesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetAddressesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetAddressesResponse_Address* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetAddressesResponse_Address >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetAddressesResponse_Address >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetAddressesResponse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetAddressesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetAddressesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetAddressRequest* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetAddressRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetAddressRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetAddressResponse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetAddressResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetAddressResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::UpdateAddressRequest* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::UpdateAddressRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::UpdateAddressRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::UpdateAddressResponse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::UpdateAddressResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::UpdateAddressResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetProfileRequest* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetProfileRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetProfileRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetProfileResponse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetProfileResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetProfileResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::UpdateProfileRequest* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::UpdateProfileRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::UpdateProfileRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::UpdateProfileResponse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::UpdateProfileResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::UpdateProfileResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsRequest* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsResponse_Attempt* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsResponse_Attempt >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsResponse_Attempt >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsResponse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::CreateIdSchemaRequest* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::CreateIdSchemaRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::CreateIdSchemaRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::CreateIdSchemaResponse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::CreateIdSchemaResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::CreateIdSchemaResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetIdSchemasRequest* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetIdSchemasRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetIdSchemasRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetIdSchemasResponse_JsonSchema* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetIdSchemasResponse_JsonSchema >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetIdSchemasResponse_JsonSchema >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetIdSchemasResponse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetIdSchemasResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetIdSchemasResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetIdSchemaRequest* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetIdSchemaRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetIdSchemaRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetIdSchemaResponse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetIdSchemaResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetIdSchemaResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaRequest* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaResponse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaRequest* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaResponse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::MarkDefaultIdSchemaRequest* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::MarkDefaultIdSchemaRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::MarkDefaultIdSchemaRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::MarkDefaultIdSchemaResponse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::MarkDefaultIdSchemaResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::MarkDefaultIdSchemaResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::DeleteIdSchemaRequest* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::DeleteIdSchemaRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::DeleteIdSchemaRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::DeleteIdSchemaResponse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::DeleteIdSchemaResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::DeleteIdSchemaResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupRequest* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailTemplate >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailSender* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailSender >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse_EmailSender >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailTemplate >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailSender* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailSender >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest_EmailSender >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupResponse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsRequest* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse_UsersPerDayEntry_DoNotUse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse_UsersPerDayEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse_UsersPerDayEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse_SessionsPerDayEntry_DoNotUse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse_SessionsPerDayEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse_SessionsPerDayEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse* Arena::CreateMaybeMessage< ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
