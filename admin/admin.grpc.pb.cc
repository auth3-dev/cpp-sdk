// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: admin.proto

#include "admin.pb.h"
#include "admin.grpc.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace depot {
namespace devtools {
namespace auth {
namespace v0 {
namespace identity {
namespace admin {

static const char* Admin_method_names[] = {
  "/depot.devtools.auth.v0.identity.admin.Admin/CreateIdentity",
  "/depot.devtools.auth.v0.identity.admin.Admin/GetIdentity",
  "/depot.devtools.auth.v0.identity.admin.Admin/GetIdentityByIdentifier",
  "/depot.devtools.auth.v0.identity.admin.Admin/GetIdentitiesByAttribute",
  "/depot.devtools.auth.v0.identity.admin.Admin/GetIdentities",
  "/depot.devtools.auth.v0.identity.admin.Admin/UpdateIdentity",
  "/depot.devtools.auth.v0.identity.admin.Admin/DeleteIdentity",
  "/depot.devtools.auth.v0.identity.admin.Admin/GetAddresses",
  "/depot.devtools.auth.v0.identity.admin.Admin/GetAddress",
  "/depot.devtools.auth.v0.identity.admin.Admin/UpdateAddress",
  "/depot.devtools.auth.v0.identity.admin.Admin/GetProfile",
  "/depot.devtools.auth.v0.identity.admin.Admin/UpdateProfile",
  "/depot.devtools.auth.v0.identity.admin.Admin/GetCredentials",
  "/depot.devtools.auth.v0.identity.admin.Admin/UpdateCredential",
  "/depot.devtools.auth.v0.identity.admin.Admin/GetIdentityLoginAttempts",
  "/depot.devtools.auth.v0.identity.admin.Admin/CreateConnection",
  "/depot.devtools.auth.v0.identity.admin.Admin/GetConnections",
  "/depot.devtools.auth.v0.identity.admin.Admin/UpdateConnection",
  "/depot.devtools.auth.v0.identity.admin.Admin/DeleteConnection",
  "/depot.devtools.auth.v0.identity.admin.Admin/CreateIdSchema",
  "/depot.devtools.auth.v0.identity.admin.Admin/GetIdSchemas",
  "/depot.devtools.auth.v0.identity.admin.Admin/GetIdSchema",
  "/depot.devtools.auth.v0.identity.admin.Admin/GetDefaultIdSchema",
  "/depot.devtools.auth.v0.identity.admin.Admin/UpdateIdSchema",
  "/depot.devtools.auth.v0.identity.admin.Admin/MarkDefaultIdSchema",
  "/depot.devtools.auth.v0.identity.admin.Admin/DeleteIdSchema",
  "/depot.devtools.auth.v0.identity.admin.Admin/CreateOAuth2Client",
  "/depot.devtools.auth.v0.identity.admin.Admin/GetOAuth2Clients",
  "/depot.devtools.auth.v0.identity.admin.Admin/UpdateOAuth2Client",
  "/depot.devtools.auth.v0.identity.admin.Admin/DeleteOAuth2Client",
  "/depot.devtools.auth.v0.identity.admin.Admin/GetEmailsSetup",
  "/depot.devtools.auth.v0.identity.admin.Admin/UpdateEmailsSetup",
  "/depot.devtools.auth.v0.identity.admin.Admin/GetUserBaseStatistics",
};

std::unique_ptr< Admin::Stub> Admin::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< Admin::Stub> stub(new Admin::Stub(channel, options));
  return stub;
}

Admin::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_CreateIdentity_(Admin_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetIdentity_(Admin_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetIdentityByIdentifier_(Admin_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetIdentitiesByAttribute_(Admin_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetIdentities_(Admin_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateIdentity_(Admin_method_names[5], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteIdentity_(Admin_method_names[6], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetAddresses_(Admin_method_names[7], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetAddress_(Admin_method_names[8], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateAddress_(Admin_method_names[9], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetProfile_(Admin_method_names[10], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateProfile_(Admin_method_names[11], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetCredentials_(Admin_method_names[12], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateCredential_(Admin_method_names[13], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetIdentityLoginAttempts_(Admin_method_names[14], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateConnection_(Admin_method_names[15], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetConnections_(Admin_method_names[16], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateConnection_(Admin_method_names[17], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteConnection_(Admin_method_names[18], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateIdSchema_(Admin_method_names[19], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetIdSchemas_(Admin_method_names[20], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetIdSchema_(Admin_method_names[21], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetDefaultIdSchema_(Admin_method_names[22], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateIdSchema_(Admin_method_names[23], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_MarkDefaultIdSchema_(Admin_method_names[24], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteIdSchema_(Admin_method_names[25], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateOAuth2Client_(Admin_method_names[26], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetOAuth2Clients_(Admin_method_names[27], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateOAuth2Client_(Admin_method_names[28], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteOAuth2Client_(Admin_method_names[29], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetEmailsSetup_(Admin_method_names[30], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateEmailsSetup_(Admin_method_names[31], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetUserBaseStatistics_(Admin_method_names[32], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status Admin::Stub::CreateIdentity(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::CreateIdentityRequest& request, ::depot::devtools::auth::v0::identity::admin::CreateIdentityResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::depot::devtools::auth::v0::identity::admin::CreateIdentityRequest, ::depot::devtools::auth::v0::identity::admin::CreateIdentityResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateIdentity_, context, request, response);
}

void Admin::Stub::async::CreateIdentity(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::CreateIdentityRequest* request, ::depot::devtools::auth::v0::identity::admin::CreateIdentityResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::depot::devtools::auth::v0::identity::admin::CreateIdentityRequest, ::depot::devtools::auth::v0::identity::admin::CreateIdentityResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateIdentity_, context, request, response, std::move(f));
}

void Admin::Stub::async::CreateIdentity(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::CreateIdentityRequest* request, ::depot::devtools::auth::v0::identity::admin::CreateIdentityResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateIdentity_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::CreateIdentityResponse>* Admin::Stub::PrepareAsyncCreateIdentityRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::CreateIdentityRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::depot::devtools::auth::v0::identity::admin::CreateIdentityResponse, ::depot::devtools::auth::v0::identity::admin::CreateIdentityRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateIdentity_, context, request);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::CreateIdentityResponse>* Admin::Stub::AsyncCreateIdentityRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::CreateIdentityRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateIdentityRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Admin::Stub::GetIdentity(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdentityRequest& request, ::depot::devtools::auth::v0::identity::admin::GetIdentityResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::depot::devtools::auth::v0::identity::admin::GetIdentityRequest, ::depot::devtools::auth::v0::identity::admin::GetIdentityResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetIdentity_, context, request, response);
}

void Admin::Stub::async::GetIdentity(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdentityRequest* request, ::depot::devtools::auth::v0::identity::admin::GetIdentityResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::depot::devtools::auth::v0::identity::admin::GetIdentityRequest, ::depot::devtools::auth::v0::identity::admin::GetIdentityResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetIdentity_, context, request, response, std::move(f));
}

void Admin::Stub::async::GetIdentity(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdentityRequest* request, ::depot::devtools::auth::v0::identity::admin::GetIdentityResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetIdentity_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::GetIdentityResponse>* Admin::Stub::PrepareAsyncGetIdentityRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdentityRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::depot::devtools::auth::v0::identity::admin::GetIdentityResponse, ::depot::devtools::auth::v0::identity::admin::GetIdentityRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetIdentity_, context, request);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::GetIdentityResponse>* Admin::Stub::AsyncGetIdentityRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdentityRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetIdentityRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Admin::Stub::GetIdentityByIdentifier(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierRequest& request, ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierRequest, ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetIdentityByIdentifier_, context, request, response);
}

void Admin::Stub::async::GetIdentityByIdentifier(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierRequest* request, ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierRequest, ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetIdentityByIdentifier_, context, request, response, std::move(f));
}

void Admin::Stub::async::GetIdentityByIdentifier(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierRequest* request, ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetIdentityByIdentifier_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse>* Admin::Stub::PrepareAsyncGetIdentityByIdentifierRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse, ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetIdentityByIdentifier_, context, request);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse>* Admin::Stub::AsyncGetIdentityByIdentifierRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetIdentityByIdentifierRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Admin::Stub::GetIdentitiesByAttribute(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeRequest& request, ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeRequest, ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetIdentitiesByAttribute_, context, request, response);
}

void Admin::Stub::async::GetIdentitiesByAttribute(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeRequest* request, ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeRequest, ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetIdentitiesByAttribute_, context, request, response, std::move(f));
}

void Admin::Stub::async::GetIdentitiesByAttribute(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeRequest* request, ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetIdentitiesByAttribute_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse>* Admin::Stub::PrepareAsyncGetIdentitiesByAttributeRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse, ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetIdentitiesByAttribute_, context, request);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse>* Admin::Stub::AsyncGetIdentitiesByAttributeRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetIdentitiesByAttributeRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Admin::Stub::GetIdentities(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdentitiesRequest& request, ::depot::devtools::auth::v0::identity::admin::GetIdentitiesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::depot::devtools::auth::v0::identity::admin::GetIdentitiesRequest, ::depot::devtools::auth::v0::identity::admin::GetIdentitiesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetIdentities_, context, request, response);
}

void Admin::Stub::async::GetIdentities(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdentitiesRequest* request, ::depot::devtools::auth::v0::identity::admin::GetIdentitiesResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::depot::devtools::auth::v0::identity::admin::GetIdentitiesRequest, ::depot::devtools::auth::v0::identity::admin::GetIdentitiesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetIdentities_, context, request, response, std::move(f));
}

void Admin::Stub::async::GetIdentities(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdentitiesRequest* request, ::depot::devtools::auth::v0::identity::admin::GetIdentitiesResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetIdentities_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::GetIdentitiesResponse>* Admin::Stub::PrepareAsyncGetIdentitiesRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdentitiesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::depot::devtools::auth::v0::identity::admin::GetIdentitiesResponse, ::depot::devtools::auth::v0::identity::admin::GetIdentitiesRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetIdentities_, context, request);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::GetIdentitiesResponse>* Admin::Stub::AsyncGetIdentitiesRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdentitiesRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetIdentitiesRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Admin::Stub::UpdateIdentity(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateIdentityRequest& request, ::depot::devtools::auth::v0::identity::admin::UpdateIdentityResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::depot::devtools::auth::v0::identity::admin::UpdateIdentityRequest, ::depot::devtools::auth::v0::identity::admin::UpdateIdentityResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateIdentity_, context, request, response);
}

void Admin::Stub::async::UpdateIdentity(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateIdentityRequest* request, ::depot::devtools::auth::v0::identity::admin::UpdateIdentityResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::depot::devtools::auth::v0::identity::admin::UpdateIdentityRequest, ::depot::devtools::auth::v0::identity::admin::UpdateIdentityResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateIdentity_, context, request, response, std::move(f));
}

void Admin::Stub::async::UpdateIdentity(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateIdentityRequest* request, ::depot::devtools::auth::v0::identity::admin::UpdateIdentityResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateIdentity_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::UpdateIdentityResponse>* Admin::Stub::PrepareAsyncUpdateIdentityRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateIdentityRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::depot::devtools::auth::v0::identity::admin::UpdateIdentityResponse, ::depot::devtools::auth::v0::identity::admin::UpdateIdentityRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateIdentity_, context, request);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::UpdateIdentityResponse>* Admin::Stub::AsyncUpdateIdentityRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateIdentityRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateIdentityRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Admin::Stub::DeleteIdentity(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::DeleteIdentityRequest& request, ::depot::devtools::auth::v0::identity::admin::DeleteIdentityResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::depot::devtools::auth::v0::identity::admin::DeleteIdentityRequest, ::depot::devtools::auth::v0::identity::admin::DeleteIdentityResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteIdentity_, context, request, response);
}

void Admin::Stub::async::DeleteIdentity(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::DeleteIdentityRequest* request, ::depot::devtools::auth::v0::identity::admin::DeleteIdentityResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::depot::devtools::auth::v0::identity::admin::DeleteIdentityRequest, ::depot::devtools::auth::v0::identity::admin::DeleteIdentityResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteIdentity_, context, request, response, std::move(f));
}

void Admin::Stub::async::DeleteIdentity(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::DeleteIdentityRequest* request, ::depot::devtools::auth::v0::identity::admin::DeleteIdentityResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteIdentity_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::DeleteIdentityResponse>* Admin::Stub::PrepareAsyncDeleteIdentityRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::DeleteIdentityRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::depot::devtools::auth::v0::identity::admin::DeleteIdentityResponse, ::depot::devtools::auth::v0::identity::admin::DeleteIdentityRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteIdentity_, context, request);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::DeleteIdentityResponse>* Admin::Stub::AsyncDeleteIdentityRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::DeleteIdentityRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteIdentityRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Admin::Stub::GetAddresses(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetAddressesRequest& request, ::depot::devtools::auth::v0::identity::admin::GetAddressesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::depot::devtools::auth::v0::identity::admin::GetAddressesRequest, ::depot::devtools::auth::v0::identity::admin::GetAddressesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetAddresses_, context, request, response);
}

void Admin::Stub::async::GetAddresses(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetAddressesRequest* request, ::depot::devtools::auth::v0::identity::admin::GetAddressesResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::depot::devtools::auth::v0::identity::admin::GetAddressesRequest, ::depot::devtools::auth::v0::identity::admin::GetAddressesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetAddresses_, context, request, response, std::move(f));
}

void Admin::Stub::async::GetAddresses(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetAddressesRequest* request, ::depot::devtools::auth::v0::identity::admin::GetAddressesResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetAddresses_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::GetAddressesResponse>* Admin::Stub::PrepareAsyncGetAddressesRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetAddressesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::depot::devtools::auth::v0::identity::admin::GetAddressesResponse, ::depot::devtools::auth::v0::identity::admin::GetAddressesRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetAddresses_, context, request);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::GetAddressesResponse>* Admin::Stub::AsyncGetAddressesRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetAddressesRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetAddressesRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Admin::Stub::GetAddress(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetAddressRequest& request, ::depot::devtools::auth::v0::identity::admin::GetAddressResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::depot::devtools::auth::v0::identity::admin::GetAddressRequest, ::depot::devtools::auth::v0::identity::admin::GetAddressResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetAddress_, context, request, response);
}

void Admin::Stub::async::GetAddress(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetAddressRequest* request, ::depot::devtools::auth::v0::identity::admin::GetAddressResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::depot::devtools::auth::v0::identity::admin::GetAddressRequest, ::depot::devtools::auth::v0::identity::admin::GetAddressResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetAddress_, context, request, response, std::move(f));
}

void Admin::Stub::async::GetAddress(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetAddressRequest* request, ::depot::devtools::auth::v0::identity::admin::GetAddressResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetAddress_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::GetAddressResponse>* Admin::Stub::PrepareAsyncGetAddressRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetAddressRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::depot::devtools::auth::v0::identity::admin::GetAddressResponse, ::depot::devtools::auth::v0::identity::admin::GetAddressRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetAddress_, context, request);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::GetAddressResponse>* Admin::Stub::AsyncGetAddressRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetAddressRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetAddressRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Admin::Stub::UpdateAddress(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateAddressRequest& request, ::depot::devtools::auth::v0::identity::admin::UpdateAddressResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::depot::devtools::auth::v0::identity::admin::UpdateAddressRequest, ::depot::devtools::auth::v0::identity::admin::UpdateAddressResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateAddress_, context, request, response);
}

void Admin::Stub::async::UpdateAddress(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateAddressRequest* request, ::depot::devtools::auth::v0::identity::admin::UpdateAddressResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::depot::devtools::auth::v0::identity::admin::UpdateAddressRequest, ::depot::devtools::auth::v0::identity::admin::UpdateAddressResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateAddress_, context, request, response, std::move(f));
}

void Admin::Stub::async::UpdateAddress(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateAddressRequest* request, ::depot::devtools::auth::v0::identity::admin::UpdateAddressResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateAddress_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::UpdateAddressResponse>* Admin::Stub::PrepareAsyncUpdateAddressRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateAddressRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::depot::devtools::auth::v0::identity::admin::UpdateAddressResponse, ::depot::devtools::auth::v0::identity::admin::UpdateAddressRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateAddress_, context, request);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::UpdateAddressResponse>* Admin::Stub::AsyncUpdateAddressRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateAddressRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateAddressRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Admin::Stub::GetProfile(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetProfileRequest& request, ::depot::devtools::auth::v0::identity::admin::GetProfileResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::depot::devtools::auth::v0::identity::admin::GetProfileRequest, ::depot::devtools::auth::v0::identity::admin::GetProfileResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetProfile_, context, request, response);
}

void Admin::Stub::async::GetProfile(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetProfileRequest* request, ::depot::devtools::auth::v0::identity::admin::GetProfileResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::depot::devtools::auth::v0::identity::admin::GetProfileRequest, ::depot::devtools::auth::v0::identity::admin::GetProfileResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetProfile_, context, request, response, std::move(f));
}

void Admin::Stub::async::GetProfile(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetProfileRequest* request, ::depot::devtools::auth::v0::identity::admin::GetProfileResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetProfile_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::GetProfileResponse>* Admin::Stub::PrepareAsyncGetProfileRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetProfileRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::depot::devtools::auth::v0::identity::admin::GetProfileResponse, ::depot::devtools::auth::v0::identity::admin::GetProfileRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetProfile_, context, request);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::GetProfileResponse>* Admin::Stub::AsyncGetProfileRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetProfileRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetProfileRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Admin::Stub::UpdateProfile(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateProfileRequest& request, ::depot::devtools::auth::v0::identity::admin::UpdateProfileResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::depot::devtools::auth::v0::identity::admin::UpdateProfileRequest, ::depot::devtools::auth::v0::identity::admin::UpdateProfileResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateProfile_, context, request, response);
}

void Admin::Stub::async::UpdateProfile(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateProfileRequest* request, ::depot::devtools::auth::v0::identity::admin::UpdateProfileResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::depot::devtools::auth::v0::identity::admin::UpdateProfileRequest, ::depot::devtools::auth::v0::identity::admin::UpdateProfileResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateProfile_, context, request, response, std::move(f));
}

void Admin::Stub::async::UpdateProfile(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateProfileRequest* request, ::depot::devtools::auth::v0::identity::admin::UpdateProfileResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateProfile_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::UpdateProfileResponse>* Admin::Stub::PrepareAsyncUpdateProfileRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateProfileRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::depot::devtools::auth::v0::identity::admin::UpdateProfileResponse, ::depot::devtools::auth::v0::identity::admin::UpdateProfileRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateProfile_, context, request);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::UpdateProfileResponse>* Admin::Stub::AsyncUpdateProfileRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateProfileRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateProfileRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Admin::Stub::GetCredentials(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetCredentialsRequest& request, ::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::depot::devtools::auth::v0::identity::admin::GetCredentialsRequest, ::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetCredentials_, context, request, response);
}

void Admin::Stub::async::GetCredentials(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetCredentialsRequest* request, ::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::depot::devtools::auth::v0::identity::admin::GetCredentialsRequest, ::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetCredentials_, context, request, response, std::move(f));
}

void Admin::Stub::async::GetCredentials(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetCredentialsRequest* request, ::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetCredentials_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse>* Admin::Stub::PrepareAsyncGetCredentialsRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetCredentialsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse, ::depot::devtools::auth::v0::identity::admin::GetCredentialsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetCredentials_, context, request);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse>* Admin::Stub::AsyncGetCredentialsRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetCredentialsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetCredentialsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Admin::Stub::UpdateCredential(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateCredentialRequest& request, ::depot::devtools::auth::v0::identity::admin::UpdateCredentialResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::depot::devtools::auth::v0::identity::admin::UpdateCredentialRequest, ::depot::devtools::auth::v0::identity::admin::UpdateCredentialResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateCredential_, context, request, response);
}

void Admin::Stub::async::UpdateCredential(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateCredentialRequest* request, ::depot::devtools::auth::v0::identity::admin::UpdateCredentialResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::depot::devtools::auth::v0::identity::admin::UpdateCredentialRequest, ::depot::devtools::auth::v0::identity::admin::UpdateCredentialResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateCredential_, context, request, response, std::move(f));
}

void Admin::Stub::async::UpdateCredential(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateCredentialRequest* request, ::depot::devtools::auth::v0::identity::admin::UpdateCredentialResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateCredential_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::UpdateCredentialResponse>* Admin::Stub::PrepareAsyncUpdateCredentialRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateCredentialRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::depot::devtools::auth::v0::identity::admin::UpdateCredentialResponse, ::depot::devtools::auth::v0::identity::admin::UpdateCredentialRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateCredential_, context, request);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::UpdateCredentialResponse>* Admin::Stub::AsyncUpdateCredentialRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateCredentialRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateCredentialRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Admin::Stub::GetIdentityLoginAttempts(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsRequest& request, ::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsRequest, ::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetIdentityLoginAttempts_, context, request, response);
}

void Admin::Stub::async::GetIdentityLoginAttempts(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsRequest* request, ::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsRequest, ::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetIdentityLoginAttempts_, context, request, response, std::move(f));
}

void Admin::Stub::async::GetIdentityLoginAttempts(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsRequest* request, ::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetIdentityLoginAttempts_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsResponse>* Admin::Stub::PrepareAsyncGetIdentityLoginAttemptsRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsResponse, ::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetIdentityLoginAttempts_, context, request);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsResponse>* Admin::Stub::AsyncGetIdentityLoginAttemptsRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetIdentityLoginAttemptsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Admin::Stub::CreateConnection(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::CreateConnectionRequest& request, ::depot::devtools::auth::v0::identity::admin::CreateConnectionResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::depot::devtools::auth::v0::identity::admin::CreateConnectionRequest, ::depot::devtools::auth::v0::identity::admin::CreateConnectionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateConnection_, context, request, response);
}

void Admin::Stub::async::CreateConnection(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::CreateConnectionRequest* request, ::depot::devtools::auth::v0::identity::admin::CreateConnectionResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::depot::devtools::auth::v0::identity::admin::CreateConnectionRequest, ::depot::devtools::auth::v0::identity::admin::CreateConnectionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateConnection_, context, request, response, std::move(f));
}

void Admin::Stub::async::CreateConnection(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::CreateConnectionRequest* request, ::depot::devtools::auth::v0::identity::admin::CreateConnectionResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateConnection_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::CreateConnectionResponse>* Admin::Stub::PrepareAsyncCreateConnectionRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::CreateConnectionRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::depot::devtools::auth::v0::identity::admin::CreateConnectionResponse, ::depot::devtools::auth::v0::identity::admin::CreateConnectionRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateConnection_, context, request);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::CreateConnectionResponse>* Admin::Stub::AsyncCreateConnectionRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::CreateConnectionRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateConnectionRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Admin::Stub::GetConnections(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetConnectionsRequest& request, ::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::depot::devtools::auth::v0::identity::admin::GetConnectionsRequest, ::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetConnections_, context, request, response);
}

void Admin::Stub::async::GetConnections(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetConnectionsRequest* request, ::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::depot::devtools::auth::v0::identity::admin::GetConnectionsRequest, ::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetConnections_, context, request, response, std::move(f));
}

void Admin::Stub::async::GetConnections(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetConnectionsRequest* request, ::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetConnections_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse>* Admin::Stub::PrepareAsyncGetConnectionsRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetConnectionsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse, ::depot::devtools::auth::v0::identity::admin::GetConnectionsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetConnections_, context, request);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse>* Admin::Stub::AsyncGetConnectionsRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetConnectionsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetConnectionsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Admin::Stub::UpdateConnection(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateConnectionRequest& request, ::depot::devtools::auth::v0::identity::admin::UpdateConnectionResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::depot::devtools::auth::v0::identity::admin::UpdateConnectionRequest, ::depot::devtools::auth::v0::identity::admin::UpdateConnectionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateConnection_, context, request, response);
}

void Admin::Stub::async::UpdateConnection(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateConnectionRequest* request, ::depot::devtools::auth::v0::identity::admin::UpdateConnectionResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::depot::devtools::auth::v0::identity::admin::UpdateConnectionRequest, ::depot::devtools::auth::v0::identity::admin::UpdateConnectionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateConnection_, context, request, response, std::move(f));
}

void Admin::Stub::async::UpdateConnection(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateConnectionRequest* request, ::depot::devtools::auth::v0::identity::admin::UpdateConnectionResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateConnection_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::UpdateConnectionResponse>* Admin::Stub::PrepareAsyncUpdateConnectionRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateConnectionRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::depot::devtools::auth::v0::identity::admin::UpdateConnectionResponse, ::depot::devtools::auth::v0::identity::admin::UpdateConnectionRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateConnection_, context, request);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::UpdateConnectionResponse>* Admin::Stub::AsyncUpdateConnectionRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateConnectionRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateConnectionRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Admin::Stub::DeleteConnection(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::DeleteConnectionRequest& request, ::depot::devtools::auth::v0::identity::admin::DeleteConnectionResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::depot::devtools::auth::v0::identity::admin::DeleteConnectionRequest, ::depot::devtools::auth::v0::identity::admin::DeleteConnectionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteConnection_, context, request, response);
}

void Admin::Stub::async::DeleteConnection(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::DeleteConnectionRequest* request, ::depot::devtools::auth::v0::identity::admin::DeleteConnectionResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::depot::devtools::auth::v0::identity::admin::DeleteConnectionRequest, ::depot::devtools::auth::v0::identity::admin::DeleteConnectionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteConnection_, context, request, response, std::move(f));
}

void Admin::Stub::async::DeleteConnection(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::DeleteConnectionRequest* request, ::depot::devtools::auth::v0::identity::admin::DeleteConnectionResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteConnection_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::DeleteConnectionResponse>* Admin::Stub::PrepareAsyncDeleteConnectionRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::DeleteConnectionRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::depot::devtools::auth::v0::identity::admin::DeleteConnectionResponse, ::depot::devtools::auth::v0::identity::admin::DeleteConnectionRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteConnection_, context, request);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::DeleteConnectionResponse>* Admin::Stub::AsyncDeleteConnectionRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::DeleteConnectionRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteConnectionRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Admin::Stub::CreateIdSchema(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::CreateIdSchemaRequest& request, ::depot::devtools::auth::v0::identity::admin::CreateIdSchemaResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::depot::devtools::auth::v0::identity::admin::CreateIdSchemaRequest, ::depot::devtools::auth::v0::identity::admin::CreateIdSchemaResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateIdSchema_, context, request, response);
}

void Admin::Stub::async::CreateIdSchema(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::CreateIdSchemaRequest* request, ::depot::devtools::auth::v0::identity::admin::CreateIdSchemaResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::depot::devtools::auth::v0::identity::admin::CreateIdSchemaRequest, ::depot::devtools::auth::v0::identity::admin::CreateIdSchemaResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateIdSchema_, context, request, response, std::move(f));
}

void Admin::Stub::async::CreateIdSchema(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::CreateIdSchemaRequest* request, ::depot::devtools::auth::v0::identity::admin::CreateIdSchemaResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateIdSchema_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::CreateIdSchemaResponse>* Admin::Stub::PrepareAsyncCreateIdSchemaRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::CreateIdSchemaRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::depot::devtools::auth::v0::identity::admin::CreateIdSchemaResponse, ::depot::devtools::auth::v0::identity::admin::CreateIdSchemaRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateIdSchema_, context, request);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::CreateIdSchemaResponse>* Admin::Stub::AsyncCreateIdSchemaRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::CreateIdSchemaRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateIdSchemaRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Admin::Stub::GetIdSchemas(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdSchemasRequest& request, ::depot::devtools::auth::v0::identity::admin::GetIdSchemasResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::depot::devtools::auth::v0::identity::admin::GetIdSchemasRequest, ::depot::devtools::auth::v0::identity::admin::GetIdSchemasResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetIdSchemas_, context, request, response);
}

void Admin::Stub::async::GetIdSchemas(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdSchemasRequest* request, ::depot::devtools::auth::v0::identity::admin::GetIdSchemasResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::depot::devtools::auth::v0::identity::admin::GetIdSchemasRequest, ::depot::devtools::auth::v0::identity::admin::GetIdSchemasResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetIdSchemas_, context, request, response, std::move(f));
}

void Admin::Stub::async::GetIdSchemas(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdSchemasRequest* request, ::depot::devtools::auth::v0::identity::admin::GetIdSchemasResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetIdSchemas_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::GetIdSchemasResponse>* Admin::Stub::PrepareAsyncGetIdSchemasRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdSchemasRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::depot::devtools::auth::v0::identity::admin::GetIdSchemasResponse, ::depot::devtools::auth::v0::identity::admin::GetIdSchemasRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetIdSchemas_, context, request);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::GetIdSchemasResponse>* Admin::Stub::AsyncGetIdSchemasRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdSchemasRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetIdSchemasRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Admin::Stub::GetIdSchema(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdSchemaRequest& request, ::depot::devtools::auth::v0::identity::admin::GetIdSchemaResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::depot::devtools::auth::v0::identity::admin::GetIdSchemaRequest, ::depot::devtools::auth::v0::identity::admin::GetIdSchemaResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetIdSchema_, context, request, response);
}

void Admin::Stub::async::GetIdSchema(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdSchemaRequest* request, ::depot::devtools::auth::v0::identity::admin::GetIdSchemaResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::depot::devtools::auth::v0::identity::admin::GetIdSchemaRequest, ::depot::devtools::auth::v0::identity::admin::GetIdSchemaResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetIdSchema_, context, request, response, std::move(f));
}

void Admin::Stub::async::GetIdSchema(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdSchemaRequest* request, ::depot::devtools::auth::v0::identity::admin::GetIdSchemaResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetIdSchema_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::GetIdSchemaResponse>* Admin::Stub::PrepareAsyncGetIdSchemaRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdSchemaRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::depot::devtools::auth::v0::identity::admin::GetIdSchemaResponse, ::depot::devtools::auth::v0::identity::admin::GetIdSchemaRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetIdSchema_, context, request);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::GetIdSchemaResponse>* Admin::Stub::AsyncGetIdSchemaRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdSchemaRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetIdSchemaRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Admin::Stub::GetDefaultIdSchema(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaRequest& request, ::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaRequest, ::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetDefaultIdSchema_, context, request, response);
}

void Admin::Stub::async::GetDefaultIdSchema(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaRequest* request, ::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaRequest, ::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetDefaultIdSchema_, context, request, response, std::move(f));
}

void Admin::Stub::async::GetDefaultIdSchema(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaRequest* request, ::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetDefaultIdSchema_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaResponse>* Admin::Stub::PrepareAsyncGetDefaultIdSchemaRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaResponse, ::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetDefaultIdSchema_, context, request);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaResponse>* Admin::Stub::AsyncGetDefaultIdSchemaRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetDefaultIdSchemaRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Admin::Stub::UpdateIdSchema(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaRequest& request, ::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaRequest, ::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateIdSchema_, context, request, response);
}

void Admin::Stub::async::UpdateIdSchema(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaRequest* request, ::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaRequest, ::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateIdSchema_, context, request, response, std::move(f));
}

void Admin::Stub::async::UpdateIdSchema(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaRequest* request, ::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateIdSchema_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaResponse>* Admin::Stub::PrepareAsyncUpdateIdSchemaRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaResponse, ::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateIdSchema_, context, request);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaResponse>* Admin::Stub::AsyncUpdateIdSchemaRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateIdSchemaRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Admin::Stub::MarkDefaultIdSchema(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::MarkDefaultIdSchemaRequest& request, ::depot::devtools::auth::v0::identity::admin::MarkDefaultIdSchemaResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::depot::devtools::auth::v0::identity::admin::MarkDefaultIdSchemaRequest, ::depot::devtools::auth::v0::identity::admin::MarkDefaultIdSchemaResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_MarkDefaultIdSchema_, context, request, response);
}

void Admin::Stub::async::MarkDefaultIdSchema(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::MarkDefaultIdSchemaRequest* request, ::depot::devtools::auth::v0::identity::admin::MarkDefaultIdSchemaResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::depot::devtools::auth::v0::identity::admin::MarkDefaultIdSchemaRequest, ::depot::devtools::auth::v0::identity::admin::MarkDefaultIdSchemaResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_MarkDefaultIdSchema_, context, request, response, std::move(f));
}

void Admin::Stub::async::MarkDefaultIdSchema(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::MarkDefaultIdSchemaRequest* request, ::depot::devtools::auth::v0::identity::admin::MarkDefaultIdSchemaResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_MarkDefaultIdSchema_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::MarkDefaultIdSchemaResponse>* Admin::Stub::PrepareAsyncMarkDefaultIdSchemaRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::MarkDefaultIdSchemaRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::depot::devtools::auth::v0::identity::admin::MarkDefaultIdSchemaResponse, ::depot::devtools::auth::v0::identity::admin::MarkDefaultIdSchemaRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_MarkDefaultIdSchema_, context, request);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::MarkDefaultIdSchemaResponse>* Admin::Stub::AsyncMarkDefaultIdSchemaRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::MarkDefaultIdSchemaRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncMarkDefaultIdSchemaRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Admin::Stub::DeleteIdSchema(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::DeleteIdSchemaRequest& request, ::depot::devtools::auth::v0::identity::admin::DeleteIdSchemaResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::depot::devtools::auth::v0::identity::admin::DeleteIdSchemaRequest, ::depot::devtools::auth::v0::identity::admin::DeleteIdSchemaResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteIdSchema_, context, request, response);
}

void Admin::Stub::async::DeleteIdSchema(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::DeleteIdSchemaRequest* request, ::depot::devtools::auth::v0::identity::admin::DeleteIdSchemaResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::depot::devtools::auth::v0::identity::admin::DeleteIdSchemaRequest, ::depot::devtools::auth::v0::identity::admin::DeleteIdSchemaResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteIdSchema_, context, request, response, std::move(f));
}

void Admin::Stub::async::DeleteIdSchema(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::DeleteIdSchemaRequest* request, ::depot::devtools::auth::v0::identity::admin::DeleteIdSchemaResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteIdSchema_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::DeleteIdSchemaResponse>* Admin::Stub::PrepareAsyncDeleteIdSchemaRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::DeleteIdSchemaRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::depot::devtools::auth::v0::identity::admin::DeleteIdSchemaResponse, ::depot::devtools::auth::v0::identity::admin::DeleteIdSchemaRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteIdSchema_, context, request);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::DeleteIdSchemaResponse>* Admin::Stub::AsyncDeleteIdSchemaRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::DeleteIdSchemaRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteIdSchemaRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Admin::Stub::CreateOAuth2Client(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest& request, ::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest, ::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateOAuth2Client_, context, request, response);
}

void Admin::Stub::async::CreateOAuth2Client(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest* request, ::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest, ::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateOAuth2Client_, context, request, response, std::move(f));
}

void Admin::Stub::async::CreateOAuth2Client(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest* request, ::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateOAuth2Client_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientResponse>* Admin::Stub::PrepareAsyncCreateOAuth2ClientRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientResponse, ::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateOAuth2Client_, context, request);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientResponse>* Admin::Stub::AsyncCreateOAuth2ClientRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateOAuth2ClientRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Admin::Stub::GetOAuth2Clients(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsRequest& request, ::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsRequest, ::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetOAuth2Clients_, context, request, response);
}

void Admin::Stub::async::GetOAuth2Clients(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsRequest* request, ::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsRequest, ::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetOAuth2Clients_, context, request, response, std::move(f));
}

void Admin::Stub::async::GetOAuth2Clients(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsRequest* request, ::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetOAuth2Clients_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse>* Admin::Stub::PrepareAsyncGetOAuth2ClientsRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse, ::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetOAuth2Clients_, context, request);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse>* Admin::Stub::AsyncGetOAuth2ClientsRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetOAuth2ClientsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Admin::Stub::UpdateOAuth2Client(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest& request, ::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest, ::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateOAuth2Client_, context, request, response);
}

void Admin::Stub::async::UpdateOAuth2Client(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest* request, ::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest, ::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateOAuth2Client_, context, request, response, std::move(f));
}

void Admin::Stub::async::UpdateOAuth2Client(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest* request, ::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateOAuth2Client_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientResponse>* Admin::Stub::PrepareAsyncUpdateOAuth2ClientRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientResponse, ::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateOAuth2Client_, context, request);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientResponse>* Admin::Stub::AsyncUpdateOAuth2ClientRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateOAuth2ClientRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Admin::Stub::DeleteOAuth2Client(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::DeleteOAuth2ClientRequest& request, ::depot::devtools::auth::v0::identity::admin::DeleteOAuth2ClientResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::depot::devtools::auth::v0::identity::admin::DeleteOAuth2ClientRequest, ::depot::devtools::auth::v0::identity::admin::DeleteOAuth2ClientResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteOAuth2Client_, context, request, response);
}

void Admin::Stub::async::DeleteOAuth2Client(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::DeleteOAuth2ClientRequest* request, ::depot::devtools::auth::v0::identity::admin::DeleteOAuth2ClientResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::depot::devtools::auth::v0::identity::admin::DeleteOAuth2ClientRequest, ::depot::devtools::auth::v0::identity::admin::DeleteOAuth2ClientResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteOAuth2Client_, context, request, response, std::move(f));
}

void Admin::Stub::async::DeleteOAuth2Client(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::DeleteOAuth2ClientRequest* request, ::depot::devtools::auth::v0::identity::admin::DeleteOAuth2ClientResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteOAuth2Client_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::DeleteOAuth2ClientResponse>* Admin::Stub::PrepareAsyncDeleteOAuth2ClientRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::DeleteOAuth2ClientRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::depot::devtools::auth::v0::identity::admin::DeleteOAuth2ClientResponse, ::depot::devtools::auth::v0::identity::admin::DeleteOAuth2ClientRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteOAuth2Client_, context, request);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::DeleteOAuth2ClientResponse>* Admin::Stub::AsyncDeleteOAuth2ClientRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::DeleteOAuth2ClientRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteOAuth2ClientRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Admin::Stub::GetEmailsSetup(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupRequest& request, ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupRequest, ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetEmailsSetup_, context, request, response);
}

void Admin::Stub::async::GetEmailsSetup(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupRequest* request, ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupRequest, ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetEmailsSetup_, context, request, response, std::move(f));
}

void Admin::Stub::async::GetEmailsSetup(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupRequest* request, ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetEmailsSetup_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse>* Admin::Stub::PrepareAsyncGetEmailsSetupRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse, ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetEmailsSetup_, context, request);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse>* Admin::Stub::AsyncGetEmailsSetupRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetEmailsSetupRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Admin::Stub::UpdateEmailsSetup(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest& request, ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest, ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateEmailsSetup_, context, request, response);
}

void Admin::Stub::async::UpdateEmailsSetup(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest* request, ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest, ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateEmailsSetup_, context, request, response, std::move(f));
}

void Admin::Stub::async::UpdateEmailsSetup(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest* request, ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateEmailsSetup_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupResponse>* Admin::Stub::PrepareAsyncUpdateEmailsSetupRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupResponse, ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateEmailsSetup_, context, request);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupResponse>* Admin::Stub::AsyncUpdateEmailsSetupRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateEmailsSetupRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Admin::Stub::GetUserBaseStatistics(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsRequest& request, ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsRequest, ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetUserBaseStatistics_, context, request, response);
}

void Admin::Stub::async::GetUserBaseStatistics(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsRequest* request, ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsRequest, ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetUserBaseStatistics_, context, request, response, std::move(f));
}

void Admin::Stub::async::GetUserBaseStatistics(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsRequest* request, ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetUserBaseStatistics_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse>* Admin::Stub::PrepareAsyncGetUserBaseStatisticsRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse, ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetUserBaseStatistics_, context, request);
}

::grpc::ClientAsyncResponseReader< ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse>* Admin::Stub::AsyncGetUserBaseStatisticsRaw(::grpc::ClientContext* context, const ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetUserBaseStatisticsRaw(context, request, cq);
  result->StartCall();
  return result;
}

Admin::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Admin_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Admin::Service, ::depot::devtools::auth::v0::identity::admin::CreateIdentityRequest, ::depot::devtools::auth::v0::identity::admin::CreateIdentityResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Admin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::depot::devtools::auth::v0::identity::admin::CreateIdentityRequest* req,
             ::depot::devtools::auth::v0::identity::admin::CreateIdentityResponse* resp) {
               return service->CreateIdentity(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Admin_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Admin::Service, ::depot::devtools::auth::v0::identity::admin::GetIdentityRequest, ::depot::devtools::auth::v0::identity::admin::GetIdentityResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Admin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::depot::devtools::auth::v0::identity::admin::GetIdentityRequest* req,
             ::depot::devtools::auth::v0::identity::admin::GetIdentityResponse* resp) {
               return service->GetIdentity(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Admin_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Admin::Service, ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierRequest, ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Admin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierRequest* req,
             ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse* resp) {
               return service->GetIdentityByIdentifier(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Admin_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Admin::Service, ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeRequest, ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Admin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeRequest* req,
             ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse* resp) {
               return service->GetIdentitiesByAttribute(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Admin_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Admin::Service, ::depot::devtools::auth::v0::identity::admin::GetIdentitiesRequest, ::depot::devtools::auth::v0::identity::admin::GetIdentitiesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Admin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::depot::devtools::auth::v0::identity::admin::GetIdentitiesRequest* req,
             ::depot::devtools::auth::v0::identity::admin::GetIdentitiesResponse* resp) {
               return service->GetIdentities(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Admin_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Admin::Service, ::depot::devtools::auth::v0::identity::admin::UpdateIdentityRequest, ::depot::devtools::auth::v0::identity::admin::UpdateIdentityResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Admin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::depot::devtools::auth::v0::identity::admin::UpdateIdentityRequest* req,
             ::depot::devtools::auth::v0::identity::admin::UpdateIdentityResponse* resp) {
               return service->UpdateIdentity(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Admin_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Admin::Service, ::depot::devtools::auth::v0::identity::admin::DeleteIdentityRequest, ::depot::devtools::auth::v0::identity::admin::DeleteIdentityResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Admin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::depot::devtools::auth::v0::identity::admin::DeleteIdentityRequest* req,
             ::depot::devtools::auth::v0::identity::admin::DeleteIdentityResponse* resp) {
               return service->DeleteIdentity(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Admin_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Admin::Service, ::depot::devtools::auth::v0::identity::admin::GetAddressesRequest, ::depot::devtools::auth::v0::identity::admin::GetAddressesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Admin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::depot::devtools::auth::v0::identity::admin::GetAddressesRequest* req,
             ::depot::devtools::auth::v0::identity::admin::GetAddressesResponse* resp) {
               return service->GetAddresses(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Admin_method_names[8],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Admin::Service, ::depot::devtools::auth::v0::identity::admin::GetAddressRequest, ::depot::devtools::auth::v0::identity::admin::GetAddressResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Admin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::depot::devtools::auth::v0::identity::admin::GetAddressRequest* req,
             ::depot::devtools::auth::v0::identity::admin::GetAddressResponse* resp) {
               return service->GetAddress(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Admin_method_names[9],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Admin::Service, ::depot::devtools::auth::v0::identity::admin::UpdateAddressRequest, ::depot::devtools::auth::v0::identity::admin::UpdateAddressResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Admin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::depot::devtools::auth::v0::identity::admin::UpdateAddressRequest* req,
             ::depot::devtools::auth::v0::identity::admin::UpdateAddressResponse* resp) {
               return service->UpdateAddress(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Admin_method_names[10],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Admin::Service, ::depot::devtools::auth::v0::identity::admin::GetProfileRequest, ::depot::devtools::auth::v0::identity::admin::GetProfileResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Admin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::depot::devtools::auth::v0::identity::admin::GetProfileRequest* req,
             ::depot::devtools::auth::v0::identity::admin::GetProfileResponse* resp) {
               return service->GetProfile(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Admin_method_names[11],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Admin::Service, ::depot::devtools::auth::v0::identity::admin::UpdateProfileRequest, ::depot::devtools::auth::v0::identity::admin::UpdateProfileResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Admin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::depot::devtools::auth::v0::identity::admin::UpdateProfileRequest* req,
             ::depot::devtools::auth::v0::identity::admin::UpdateProfileResponse* resp) {
               return service->UpdateProfile(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Admin_method_names[12],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Admin::Service, ::depot::devtools::auth::v0::identity::admin::GetCredentialsRequest, ::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Admin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::depot::devtools::auth::v0::identity::admin::GetCredentialsRequest* req,
             ::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse* resp) {
               return service->GetCredentials(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Admin_method_names[13],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Admin::Service, ::depot::devtools::auth::v0::identity::admin::UpdateCredentialRequest, ::depot::devtools::auth::v0::identity::admin::UpdateCredentialResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Admin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::depot::devtools::auth::v0::identity::admin::UpdateCredentialRequest* req,
             ::depot::devtools::auth::v0::identity::admin::UpdateCredentialResponse* resp) {
               return service->UpdateCredential(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Admin_method_names[14],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Admin::Service, ::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsRequest, ::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Admin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsRequest* req,
             ::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsResponse* resp) {
               return service->GetIdentityLoginAttempts(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Admin_method_names[15],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Admin::Service, ::depot::devtools::auth::v0::identity::admin::CreateConnectionRequest, ::depot::devtools::auth::v0::identity::admin::CreateConnectionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Admin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::depot::devtools::auth::v0::identity::admin::CreateConnectionRequest* req,
             ::depot::devtools::auth::v0::identity::admin::CreateConnectionResponse* resp) {
               return service->CreateConnection(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Admin_method_names[16],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Admin::Service, ::depot::devtools::auth::v0::identity::admin::GetConnectionsRequest, ::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Admin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::depot::devtools::auth::v0::identity::admin::GetConnectionsRequest* req,
             ::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse* resp) {
               return service->GetConnections(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Admin_method_names[17],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Admin::Service, ::depot::devtools::auth::v0::identity::admin::UpdateConnectionRequest, ::depot::devtools::auth::v0::identity::admin::UpdateConnectionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Admin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::depot::devtools::auth::v0::identity::admin::UpdateConnectionRequest* req,
             ::depot::devtools::auth::v0::identity::admin::UpdateConnectionResponse* resp) {
               return service->UpdateConnection(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Admin_method_names[18],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Admin::Service, ::depot::devtools::auth::v0::identity::admin::DeleteConnectionRequest, ::depot::devtools::auth::v0::identity::admin::DeleteConnectionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Admin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::depot::devtools::auth::v0::identity::admin::DeleteConnectionRequest* req,
             ::depot::devtools::auth::v0::identity::admin::DeleteConnectionResponse* resp) {
               return service->DeleteConnection(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Admin_method_names[19],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Admin::Service, ::depot::devtools::auth::v0::identity::admin::CreateIdSchemaRequest, ::depot::devtools::auth::v0::identity::admin::CreateIdSchemaResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Admin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::depot::devtools::auth::v0::identity::admin::CreateIdSchemaRequest* req,
             ::depot::devtools::auth::v0::identity::admin::CreateIdSchemaResponse* resp) {
               return service->CreateIdSchema(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Admin_method_names[20],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Admin::Service, ::depot::devtools::auth::v0::identity::admin::GetIdSchemasRequest, ::depot::devtools::auth::v0::identity::admin::GetIdSchemasResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Admin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::depot::devtools::auth::v0::identity::admin::GetIdSchemasRequest* req,
             ::depot::devtools::auth::v0::identity::admin::GetIdSchemasResponse* resp) {
               return service->GetIdSchemas(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Admin_method_names[21],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Admin::Service, ::depot::devtools::auth::v0::identity::admin::GetIdSchemaRequest, ::depot::devtools::auth::v0::identity::admin::GetIdSchemaResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Admin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::depot::devtools::auth::v0::identity::admin::GetIdSchemaRequest* req,
             ::depot::devtools::auth::v0::identity::admin::GetIdSchemaResponse* resp) {
               return service->GetIdSchema(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Admin_method_names[22],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Admin::Service, ::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaRequest, ::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Admin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaRequest* req,
             ::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaResponse* resp) {
               return service->GetDefaultIdSchema(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Admin_method_names[23],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Admin::Service, ::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaRequest, ::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Admin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaRequest* req,
             ::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaResponse* resp) {
               return service->UpdateIdSchema(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Admin_method_names[24],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Admin::Service, ::depot::devtools::auth::v0::identity::admin::MarkDefaultIdSchemaRequest, ::depot::devtools::auth::v0::identity::admin::MarkDefaultIdSchemaResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Admin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::depot::devtools::auth::v0::identity::admin::MarkDefaultIdSchemaRequest* req,
             ::depot::devtools::auth::v0::identity::admin::MarkDefaultIdSchemaResponse* resp) {
               return service->MarkDefaultIdSchema(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Admin_method_names[25],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Admin::Service, ::depot::devtools::auth::v0::identity::admin::DeleteIdSchemaRequest, ::depot::devtools::auth::v0::identity::admin::DeleteIdSchemaResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Admin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::depot::devtools::auth::v0::identity::admin::DeleteIdSchemaRequest* req,
             ::depot::devtools::auth::v0::identity::admin::DeleteIdSchemaResponse* resp) {
               return service->DeleteIdSchema(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Admin_method_names[26],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Admin::Service, ::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest, ::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Admin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest* req,
             ::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientResponse* resp) {
               return service->CreateOAuth2Client(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Admin_method_names[27],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Admin::Service, ::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsRequest, ::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Admin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsRequest* req,
             ::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse* resp) {
               return service->GetOAuth2Clients(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Admin_method_names[28],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Admin::Service, ::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest, ::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Admin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest* req,
             ::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientResponse* resp) {
               return service->UpdateOAuth2Client(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Admin_method_names[29],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Admin::Service, ::depot::devtools::auth::v0::identity::admin::DeleteOAuth2ClientRequest, ::depot::devtools::auth::v0::identity::admin::DeleteOAuth2ClientResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Admin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::depot::devtools::auth::v0::identity::admin::DeleteOAuth2ClientRequest* req,
             ::depot::devtools::auth::v0::identity::admin::DeleteOAuth2ClientResponse* resp) {
               return service->DeleteOAuth2Client(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Admin_method_names[30],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Admin::Service, ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupRequest, ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Admin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupRequest* req,
             ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse* resp) {
               return service->GetEmailsSetup(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Admin_method_names[31],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Admin::Service, ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest, ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Admin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest* req,
             ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupResponse* resp) {
               return service->UpdateEmailsSetup(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Admin_method_names[32],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Admin::Service, ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsRequest, ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Admin::Service* service,
             ::grpc::ServerContext* ctx,
             const ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsRequest* req,
             ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse* resp) {
               return service->GetUserBaseStatistics(ctx, req, resp);
             }, this)));
}

Admin::Service::~Service() {
}

::grpc::Status Admin::Service::CreateIdentity(::grpc::ServerContext* context, const ::depot::devtools::auth::v0::identity::admin::CreateIdentityRequest* request, ::depot::devtools::auth::v0::identity::admin::CreateIdentityResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Admin::Service::GetIdentity(::grpc::ServerContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdentityRequest* request, ::depot::devtools::auth::v0::identity::admin::GetIdentityResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Admin::Service::GetIdentityByIdentifier(::grpc::ServerContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierRequest* request, ::depot::devtools::auth::v0::identity::admin::GetIdentityByIdentifierResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Admin::Service::GetIdentitiesByAttribute(::grpc::ServerContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeRequest* request, ::depot::devtools::auth::v0::identity::admin::GetIdentitiesByAttributeResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Admin::Service::GetIdentities(::grpc::ServerContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdentitiesRequest* request, ::depot::devtools::auth::v0::identity::admin::GetIdentitiesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Admin::Service::UpdateIdentity(::grpc::ServerContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateIdentityRequest* request, ::depot::devtools::auth::v0::identity::admin::UpdateIdentityResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Admin::Service::DeleteIdentity(::grpc::ServerContext* context, const ::depot::devtools::auth::v0::identity::admin::DeleteIdentityRequest* request, ::depot::devtools::auth::v0::identity::admin::DeleteIdentityResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Admin::Service::GetAddresses(::grpc::ServerContext* context, const ::depot::devtools::auth::v0::identity::admin::GetAddressesRequest* request, ::depot::devtools::auth::v0::identity::admin::GetAddressesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Admin::Service::GetAddress(::grpc::ServerContext* context, const ::depot::devtools::auth::v0::identity::admin::GetAddressRequest* request, ::depot::devtools::auth::v0::identity::admin::GetAddressResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Admin::Service::UpdateAddress(::grpc::ServerContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateAddressRequest* request, ::depot::devtools::auth::v0::identity::admin::UpdateAddressResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Admin::Service::GetProfile(::grpc::ServerContext* context, const ::depot::devtools::auth::v0::identity::admin::GetProfileRequest* request, ::depot::devtools::auth::v0::identity::admin::GetProfileResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Admin::Service::UpdateProfile(::grpc::ServerContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateProfileRequest* request, ::depot::devtools::auth::v0::identity::admin::UpdateProfileResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Admin::Service::GetCredentials(::grpc::ServerContext* context, const ::depot::devtools::auth::v0::identity::admin::GetCredentialsRequest* request, ::depot::devtools::auth::v0::identity::admin::GetCredentialsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Admin::Service::UpdateCredential(::grpc::ServerContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateCredentialRequest* request, ::depot::devtools::auth::v0::identity::admin::UpdateCredentialResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Admin::Service::GetIdentityLoginAttempts(::grpc::ServerContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsRequest* request, ::depot::devtools::auth::v0::identity::admin::GetIdentityLoginAttemptsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Admin::Service::CreateConnection(::grpc::ServerContext* context, const ::depot::devtools::auth::v0::identity::admin::CreateConnectionRequest* request, ::depot::devtools::auth::v0::identity::admin::CreateConnectionResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Admin::Service::GetConnections(::grpc::ServerContext* context, const ::depot::devtools::auth::v0::identity::admin::GetConnectionsRequest* request, ::depot::devtools::auth::v0::identity::admin::GetConnectionsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Admin::Service::UpdateConnection(::grpc::ServerContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateConnectionRequest* request, ::depot::devtools::auth::v0::identity::admin::UpdateConnectionResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Admin::Service::DeleteConnection(::grpc::ServerContext* context, const ::depot::devtools::auth::v0::identity::admin::DeleteConnectionRequest* request, ::depot::devtools::auth::v0::identity::admin::DeleteConnectionResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Admin::Service::CreateIdSchema(::grpc::ServerContext* context, const ::depot::devtools::auth::v0::identity::admin::CreateIdSchemaRequest* request, ::depot::devtools::auth::v0::identity::admin::CreateIdSchemaResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Admin::Service::GetIdSchemas(::grpc::ServerContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdSchemasRequest* request, ::depot::devtools::auth::v0::identity::admin::GetIdSchemasResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Admin::Service::GetIdSchema(::grpc::ServerContext* context, const ::depot::devtools::auth::v0::identity::admin::GetIdSchemaRequest* request, ::depot::devtools::auth::v0::identity::admin::GetIdSchemaResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Admin::Service::GetDefaultIdSchema(::grpc::ServerContext* context, const ::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaRequest* request, ::depot::devtools::auth::v0::identity::admin::GetDefaultIdSchemaResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Admin::Service::UpdateIdSchema(::grpc::ServerContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaRequest* request, ::depot::devtools::auth::v0::identity::admin::UpdateIdSchemaResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Admin::Service::MarkDefaultIdSchema(::grpc::ServerContext* context, const ::depot::devtools::auth::v0::identity::admin::MarkDefaultIdSchemaRequest* request, ::depot::devtools::auth::v0::identity::admin::MarkDefaultIdSchemaResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Admin::Service::DeleteIdSchema(::grpc::ServerContext* context, const ::depot::devtools::auth::v0::identity::admin::DeleteIdSchemaRequest* request, ::depot::devtools::auth::v0::identity::admin::DeleteIdSchemaResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Admin::Service::CreateOAuth2Client(::grpc::ServerContext* context, const ::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientRequest* request, ::depot::devtools::auth::v0::identity::admin::CreateOAuth2ClientResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Admin::Service::GetOAuth2Clients(::grpc::ServerContext* context, const ::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsRequest* request, ::depot::devtools::auth::v0::identity::admin::GetOAuth2ClientsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Admin::Service::UpdateOAuth2Client(::grpc::ServerContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientRequest* request, ::depot::devtools::auth::v0::identity::admin::UpdateOAuth2ClientResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Admin::Service::DeleteOAuth2Client(::grpc::ServerContext* context, const ::depot::devtools::auth::v0::identity::admin::DeleteOAuth2ClientRequest* request, ::depot::devtools::auth::v0::identity::admin::DeleteOAuth2ClientResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Admin::Service::GetEmailsSetup(::grpc::ServerContext* context, const ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupRequest* request, ::depot::devtools::auth::v0::identity::admin::GetEmailsSetupResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Admin::Service::UpdateEmailsSetup(::grpc::ServerContext* context, const ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupRequest* request, ::depot::devtools::auth::v0::identity::admin::UpdateEmailsSetupResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Admin::Service::GetUserBaseStatistics(::grpc::ServerContext* context, const ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsRequest* request, ::depot::devtools::auth::v0::identity::admin::GetUserBaseStatisticsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace depot
}  // namespace devtools
}  // namespace auth
}  // namespace v0
}  // namespace identity
}  // namespace admin

